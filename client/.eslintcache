[{"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\index.js":"1","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\ApolloProvider.js":"2","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\App.js":"3","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\CreateProject.js":"4","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\Login.js":"5","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\Register.js":"6","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\ManageUserRoles.js":"7","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\ProjectDetails.js":"8","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\ViewProjectsList.js":"9","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\Users.js":"10","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\AssignUser.js":"11","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\UserTable.js":"12","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\CreateTicket.js":"13","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\UserList.js":"14","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\ProjectTable2.js":"15","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\AssignedPersonnel.js":"16","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\TicketsTable.js":"17","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\SideAndNavbar.js":"18","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\ProjectTable.js":"19","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\TicketsTable2.js":"20","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\util\\hooks.js":"21","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\AssignedPersonnelQuery.js":"22"},{"size":154,"mtime":1616407359919,"results":"23","hashOfConfig":"24"},{"size":675,"mtime":1616407359905,"results":"25","hashOfConfig":"24"},{"size":2356,"mtime":1618060349339,"results":"26","hashOfConfig":"24"},{"size":2369,"mtime":1617628207521,"results":"27","hashOfConfig":"24"},{"size":5562,"mtime":1616407359921,"results":"28","hashOfConfig":"24"},{"size":7309,"mtime":1616407359922,"results":"29","hashOfConfig":"24"},{"size":3244,"mtime":1618112414984,"results":"30","hashOfConfig":"24"},{"size":1936,"mtime":1617955115369,"results":"31","hashOfConfig":"24"},{"size":283,"mtime":1616407359923,"results":"32","hashOfConfig":"24"},{"size":406,"mtime":1616407359922,"results":"33","hashOfConfig":"24"},{"size":3146,"mtime":1618138160461,"results":"34","hashOfConfig":"24"},{"size":3561,"mtime":1616407359911,"results":"35","hashOfConfig":"24"},{"size":6549,"mtime":1618135869852,"results":"36","hashOfConfig":"24"},{"size":1023,"mtime":1618060465997,"results":"37","hashOfConfig":"24"},{"size":3874,"mtime":1616407359910,"results":"38","hashOfConfig":"24"},{"size":5454,"mtime":1618137139410,"results":"39","hashOfConfig":"24"},{"size":4681,"mtime":1618130563279,"results":"40","hashOfConfig":"24"},{"size":4877,"mtime":1616407359910,"results":"41","hashOfConfig":"24"},{"size":5040,"mtime":1616407359909,"results":"42","hashOfConfig":"24"},{"size":4389,"mtime":1617959034496,"results":"43","hashOfConfig":"24"},{"size":414,"mtime":1616407359924,"results":"44","hashOfConfig":"24"},{"size":1039,"mtime":1617005621545,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1vlqf17",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"48"},"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\index.js",[],["105","106"],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\ApolloProvider.js",["107"],"import React from 'react';\r\nimport App from './App';\r\nimport  ApolloClient from 'apollo-client';\r\nimport { InMemoryCache } from '@apollo/client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { setContext } from 'apollo-link-context';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n    uri:'http://localhost:5000'\r\n})\r\n\r\n/*\r\nconst authLink = setContext(()=>{\r\n    const token = localStorage.getItem('jwtToken');\r\n\r\n})\r\n*/\r\n\r\nconst client = new ApolloClient({\r\n    link: httpLink,\r\n    cache: new InMemoryCache()\r\n})\r\n\r\n\r\nexport default (\r\n    <ApolloProvider client={client}>\r\n   <App/> \r\n    </ApolloProvider>\r\n)","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\App.js",[],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\CreateProject.js",["108"],"import React, { useState } from 'react';\r\nimport '../css/createProject.css';\r\nimport '../css/main.css';\r\nimport gql from 'graphql-tag';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\n\r\nfunction CreateProject(props) {\r\n\r\n    const [errors, setErrors]= useState({});\r\n    const {onChange, onSubmit, values}= useForm(createProject, {\r\n        name:'',\r\n        description: ''\r\n    });\r\n    \r\n    const [create, {loading}] = useMutation (CREATE_PROJECT,{\r\n        update(_,  {data}){\r\n            //console.log(\"In the update function of the create Project page\");\r\n            console.log(\"Data from login\",data);\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables:values\r\n    });\r\n    \r\n    function createProject () {\r\n        create();\r\n    }\r\n\r\n return (\r\n<body>\r\n\r\n        <SideAndNavbar/>\r\n          <form onSubmit={onSubmit} class=\"inputForm\">\r\n            <label for=\"name\">Project Name</label>\r\n            <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            name=\"name\" \r\n            placeholder=\"Project name..\" \r\n            autoComplete=\"name\"\r\n            error={errors.name ? true:false}\r\n            value={values.name}\r\n            onChange={onChange}/>\r\n            <label for=\"description\">Project Description</label>\r\n            <textarea \r\n            className=\"description\" \r\n            type=\"text\" \r\n            id=\"description\" \r\n            name=\"description\" \r\n            placeholder=\"Project desc..\" required\r\n            error={errors.description}\r\n            value={values.description}\r\n            onChange={onChange}></textarea>\r\n            <input type=\"submit\" value=\"Create Project\" />\r\n          </form>\r\n          <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                    {Object.values(errors).map(value=>(\r\n                        <li key={value}>{value}</li>\r\n                    ))}\r\n                </ul>\r\n          </div>\r\n   </body>\r\n )\r\n}\r\n\r\nconst CREATE_PROJECT =  gql `\r\nmutation createProject($name: String! $description: String!) {\r\n    createProject(name:$name description: $description) {\r\n        name description\r\n    }     \r\n}`;\r\n\r\nexport default CreateProject;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\Login.js",["109","110","111","112"],"\r\nimport { React, useState}from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../App.css'; \r\nimport { Link } from 'react-router-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from '../util/hooks';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: 300,\r\n      alignContent: \"center\"\r\n    },\r\n    fontType:{\r\n        fontFamily: font,\r\n        fontSize: 16\r\n    },\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(5, 0, 4),\r\n    },\r\n    container:{\r\n        alignItems:\"center\",\r\n        justify:\"center\",\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n\r\n  }));\r\n\r\n\r\n  const font =  \"'Merriweather', serif\";\r\n  \r\n  function Login (props) {\r\n    const [ errors, setErrors ] = useState({});\r\n    const { onChange, onSubmit, values } = useForm(loginUser,{\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const [login, {loading} ] = useMutation(LOGIN_USER, {\r\n        update(_,{data}){\r\n            //console.log(\"In the update function of the login page\");\r\n            //console.log(\"Data from login\",data);\r\n            props.history.push('/ManageUserRoles');\r\n        }, \r\n        onError(err){\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n        }, variables : values\r\n    });\r\n\r\n    function loginUser() {\r\n        login();\r\n    }\r\n\r\n    const history = useHistory();\r\n    function handleClick() {\r\n        history.push(\"/Register\");\r\n    }\r\n  \r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className={useStyles.container} class=\"background\">\r\n            <CssBaseline />\r\n            <div class=\"form\" >\r\n            <div className={useStyles.paper} class=\"innerForm\">\r\n            <Typography component=\"h1\" variant=\"h5\" className={styles.fontType} style={{ marginBottom : \"10px\" }}>\r\n            </Typography>\r\n                <form className={useStyles.form} class=\"formContainer\" onSubmit={onSubmit}>\r\n                    <Grid container spacing={2}>\r\n                       \r\n                        <Grid item xs={12} sm={12} >\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                type=\"text\"\r\n                                autoComplete=\"username\"\r\n                                name=\"username\"\r\n                                error={errors.username ? true: false}\r\n                                value={values.username}\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                error={errors.password ? true: false}\r\n                                value={values.password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={useStyles.submit}\r\n                        color=\"primary\"\r\n                        style={{ marginTop : \"10px\" }}>\r\n                    <Typography component=\"h1\" variant=\"h5\" className={styles.fontType}>\r\n                    Login\r\n                    </Typography>\r\n                    </Button>\r\n                    \r\n                    <a href=\"#\" onClick={handleClick}> Don't have an account? Sign Up ? </a>\r\n                 </form>\r\n                 <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map(value=>(\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div> \r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst LOGIN_USER = gql `\r\nmutation login($username:String! $password: String!) {\r\n    login(username: $username password: $password) { \r\n    id\r\n    email\r\n    username\r\n    creationTime\r\n    }\r\n}`;\r\n\r\nexport default Login;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\Register.js",["113","114"],"import {React, useState, useContext }from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport  gql  from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: 300,\r\n      alignContent: \"center\"\r\n    },\r\n    fontType:{\r\n        fontFamily: font,\r\n        fontSize: 16\r\n    },\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(5, 0, 4),\r\n    },\r\n    container:{\r\n        alignItems:\"center\",\r\n        justify:\"center\",\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n\r\n  }));\r\n\r\n  const font =  \"'Merriweather', serif\";  \r\n  function Register (props) {\r\n\r\n    const [ errors, setErrors ] = useState({});\r\n    const { onChange, onSubmit, values} = useForm (registerUser, {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n\r\n    const [addUser, { loading }] = useMutation (REGISTER_USER,{\r\n        update(_, { data}){\r\n            //console.log(data)\r\n            props.history.push('/');\r\n        },\r\n        onError(err){\r\n           setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n           //console.log(\"setting erorrs:\",errors)\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    //console.log(\"Adduser\", addUser);\r\n    /*\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n        update(_, { data: { register: userData }}){\r\n              console.log(userData)\r\n              props.history.push('/');\r\n          },\r\n          onError(err){\r\n             setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n          },\r\n          variables: values\r\n      });\r\n      */\r\n    \r\n    function registerUser() {\r\n        addUser();\r\n    }\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className={useStyles.container} class=\"background\">\r\n            <CssBaseline />\r\n            <div className=\"form\">\r\n            <div className={useStyles.paper} class=\"innerForm\">\r\n            <Typography component=\"h1\" variant=\"h5\" className={styles.fontType} style={{ marginBottom : \"10px\" }}>\r\n            </Typography>\r\n                <form className={useStyles.form} class=\"formContainer\" onSubmit={onSubmit}>\r\n                    <Grid container spacing={2}>\r\n                       \r\n                        <Grid item xs={12} sm={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Name\"\r\n                                type=\"text\"\r\n                                error = { errors.username ? true:false }\r\n                                value = { values.username }\r\n                                onChange = { onChange }\r\n                                autoComplete=\"username\"\r\n                                name=\"username\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                error = { errors.email ? true : false}\r\n                                value = { values.email }\r\n                                onChange= { onChange }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                autoComplete=\"password\"\r\n                                error = { errors.password ? true : false}\r\n                                value = { values.password }\r\n                                onChange = { onChange }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"confirmPassword\"\r\n                                name=\"confirmPassword\"\r\n                                autoComplete=\"confirmPassword\"\r\n                                error={ errors.confirmPassword ? true:false }\r\n                                value={ values.confirmPassword }\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={useStyles.submit}\r\n                        style={{ marginTop : \"10px\" }}>\r\n                    <Typography component=\"h1\" variant=\"h5\" className={styles.fontType}>\r\n                    Register\r\n                    </Typography>\r\n                    </Button>\r\n                </form>\r\n                <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map(value=>(\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n        email: $email\r\n      }\r\n    ) {\r\n      username\r\n      email\r\n      creationTime\r\n    }\r\n  }`;\r\n\r\nexport default Register;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\ManageUserRoles.js",["115","116","117","118","119","120"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../css/main.css';\r\nimport UserTable from '../components/UserTable';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nfunction ManageUserRoles(props) {\r\n\r\n  const [errors, setErrors]= useState({});\r\n  const [usersValue, setUserValue] = useState({});\r\n\r\n  const {onChange, onSubmit, values}= useForm(assignRole, {\r\n      name:'',\r\n      role: ''\r\n  });\r\n  \r\n  const { loading, data } = useQuery(FETCH_USERS_QUERY);\r\n  \r\n  const [assign, {loading:assignLoading}] = useMutation (ASSIGN_ROLE,{\r\n      update(_,  {data}){\r\n     \r\n      },\r\n      onError(err) {\r\n          //.graphQLErrors[0].extensions.exception.errors\r\n         // setErrors(err);\r\n          console.log(\"Errors from create tickets\", err);\r\n      },\r\n      variables:values\r\n  });\r\n  \r\n  \r\n  var rows= ['Select the user'];\r\n  if (loading) \r\n       return <p>Loading...</p>;\r\n  else {\r\n      var length = data.getUsers.length;\r\n      for(var i=0;i<length;i++)\r\n      {\r\n          rows.push(data.getUsers[i].username)\r\n      }    \r\n  }\r\n\r\n  function assignRole () {\r\n    assign();\r\n}\r\n\r\n\r\n  return (\r\n    <body>\r\n    <SideAndNavbar/>\r\n    <form onSubmit={onSubmit} class=\"inputForm\">\r\n      <div id=\"main\" class=\"main\">\r\n        <div class=\"grid-item\">\r\n          <p>Manage User Roles</p>\r\n          <div class=\"custom-select\">\r\n            <label for=\"cars\" class=\"heading\" className=\"part1\">Select 1 or more Users:</label>\r\n            <br />\r\n            <select id=\"name\" name=\"name\" onChange={onChange} value={values.name}>\r\n         {rows.map(time => {\r\n           return (\r\n             <option value={time}> {time} </option>\r\n           )\r\n         })}\r\n      </select>\r\n          </div>\r\n          \r\n          <div class=\"custom-select2\">\r\n            <label for=\"cars\" class=\"heading\" className=\"part2\">Select the Role to assign:</label>\r\n            <br />\r\n            <select id=\"role\" name=\"role\" onChange={onChange} value={values.role}>\r\n              <option value=\"0\">--Select Role/None--:</option>\r\n              <option value=\"Admin\">Admin</option>\r\n              <option value=\"Demo Admin\">Demo_Admin</option>\r\n              <option value=\"Demo Developer\">Demo_Developer</option>\r\n              <option value=\"Demo Project Manager\">Demo_Project Manager</option>\r\n            </select>\r\n          </div>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Assign\r\n          </Button>\r\n        </div>\r\n       \r\n        <div class=\"grid-item\">\r\n          <div class=\"table\">\r\n            <UserTable class=\"userTable\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      </form>\r\n\r\n    </body>\r\n  );\r\n}\r\n\r\nconst ASSIGN_ROLE = gql`\r\n  mutation  assignRole ($name: String! $role: String!){\r\n    assignRole (name: $name role: $role) \r\n  }`;\r\n\r\n  const FETCH_USERS_QUERY = gql`\r\n{\r\n  getUsers {\r\n  username\r\n  id\r\n  email\r\n  creationTime\r\n  role\r\n  access\r\n}\r\n}`;\r\n\r\nexport default ManageUserRoles;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\ProjectDetails.js",["121","122","123","124"],"import React, { useState } from 'react';\r\nimport '../css/createProject.css';\r\n\r\n\r\n\r\nimport '../css/main.css';\r\nimport gql from 'graphql-tag';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport ProjectTable2 from '../components/ProjectTable2';\r\nimport AssignedPersonnel from '../components/AssignedPersonnel';\r\nimport TicketsTable2 from '../components/TicketsTable2';\r\nimport '../css/projectDetails.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ProjectDetails(props) {\r\n  const history = useHistory();\r\n//console.log(\"Props\", props.history.location.state.indexValue);\r\n//console.log(\"Props 2:\", props.history.location.state.index);\r\nvar value =  props.history.location.state.index;\r\n//console.log(\"Props\", props.history.location.state.array[value - 1]);\r\n\r\nfunction AssignUser() {\r\n  //history.push('/AssignUser');\r\n  history.push({\r\n    pathname: '/AssignUser',\r\n    search: '?update=true',  // query string\r\n    state: {  // location state\r\n      index: value, \r\n    },\r\n  }); \r\n\r\n  console.log(\"Value from index\", value);\r\n}\r\n\r\nfunction CreateTicket() {\r\n  history.push('/CreateTicket');\r\n}\r\n\r\n return (\r\n<body>\r\n    <SideAndNavbar/>\r\n    <div className=\"firstDiv\">\r\n    <ProjectTable2 index={value}/> \r\n    </div>\r\n    <div className=\"main\">\r\n    <div classsName=\"firstmain\">\r\n    <AssignedPersonnel index={value}/>\r\n    </div>\r\n    <div className=\"secondMain\">\r\n    <TicketsTable2 className=\"ticketsTable\"/>\r\n    </div>\r\n    </div>\r\n    <div className=\"bottomDiv\">\r\n      <Button variant=\"contained\" color=\"primary\" onClick={AssignUser} className=\"btn1\">Assign User</Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={CreateTicket} className=\"btn2\">Create Ticket</Button>\r\n    </div>\r\n   </body>\r\n )\r\n}\r\n\r\n\r\nexport default ProjectDetails;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\ViewProjectsList.js",["125"],"import React from 'react';\r\nimport ProjectTable from '../components/ProjectTable';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\n\r\n function ViewProjectsList() {\r\n\r\n  return (\r\n    <div>\r\n        <ProjectTable/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ViewProjectsList;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\Users.js",["126","127"],"import React from 'react';\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\nfunction Users () {\r\n    const { loading, data: { getUsers:users } } = useQuery(FETCH_USERS_QUERY);\r\n    return (\r\n       <div>\r\n       </div>\r\n        );\r\n}\r\n\r\nconst FETCH_USERS_QUERY = gql `\r\n{\r\n  getUsers{\r\n  id\r\n  creationTime\r\n  username\r\n  role\r\n  access\r\n}\r\n}\r\n\r\n`;\r\n\r\nexport default Users;\r\n","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\AssignUser.js",["128","129","130","131","132","133","134","135"],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\UserTable.js",[],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\pages\\CreateTicket.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\UserList.js",["151"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\n\r\nfunction UserList() {\r\n    const classes = useStyles();\r\n    const { loading, data } = useQuery(FETCH_USERS_QUERY);\r\n    var rows= ['Select the user'];\r\n    if (loading) \r\n         return <p>Loading...</p>;\r\n    else {\r\n        var length = data.getUsers.length;\r\n        for(var i=0;i<length;i++)\r\n        {\r\n            rows.push(data.getUsers[i].username)\r\n        }    \r\n    }\r\n    return (\r\n        <div>\r\n         <select>\r\n         {rows.map(time => {\r\n           return (\r\n             <option value={time}> {time} </option>\r\n           )\r\n         })}\r\n    </select>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FETCH_USERS_QUERY = gql`\r\n{\r\n  getUsers{\r\n  username\r\n  id\r\n  email\r\n  creationTime\r\n  role\r\n  access\r\n}\r\n}`;\r\n\r\nexport default UserList;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\ProjectTable2.js",["152","153","154"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '500px',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n];\r\n\r\nfunction createData(name, description) {\r\n  return { name, description };\r\n}\r\n\r\nfunction ProjectTable2(props) {\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const index = props.index-1;\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    //var length = data.getProjects.length;\r\n    //for (var i = 0; i < ; i++) {\r\n      rows[index] = createData(data.getProjects[index].name, data.getProjects[index].description)\r\n    //}\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  return (\r\n    <body>\r\n      <div className=\"Table\">\r\n        <div id=\"main\" class=\"main\">\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                                {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getProjects{\r\n  name\r\n  description\r\n}\r\n}`;\r\n\r\n\r\n\r\n\r\n\r\nexport default ProjectTable2;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\AssignedPersonnel.js",["155","156","157","158","159","160","161","162","163","164","165"],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\TicketsTable.js",["166","167","168"],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\SideAndNavbar.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport '../css/main.css';\r\nimport UserTable from './UserTable';\r\nimport grid from '../icons/grid-outline.svg';\r\nimport homeIcon from '../icons/home-outline.svg';\r\nimport layers from '../icons/layers-outline.svg';\r\nimport list from '../icons/list-outline.svg';\r\nimport peopleCirle from '../icons/people-circle-outline.svg';\r\n//import peopleOutline from '../icons/people-outline.svg';\r\nimport personAddOutline from '../icons/person-add-outline.svg';\r\nimport personCircleOutline from '../icons/person-circle-outline.svg';\r\n//import personOutline from 'person-outline.svg';\r\nimport reorderFourOutline from '../icons/reorder-four-outline.svg';\r\n//import users from 'users.svg';\r\nimport UserList from './UserList';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SideAndNavbar(props) {\r\n  const history = useHistory();\r\n \r\n  function openNav(e) {\r\n    document.getElementById(\"mySidebar\").style.width = \"250px\";\r\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\r\n\r\n    document.getElementById('navName').style.fontSize = '0.75rem';\r\n    document.getElementById('navName1').style.fontSize = '0.75rem';\r\n    document.getElementById('navName2').style.fontSize = '0.75rem';\r\n    document.getElementById('navName3').style.fontSize = '0.75rem';\r\n    document.getElementById('navName4').style.fontSize = '0.75rem';\r\n    document.getElementById('navName5').style.fontSize = '';\r\n\r\n    document.getElementById('grid').style.width = '30px';\r\n    document.getElementById('grid1').style.width = '30px';\r\n    document.getElementById('grid2').style.width = '30px';\r\n    document.getElementById('grid3').style.width = '30px';\r\n    document.getElementById('grid4').style.width = '30px';\r\n    document.getElementById('grid5').style.width = '30px';\r\n  }\r\n\r\n  function closeNav(e) {\r\n    document.getElementById('mySidebar').style.width = '60px';\r\n    document.getElementById('main').style.marginLeft = '60px';\r\n\r\n    document.getElementById('navName').style.fontSize = '0px';\r\n    document.getElementById('navName1').style.fontSize = '0px';\r\n    document.getElementById('navName2').style.fontSize = '0px';\r\n    document.getElementById('navName3').style.fontSize = '0px';\r\n    document.getElementById('navName4').style.fontSize = '0px';\r\n    document.getElementById('navName5').style.fontSize = '0px';\r\n\r\n    document.getElementById('grid').style.width = '30px';\r\n    document.getElementById('grid1').style.width = '30px';\r\n    document.getElementById('grid2').style.width = '30px';\r\n    document.getElementById('grid3').style.width = '30px';\r\n    document.getElementById('grid4').style.width = '30px';\r\n    document.getElementById('grid5').style.width = '30px';\r\n  }\r\n  \r\n  function HandleOnClickProjectTable() {\r\n    history.push('/ProjectTable');\r\n  }\r\n\r\n  function HandleOnClickTicketsTable() {\r\n    history.push('/TicketsTable');\r\n  }\r\n  \r\n\r\n  function HandleOnClickManageUserRoles() {\r\n    history.push('/ManageUserRoles');\r\n  }\r\n  return (\r\n    <body>\r\n      <div id=\"mySidebar\" class=\"sidebar\">\r\n        <a href=\"#\" className=\"section\">\r\n          <img class=\"grid\" id=\"grid\" src={grid} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName\">Dashboard Home</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickManageUserRoles}>\r\n          <img class=\"grid\" id=\"grid1\" src={homeIcon} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName1\">Manage Role Assignment</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\">\r\n          <img class=\"grid\" id=\"grid2\" src={peopleCirle} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName2\">Manage Project Users</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickProjectTable}>\r\n          <img class=\"grid\" id=\"grid3\" src={layers} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName3\">My Projects</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickTicketsTable}>\r\n          <img class=\"grid\" id=\"grid4\" src={layers} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName4\">My Tickets</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\">\r\n          <img class=\"grid\" id=\"grid5\" src={personAddOutline} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName5\">User Profile</span>\r\n        </a>\r\n        <a className=\"section\" href=\"#section\" onClick={openNav}>\r\n          Open Sidebar\r\n        </a>\r\n        <a className=\"section\" href=\"#section\" onClick={closeNav}>\r\n          Close Sidebar\r\n          </a>\r\n        </div>\r\n      <div class=\"topnav\">\r\n        <a class=\"active\" href=\"#home\">Name</a>\r\n        <a class=\"active\" href=\"#home\">Home</a>\r\n        <a href=\"#about\">Logout</a>\r\n      </div>\r\n      <div id=\"main\" class=\"main\">\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default SideAndNavbar;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\ProjectTable.js",["187","188","189","190","191","192","193"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  {\r\n    id: 'details',\r\n    label: 'Details',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\nfunction createData(name, description, details) {\r\n  return { name, description, details };\r\n}\r\n\r\nfunction ProjectTable() {\r\n\r\n  var i;\r\n  var valueNumber = 0;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    var length = data.getProjects.length;\r\n    for (var i = 0; i < length; i++) {\r\n      rows[i] = createData(data.getProjects[i].name, data.getProjects[i].description, 'Edit Details')\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  function HandleOnClick(props, rowsArray) {\r\n   \r\n    history.push({\r\n      pathname: '/ProjectDetails',\r\n      search: '?update=true',  // query string\r\n      state: {  // location state\r\n        index: props, \r\n        array: rowsArray\r\n      },\r\n    }); \r\n\r\n  }\r\n\r\n  function AssignUser() {\r\n    //history.push('/AssignUser');\r\n    history.push({\r\n      pathname: '/AssignUser',\r\n      search: '?update=true',  // query string\r\n      state: {  // location state\r\n        update: true, \r\n      },\r\n    }); \r\n  }\r\n\r\n  function CreateTicket() {\r\n    history.push('/CreateTicket');\r\n  }\r\n\r\n  function RenderElement(value, value2, value3) {\r\n    var one = \"CreateProject\";\r\n    if (value2.id === \"details\") {\r\n      return <a  onClick={() => HandleOnClick(value3, rows)} className=\"link\"> {value} </a>;\r\n    }\r\n    else {\r\n      return value;\r\n    }\r\n  }\r\n  return (\r\n    <body>\r\n      <div>\r\n        <SideAndNavbar></SideAndNavbar>\r\n        <div id=\"main\" className=\"main\">\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    valueNumber++;\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {RenderElement(value, column, valueNumber)}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>    \r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getProjects{\r\n  name\r\n  description\r\n  id\r\n}\r\n}`;\r\n\r\n\r\n\r\nexport default ProjectTable;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\TicketsTable2.js",["194","195","196","197"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '500px',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 100 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  { id: 'developer', label: 'Developer', minWidth: 100 },\r\n  { id: 'status', label: 'Status', minWidth: 100 },\r\n  { id: 'created', label: 'Created', minWidth: 100 },\r\n];\r\n\r\nfunction createData(name, description, developer, status, created) {\r\n  return { name, description, developer, status, created };\r\n}\r\n\r\nfunction TicketsTable() {\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    var length = data.getProjects.length;\r\n   \r\n    for (var i = 0; i < length; i++) {\r\n        \r\n      /*var length2 = data.getProjects[i].tickets.length;\r\n        for(var j = 0; j < length2; j++)\r\n        {\r\n            rows[i] = createData(data.getProjects[i].tickets[j].title, data.getProjects[i].tickets[j].description\r\n                ,data.getProjects[i].tickets[j].assignedDeveloper, data.getProjects[i].tickets[j].status,\r\n                data.getProjects[i].tickets[j].createdAt);\r\n        }\r\n        */\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <body>\r\n      <div>\r\n        <div id=\"main\" class=\"main\">\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <p>Tickets for the Project</p>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}>\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                                {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\ngetProjects{\r\n  name\r\n  description\r\n  id\r\n}  \r\n}`;\r\n\r\nexport default TicketsTable;","C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\util\\hooks.js",[],"C:\\Users\\Usman Zafar\\Desktop\\bugTracker\\client\\src\\components\\AssignedPersonnelQuery.js",["198","199","200","201","202"],"import React, {useCallback, useState} from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AssignedPersonnelQuery(props) {\r\n  \r\n  \r\n  var index = props.index - 1;\r\n  const history = useHistory();\r\n  const [markersArray, setMarkersArray] = useState([]);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n  \r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    var length = data.getProjects.length;\r\n   var length3 = data.getProjects[index].users.length;\r\n   for (var k = 0; k < length3; k++)\r\n    {\r\n      var myName = (data.getProjects[index].users[k]);\r\n          var myName2 = '\"' + myName + '\"';  \r\n          JSON.stringify(myName2); \r\n          markersArray.push({\r\n            name: myName2\r\n          });\r\n    }\r\n    console.log(\"MarkersArray\", markersArray);\r\n  }\r\n}\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\ngetProjects{\r\n  name\r\n  description\r\n  id\r\n  users\r\n  tickets\r\n}  \r\n}`;\r\n\r\n\r\nexport default AssignedPersonnelQuery;",{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":20},{"ruleId":"207","severity":1,"message":"211","line":17,"column":21,"nodeType":"209","messageId":"210","endLine":17,"endColumn":28},{"ruleId":"207","severity":1,"message":"212","line":11,"column":10,"nodeType":"209","messageId":"210","endLine":11,"endColumn":14},{"ruleId":"207","severity":1,"message":"213","line":12,"column":27,"nodeType":"209","messageId":"210","endLine":12,"endColumn":33},{"ruleId":"207","severity":1,"message":"211","line":69,"column":20,"nodeType":"209","messageId":"210","endLine":69,"endColumn":27},{"ruleId":"214","severity":1,"message":"215","line":141,"column":21,"nodeType":"216","endLine":141,"endColumn":55},{"ruleId":"207","severity":1,"message":"217","line":1,"column":26,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"211","line":66,"column":23,"nodeType":"209","messageId":"210","endLine":66,"endColumn":30},{"ruleId":"207","severity":1,"message":"218","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":20},{"ruleId":"207","severity":1,"message":"219","line":14,"column":10,"nodeType":"209","messageId":"210","endLine":14,"endColumn":16},{"ruleId":"207","severity":1,"message":"220","line":14,"column":18,"nodeType":"209","messageId":"210","endLine":14,"endColumn":27},{"ruleId":"207","severity":1,"message":"221","line":15,"column":10,"nodeType":"209","messageId":"210","endLine":15,"endColumn":20},{"ruleId":"207","severity":1,"message":"222","line":15,"column":22,"nodeType":"209","messageId":"210","endLine":15,"endColumn":34},{"ruleId":"207","severity":1,"message":"223","line":24,"column":27,"nodeType":"209","messageId":"210","endLine":24,"endColumn":40},{"ruleId":"207","severity":1,"message":"224","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"225","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":11},{"ruleId":"207","severity":1,"message":"226","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":21},{"ruleId":"207","severity":1,"message":"227","line":10,"column":10,"nodeType":"209","messageId":"210","endLine":10,"endColumn":17},{"ruleId":"207","severity":1,"message":"228","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":21},{"ruleId":"207","severity":1,"message":"211","line":6,"column":13,"nodeType":"209","messageId":"210","endLine":6,"endColumn":20},{"ruleId":"207","severity":1,"message":"229","line":6,"column":39,"nodeType":"209","messageId":"210","endLine":6,"endColumn":44},{"ruleId":"207","severity":1,"message":"230","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":17},{"ruleId":"207","severity":1,"message":"231","line":9,"column":19,"nodeType":"209","messageId":"210","endLine":9,"endColumn":23},{"ruleId":"207","severity":1,"message":"232","line":21,"column":11,"nodeType":"209","messageId":"210","endLine":21,"endColumn":18},{"ruleId":"207","severity":1,"message":"233","line":22,"column":11,"nodeType":"209","messageId":"210","endLine":22,"endColumn":18},{"ruleId":"207","severity":1,"message":"234","line":23,"column":12,"nodeType":"209","messageId":"210","endLine":23,"endColumn":21},{"ruleId":"207","severity":1,"message":"235","line":23,"column":22,"nodeType":"209","messageId":"210","endLine":23,"endColumn":34},{"ruleId":"207","severity":1,"message":"219","line":30,"column":13,"nodeType":"209","messageId":"210","endLine":30,"endColumn":19},{"ruleId":"207","severity":1,"message":"236","line":32,"column":24,"nodeType":"209","messageId":"210","endLine":32,"endColumn":32},{"ruleId":"207","severity":1,"message":"220","line":12,"column":20,"nodeType":"209","messageId":"210","endLine":12,"endColumn":29},{"ruleId":"207","severity":1,"message":"211","line":24,"column":21,"nodeType":"209","messageId":"210","endLine":24,"endColumn":28},{"ruleId":"207","severity":1,"message":"237","line":36,"column":20,"nodeType":"209","messageId":"210","endLine":36,"endColumn":32},{"ruleId":"207","severity":1,"message":"238","line":37,"column":20,"nodeType":"209","messageId":"210","endLine":37,"endColumn":35},{"ruleId":"239","severity":1,"message":"240","line":55,"column":21,"nodeType":"209","messageId":"241","endLine":55,"endColumn":22},{"ruleId":"239","severity":1,"message":"240","line":69,"column":18,"nodeType":"209","messageId":"241","endLine":69,"endColumn":19},{"ruleId":"239","severity":1,"message":"242","line":74,"column":13,"nodeType":"209","messageId":"241","endLine":74,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":79,"column":21,"nodeType":"209","messageId":"241","endLine":79,"endColumn":22},{"ruleId":"239","severity":1,"message":"243","line":80,"column":17,"nodeType":"209","messageId":"241","endLine":80,"endColumn":20},{"ruleId":"239","severity":1,"message":"244","line":81,"column":17,"nodeType":"209","messageId":"241","endLine":81,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":123,"column":13,"nodeType":"247","endLine":123,"endColumn":35},{"ruleId":"245","severity":1,"message":"246","line":123,"column":36,"nodeType":"247","endLine":123,"endColumn":60},{"ruleId":"245","severity":1,"message":"246","line":138,"column":13,"nodeType":"247","endLine":138,"endColumn":22},{"ruleId":"245","severity":1,"message":"246","line":139,"column":13,"nodeType":"247","endLine":139,"endColumn":24},{"ruleId":"245","severity":1,"message":"246","line":148,"column":25,"nodeType":"247","endLine":148,"endColumn":38},{"ruleId":"207","severity":1,"message":"233","line":16,"column":11,"nodeType":"209","messageId":"210","endLine":16,"endColumn":18},{"ruleId":"207","severity":1,"message":"248","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":27},{"ruleId":"207","severity":1,"message":"228","line":12,"column":8,"nodeType":"209","messageId":"210","endLine":12,"endColumn":21},{"ruleId":"207","severity":1,"message":"232","line":36,"column":9,"nodeType":"209","messageId":"210","endLine":36,"endColumn":16},{"ruleId":"207","severity":1,"message":"248","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":27},{"ruleId":"207","severity":1,"message":"228","line":12,"column":8,"nodeType":"209","messageId":"210","endLine":12,"endColumn":21},{"ruleId":"207","severity":1,"message":"226","line":15,"column":10,"nodeType":"209","messageId":"210","endLine":15,"endColumn":21},{"ruleId":"207","severity":1,"message":"249","line":16,"column":8,"nodeType":"209","messageId":"210","endLine":16,"endColumn":13},{"ruleId":"207","severity":1,"message":"250","line":35,"column":10,"nodeType":"209","messageId":"210","endLine":35,"endColumn":20},{"ruleId":"207","severity":1,"message":"251","line":41,"column":7,"nodeType":"209","messageId":"210","endLine":41,"endColumn":15},{"ruleId":"207","severity":1,"message":"252","line":42,"column":7,"nodeType":"209","messageId":"210","endLine":42,"endColumn":12},{"ruleId":"207","severity":1,"message":"232","line":43,"column":9,"nodeType":"209","messageId":"210","endLine":43,"endColumn":16},{"ruleId":"207","severity":1,"message":"253","line":47,"column":11,"nodeType":"209","messageId":"210","endLine":47,"endColumn":23},{"ruleId":"207","severity":1,"message":"254","line":47,"column":25,"nodeType":"209","messageId":"210","endLine":47,"endColumn":40},{"ruleId":"207","severity":1,"message":"220","line":49,"column":19,"nodeType":"209","messageId":"210","endLine":49,"endColumn":28},{"ruleId":"207","severity":1,"message":"248","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":27},{"ruleId":"207","severity":1,"message":"250","line":34,"column":10,"nodeType":"209","messageId":"210","endLine":34,"endColumn":20},{"ruleId":"207","severity":1,"message":"232","line":40,"column":9,"nodeType":"209","messageId":"210","endLine":40,"endColumn":16},{"ruleId":"207","severity":1,"message":"218","line":1,"column":10,"nodeType":"209","messageId":"210","endLine":1,"endColumn":20},{"ruleId":"207","severity":1,"message":"255","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":17},{"ruleId":"207","severity":1,"message":"256","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":12},{"ruleId":"207","severity":1,"message":"257","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":27},{"ruleId":"207","severity":1,"message":"258","line":13,"column":8,"nodeType":"209","messageId":"210","endLine":13,"endColumn":26},{"ruleId":"207","severity":1,"message":"259","line":15,"column":8,"nodeType":"209","messageId":"210","endLine":15,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":74,"column":9,"nodeType":"216","endLine":74,"endColumn":41},{"ruleId":"260","severity":1,"message":"261","line":75,"column":11,"nodeType":"216","endLine":75,"endColumn":67},{"ruleId":"214","severity":1,"message":"215","line":78,"column":9,"nodeType":"216","endLine":78,"endColumn":80},{"ruleId":"260","severity":1,"message":"261","line":79,"column":11,"nodeType":"216","endLine":79,"endColumn":72},{"ruleId":"214","severity":1,"message":"215","line":82,"column":9,"nodeType":"216","endLine":82,"endColumn":41},{"ruleId":"260","severity":1,"message":"261","line":83,"column":11,"nodeType":"216","endLine":83,"endColumn":75},{"ruleId":"214","severity":1,"message":"215","line":86,"column":9,"nodeType":"216","endLine":86,"endColumn":77},{"ruleId":"260","severity":1,"message":"261","line":87,"column":11,"nodeType":"216","endLine":87,"endColumn":70},{"ruleId":"214","severity":1,"message":"215","line":90,"column":9,"nodeType":"216","endLine":90,"endColumn":77},{"ruleId":"260","severity":1,"message":"261","line":91,"column":11,"nodeType":"216","endLine":91,"endColumn":70},{"ruleId":"214","severity":1,"message":"215","line":94,"column":9,"nodeType":"216","endLine":94,"endColumn":41},{"ruleId":"260","severity":1,"message":"261","line":95,"column":11,"nodeType":"216","endLine":95,"endColumn":80},{"ruleId":"207","severity":1,"message":"248","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":27},{"ruleId":"207","severity":1,"message":"262","line":15,"column":8,"nodeType":"209","messageId":"210","endLine":15,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":55,"column":14,"nodeType":"209","messageId":"241","endLine":55,"endColumn":15},{"ruleId":"207","severity":1,"message":"263","line":82,"column":12,"nodeType":"209","messageId":"210","endLine":82,"endColumn":22},{"ruleId":"207","severity":1,"message":"264","line":93,"column":12,"nodeType":"209","messageId":"210","endLine":93,"endColumn":24},{"ruleId":"207","severity":1,"message":"265","line":98,"column":9,"nodeType":"209","messageId":"210","endLine":98,"endColumn":12},{"ruleId":"214","severity":1,"message":"266","line":100,"column":14,"nodeType":"216","endLine":100,"endColumn":79},{"ruleId":"207","severity":1,"message":"248","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":27},{"ruleId":"207","severity":1,"message":"228","line":12,"column":8,"nodeType":"209","messageId":"210","endLine":12,"endColumn":21},{"ruleId":"207","severity":1,"message":"250","line":33,"column":10,"nodeType":"209","messageId":"210","endLine":33,"endColumn":20},{"ruleId":"207","severity":1,"message":"232","line":39,"column":9,"nodeType":"209","messageId":"210","endLine":39,"endColumn":16},{"ruleId":"207","severity":1,"message":"248","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":27},{"ruleId":"207","severity":1,"message":"232","line":9,"column":9,"nodeType":"209","messageId":"210","endLine":9,"endColumn":16},{"ruleId":"207","severity":1,"message":"254","line":10,"column":24,"nodeType":"209","messageId":"210","endLine":10,"endColumn":39},{"ruleId":"207","severity":1,"message":"267","line":13,"column":7,"nodeType":"209","messageId":"210","endLine":13,"endColumn":11},{"ruleId":"207","severity":1,"message":"268","line":17,"column":9,"nodeType":"209","messageId":"210","endLine":17,"endColumn":15},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'setContext' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'Link' is defined but never used.","'Router' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'makeStyles' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'usersValue' is assigned a value but never used.","'setUserValue' is assigned a value but never used.","'assignLoading' is assigned a value but never used.","'useState' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'useForm' is defined but never used.","'SideAndNavbar' is defined but never used.","'users' is assigned a value but never used.","'Message' is defined but never used.","'Form' is defined but never used.","'history' is assigned a value but never used.","'classes' is assigned a value but never used.","'formError' is assigned a value but never used.","'setFormError' is assigned a value but never used.","'loading1' is assigned a value but never used.","'usersloading' is assigned a value but never used.","'projectsloading' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'select' is already defined.","'opt' is already defined.","'el' is already defined.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useCallback' is defined but never used.","'query' is defined but never used.","'createData' is defined but never used.","'indexVal' is assigned a value but never used.","'index' is assigned a value but never used.","'markersArray' is assigned a value but never used.","'setMarkersArray' is assigned a value but never used.","'UserTable' is defined but never used.","'list' is defined but never used.","'personCircleOutline' is defined but never used.","'reorderFourOutline' is defined but never used.","'UserList' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Button' is defined but never used.","'AssignUser' is defined but never used.","'CreateTicket' is defined but never used.","'one' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'rows' is assigned a value but never used.","'length' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]