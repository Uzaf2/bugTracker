[{"/Users/usmanzafar/Desktop/bugTracker/client/src/index.js":"1","/Users/usmanzafar/Desktop/bugTracker/client/src/ApolloProvider.js":"2","/Users/usmanzafar/Desktop/bugTracker/client/src/App.js":"3","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Login.js":"4","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateProject.js":"5","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Register.js":"6","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/AssignUser.js":"7","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Users.js":"8","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ManageUserRoles.js":"9","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateTicket.js":"10","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable.js":"11","/Users/usmanzafar/Desktop/bugTracker/client/src/components/SideAndNavbar.js":"12","/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserTable.js":"13","/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable.js":"14","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnel.js":"15","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnelQuery.js":"16","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable2.js":"17","/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserList.js":"18","/Users/usmanzafar/Desktop/bugTracker/client/src/util/hooks.js":"19","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Accounts.js":"20","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Dashboard.js":"21","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketStatusBarChart.js":"22","/Users/usmanzafar/Desktop/bugTracker/client/src/components/DeveloperTicketsPieChart.js":"23","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketTypePieChart.js":"24","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketPriorityBarChart.js":"25","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ManageProjectUsers.js":"26","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ProjectUserAssign.js":"27","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/AssignUser2.js":"28","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/TicketDetails.js":"29","/Users/usmanzafar/Desktop/bugTracker/client/src/context/auth.js":"30","/Users/usmanzafar/Desktop/bugTracker/client/src/util/ProtectedRoute.js":"31","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketDetailsComponent.js":"32","/Users/usmanzafar/Desktop/bugTracker/client/src/util/graphql.js":"33","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ProjectDetails.js":"34","/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable2.js":"35","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnel2.js":"36","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/TicketDetailsPage.js":"37","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AddComment.js":"38","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/DisplayComments.js":"39","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/UserProfile.js":"40"},{"size":149,"mtime":1619586322423,"results":"41","hashOfConfig":"42"},{"size":895,"mtime":1619844131640,"results":"43","hashOfConfig":"42"},{"size":4276,"mtime":1621677042461,"results":"44","hashOfConfig":"42"},{"size":6453,"mtime":1621692192380,"results":"45","hashOfConfig":"42"},{"size":4076,"mtime":1621741087644,"results":"46","hashOfConfig":"42"},{"size":7165,"mtime":1621253746094,"results":"47","hashOfConfig":"42"},{"size":5017,"mtime":1621137019339,"results":"48","hashOfConfig":"42"},{"size":406,"mtime":1619586263040,"results":"49","hashOfConfig":"42"},{"size":4877,"mtime":1621686228876,"results":"50","hashOfConfig":"42"},{"size":9205,"mtime":1621687171686,"results":"51","hashOfConfig":"42"},{"size":5873,"mtime":1621338719284,"results":"52","hashOfConfig":"42"},{"size":6276,"mtime":1621684704076,"results":"53","hashOfConfig":"42"},{"size":3946,"mtime":1621593734345,"results":"54","hashOfConfig":"42"},{"size":6513,"mtime":1621673446627,"results":"55","hashOfConfig":"42"},{"size":5178,"mtime":1621743063002,"results":"56","hashOfConfig":"42"},{"size":996,"mtime":1618575330299,"results":"57","hashOfConfig":"58"},{"size":5264,"mtime":1621742885704,"results":"59","hashOfConfig":"42"},{"size":1023,"mtime":1618575330300,"results":"60","hashOfConfig":"58"},{"size":414,"mtime":1619586263058,"results":"61","hashOfConfig":"42"},{"size":5216,"mtime":1621691471362,"results":"62","hashOfConfig":"42"},{"size":1247,"mtime":1619586263035,"results":"63","hashOfConfig":"42"},{"size":1892,"mtime":1619693152125,"results":"64","hashOfConfig":"42"},{"size":2726,"mtime":1619693087368,"results":"65","hashOfConfig":"42"},{"size":1957,"mtime":1619693158633,"results":"66","hashOfConfig":"42"},{"size":1789,"mtime":1619693125207,"results":"67","hashOfConfig":"42"},{"size":5405,"mtime":1621136851503,"results":"68","hashOfConfig":"42"},{"size":2458,"mtime":1621171842572,"results":"69","hashOfConfig":"42"},{"size":5032,"mtime":1621137034847,"results":"70","hashOfConfig":"42"},{"size":1268,"mtime":1619692869333,"results":"71","hashOfConfig":"42"},{"size":1480,"mtime":1621590633661,"results":"72","hashOfConfig":"42"},{"size":619,"mtime":1619867410816,"results":"73","hashOfConfig":"42"},{"size":7413,"mtime":1621742289662,"results":"74","hashOfConfig":"42"},{"size":483,"mtime":1620799477536,"results":"75","hashOfConfig":"42"},{"size":2797,"mtime":1621743246636,"results":"76","hashOfConfig":"42"},{"size":4155,"mtime":1621742935646,"results":"77","hashOfConfig":"42"},{"size":4945,"mtime":1621224561733,"results":"78","hashOfConfig":"42"},{"size":1377,"mtime":1621563227865,"results":"79","hashOfConfig":"42"},{"size":3445,"mtime":1621734253408,"results":"80","hashOfConfig":"42"},{"size":4631,"mtime":1621742048875,"results":"81","hashOfConfig":"42"},{"size":3667,"mtime":1621690213202,"results":"82","hashOfConfig":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"1x5ez3q",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},"l0fpne",{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"85"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"85"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159","usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"85"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"85"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"85"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"85"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"85"},"/Users/usmanzafar/Desktop/bugTracker/client/src/index.js",[],["189","190"],"/Users/usmanzafar/Desktop/bugTracker/client/src/ApolloProvider.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/App.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Login.js",["191","192","193","194","195","196"],"\r\nimport { React, useState, useContext}from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../App.css'; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from '../util/hooks';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { AuthContext } from '../context/auth';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: 300,\r\n      alignContent: \"center\"\r\n    },\r\n    fontType:{\r\n        fontFamily: font,\r\n        fontSize: 16,\r\n        color: 'white',\r\n        fontFamily:  \"sans-serif\"\r\n    },\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(5, 0, 4),\r\n        height: '200px',\r\n         disableRipple: true \r\n    },\r\n    container:{\r\n        alignItems:\"center\",\r\n        justify:\"center\",\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    signUp:{\r\n        marginTop:'20px'\r\n    }    \r\n  }));\r\n\r\n  const font =  \"'Merriweather', serif\";\r\n  \r\n  function Login (props) {\r\n    \r\n    const context = useContext (AuthContext);\r\n    const [ errors, setErrors ] = useState({});\r\n    const { onChange, onSubmit, values } = useForm(loginUser,{\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const [login, {loading1} ] = useMutation(LOGIN_USER, {\r\n        update(_, { data: { login: userData }}){\r\n        context.login(userData);\r\n        props.history.push('/ManageUserRoles');\r\n        },\r\n        onError(err){\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n        }, variables : values\r\n    });\r\n\r\n    const [demoLogin, {loading} ] = useMutation(DEMO_LOGIN, {\r\n        update(_, { data: { demoLogin: userData2 }}){\r\n        context.login(userData2);\r\n        props.history.push('/Accounts');\r\n        },\r\n        onError(err){\r\n        console.log(err);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n        }\r\n    });\r\n\r\n    function loginUser() {\r\n        login();\r\n    }\r\n\r\n    const history = useHistory();\r\n    function handleClick() {\r\n        history.push(\"/Register\");\r\n    }\r\n\r\n    function handleClickDemo() {\r\n        //demoLogin();\r\n        props.history.push('/Accounts');\r\n    }\r\n  \r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className={useStyles.container} class=\"background\">\r\n            <CssBaseline />\r\n            <div class=\"form\">\r\n            <div class=\"headingLogin\">\r\n            <p> Bug Tracker Login</p>\r\n            </div>\r\n            <div className={useStyles.paper} class=\"innerForm\">\r\n            <Typography component=\"h1\" variant=\"h5\" className={styles.fontType} style={{ marginBottom : \"10px\" }}>\r\n            </Typography>\r\n                <form  class=\"formContainer1\" onSubmit={onSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}  >\r\n                        <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                type=\"text\"\r\n                                autoComplete=\"username\"\r\n                                name=\"username\"\r\n                                error={errors.username ? true: false}\r\n                                value={values.username}\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                error={errors.password ? true: false}\r\n                                value={values.password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={useStyles.submit}\r\n                        color=\"primary\"\r\n                        class=\"btnSubmit\"\r\n                        style={{ marginTop : \"10px\" }}>\r\n                    <Typography component=\"h1\" variant=\"h5\" className={styles.fontType}>\r\n                    Login\r\n                    </Typography>\r\n                    </Button>\r\n                 </form>\r\n                 <div className=\"ui error message\">\r\n                    <ul className=\"list\">\r\n                        {Object.values(errors).map(value=>(\r\n                            <li key={value}>{value}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                </div> \r\n                <div class= \"signUp\">\r\n             <a href=\"#\"  onClick={handleClick}> Don't have an account? Sign Up ? </a>\r\n                    <p></p>\r\n            <a href=\"#\" onClick={handleClickDemo}> For Demo Account click here ! </a>\r\n            </div>\r\n           \r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst LOGIN_USER = gql `\r\nmutation login($username:String! $password: String!) {\r\n    login(username: $username password: $password) { \r\n    id\r\n    email\r\n    username\r\n    creationTime\r\n    token\r\n    }\r\n}`;\r\n\r\nconst DEMO_LOGIN = gql `\r\nmutation  {\r\n    demoLogin { \r\n    token\r\n    }\r\n}`;\r\n\r\nexport default Login;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateProject.js",["197","198","199","200"],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Register.js",["201"],"import { React, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { TextField } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport '../css/register.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputType:{\r\n        width: '100%'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: 300,\r\n        alignContent: \"center\"\r\n    },\r\n    fontType: {\r\n        fontFamily: font,\r\n        fontSize: 16\r\n    },\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        height: '100%'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(5, 0, 4),\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: \"center\",\r\n        justify: \"center\",\r\n    },\r\n\r\n}));\r\n\r\nconst font = \"'Merriweather', serif\";\r\nfunction Register(props) {\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const { onChange, onSubmit, values } = useForm(registerUser, {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n        update(_, { data }) {\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    function registerUser() {\r\n        addUser();\r\n    }\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className={useStyles.container} class=\"background\">\r\n            <CssBaseline />\r\n            <div className=\"formRegister\">\r\n                <div className={useStyles.paper} class=\"innerForm\">\r\n                    <Typography component=\"h1\" variant=\"h5\" className={styles.fontType} style={{ marginBottom: \"10px\" }}>\r\n                    </Typography>\r\n                    <form className={useStyles.form} class=\"formContainer1\" onSubmit={onSubmit}>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    id=\"username\"\r\n                                    label=\"Name\"\r\n                                    error={errors.username ? true : false}\r\n                                    value={values.username}\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    autoComplete=\"username\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    type=\"text\"\r\n                                    error={errors.email ? true : false}\r\n                                    value={values.email}\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    error={errors.password ? true : false}\r\n                                    value={values.password}\r\n                                    name=\"password\"\r\n                                    autoComplete=\"password\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    label=\"Confirm Password\"\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    name=\"confirmPassword\"\r\n                                    autoComplete=\"confirmPassword\"\r\n                                    error={errors.confirmPassword ? true : false}\r\n                                    value={values.confirmPassword}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={useStyles.submit}\r\n                            style={{ marginTop: \"10px\" }}>\r\n                            <Typography component=\"h1\" variant=\"h5\" className={styles.fontType}>\r\n                                Register\r\n                    </Typography>\r\n                        </Button>\r\n                    </form>\r\n                    <div className=\"ui error message\">\r\n                        <ul className=\"list\">\r\n                            {Object.values(errors).map(value => (\r\n                                <li key={value}>{value}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n        email: $email\r\n      }\r\n    ) {\r\n      username\r\n      email\r\n      creationTime\r\n    }\r\n  }`;\r\n\r\nexport default Register;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/AssignUser.js",["202","203","204","205","206","207","208"],"import React, { useState, useEffect } from 'react';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n      width: '100%',\r\n  },\r\n  container: {\r\n      maxHeight: 440,\r\n  },\r\n  label: {\r\n      fontSize: 12,\r\n      marginLeft: '30%',\r\n      fontFamily: 'sans-serif',\r\n      fontStyle:'italic',\r\n      fontWeight:'600'\r\n  },\r\n  input:{\r\n      width: '40%',\r\n      padding: '12px 20px',\r\n      margin: '8px 0',\r\n      display: 'inline-block',\r\n      borderWidth: '1px',\r\n      borderColor: '#ddd',\r\n      borderRadius: '4px', \r\n      boxSizing: 'border-box',\r\n      marginLeft: '30%',\r\n      marginRight: '30%'\r\n  },\r\n  submit:{\r\n      width: '40%',\r\n      backgroundColor: '#262B40',\r\n      color: 'white',\r\n      padding: '14px 20px',\r\n      margin: '8px 0',\r\n      display: 'inline-block',\r\n      borderWidth: '4px',\r\n      borderRadius: '4px', \r\n      marginLeft: '30%',\r\n      marginRight: '30%',\r\n      '&:hover': {\r\n          background: \" #F5A623\",\r\n       },\r\n  },\r\ndescription: {\r\n  width: '530px',\r\n  height: '200px',\r\n  marginLeft: '30%',\r\n  marginRight: '30%'\r\n},\r\ntitle: {\r\n    marginTop: '10%',\r\n    paddingTop: '100px',\r\n    marginLeft: \"43%\",\r\n    fontSize: 18,\r\n    fontWeight: '800',\r\n    fontFamily: 'sans-serif'\r\n}\r\n});\r\n\r\nfunction AssignUser(props) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [formError,setFormError] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [projectId, setProjectId] = useState(\"\");\r\n    const index = props.location.state.index;\r\n    const { loading, data } = useQuery(FETCH_USERS_QUERY);\r\n    const projectsQuery = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n    const [ errors, setErrors ] = useState({});\r\n\r\n    useEffect(() => {\r\n      assignUser();\r\n  }, [userId, projectId]);\r\n\r\n    const [assignUser,{loading1} ] = useMutation(ASSIGN_USER, {\r\n      update(proxy,result){\r\n       \r\n        const data = proxy.readQuery({ query: FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY,\r\n          variables: { name: String(index)}\r\n         });\r\n        var lengthValue = result.data.assignUser.length;\r\n        var element = result.data.assignUser [lengthValue -1 ];\r\n        proxy.writeQuery({ query: FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY, \r\n          data:{getProjectsAndUsers:[element, ...data.getProjectsAndUsers],},\r\n          variables: { name: String(index)}});\r\n        success();\r\n      }, \r\n      onError(err){\r\n        console.log(\"Errors: \", err);\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n      }, variables: { userId, projectId, name: String(index) }\r\n     \r\n  });\r\n  \r\n    var rows= ['Select the user'];\r\n    if (loading) \r\n         return <p>Loading...</p>;\r\n    else {\r\n        var length = data.getUsers.length;\r\n        for(var i=0;i<length;i++)\r\n        {\r\n            rows.push(data.getUsers[i].username )\r\n        }    \r\n    }\r\n\r\n    /*\r\n    function AssignUser()\r\n    {\r\n      assignUser();\r\n    }\r\n    */\r\n\r\n    function success() {\r\n      alert(\"User assignned to the project\");\r\n    }\r\n\r\n    function handleOnClick(event) {\r\n\r\n        var x = document.getElementById(\"selectValue\");\r\n        const valueMatch = x.value;\r\n        var indexValue;\r\n        const length = data.getUsers.length;\r\n        for(var i=0;i<length;i++)\r\n        {\r\n            if (valueMatch === data.getUsers[i].username)\r\n            {\r\n                indexValue = i;\r\n            }\r\n        } \r\n\r\n        setUserId(data.getUsers[indexValue].id);\r\n        setProjectId(projectsQuery.data.getProjects[index-1].id);\r\n\r\n        //AssignUser();\r\n      }  \r\n      \r\n return (\r\n<body>\r\n        <SideAndNavbar/>\r\n        <div>\r\n        <label className={classes.label} for=\"name\">Assign Users to Projects</label>\r\n         <select className={classes.input} id=\"selectValue\"  onChange={handleOnClick} >\r\n         {rows.map(time => {\r\n           return (\r\n             <option value={time}>{time}</option>\r\n           )\r\n         })}\r\n    </select>\r\n   \r\n        </div>\r\n   </body>\r\n )\r\n}\r\n\r\nconst FETCH_USERS_QUERY = gql`\r\n{\r\n  getUsers{\r\n  username\r\n  id\r\n  email\r\n  creationTime\r\n  role\r\n  access\r\n}\r\n}`;\r\n\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getProjects{\r\n  name\r\n  description\r\n  id\r\n}\r\n}`;\r\n\r\nconst ASSIGN_USER =  gql `\r\nmutation assignUser($projectId: String! $userId: String!, $name: String !) {\r\n  assignUser(projectId:$projectId userId: $userId, name: $name) {\r\n    id \r\n    username\r\n    email\r\n    creationTime\r\n    role \r\n    access\r\n    }     \r\n}`;\r\n\r\nconst FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY = gql`\r\n  query  getProjectsAndUsers ($name: String!){\r\n    getProjectsAndUsers (name: $name) {\r\n      id \r\n      username\r\n      email\r\n      creationTime\r\n      role \r\n      access\r\n  }\r\n  }`;\r\n\r\nexport default AssignUser;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Users.js",["209","210"],"import React from 'react';\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\nfunction Users () {\r\n    const { loading, data: { getUsers:users } } = useQuery(FETCH_USERS_QUERY);\r\n    return (\r\n       <div>\r\n       </div>\r\n        );\r\n}\r\n\r\nconst FETCH_USERS_QUERY = gql `\r\n{\r\n  getUsers{\r\n  id\r\n  creationTime\r\n  username\r\n  role\r\n  access\r\n}\r\n}\r\n\r\n`;\r\n\r\nexport default Users;\r\n","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ManageUserRoles.js",["211","212","213","214","215","216","217"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport UserTable from '../components/UserTable';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { FETCH_USERS_QUERY } from '../util/graphql';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  banner:{\r\n    backgroundColor: '#262B40',\r\n    height: '5%',\r\n    width:'93%',\r\n    padding: '2%',\r\n    marginLeft:'1%'\r\n    },\r\n    heading:{\r\n      color: 'white'\r\n    },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  firstDiv: {\r\n    marginLeft: '60px'\r\n  },\r\n  bottomDiv: {\r\n    height:'10%',\r\n    marginLeft:'20%',\r\n    marginTop: '20px'\r\n  }, btn1: {\r\n    marginTop: '20px'\r\n  },\r\n  btn2: {\r\n    marginTop: '20px'\r\n  },\r\n  root: {\r\n    width: '100%',\r\n},\r\ncontainer: {\r\n    maxHeight: 440,\r\n},\r\nlabel: {\r\n    fontSize: 12,\r\n    marginLeft: '20%',\r\n    fontFamily: 'sans-serif',\r\n    fontStyle:'italic',\r\n    fontWeight:'600'\r\n},\r\ninput:{\r\n    width: '60%',\r\n    padding: '12px 20px',\r\n    margin: '8px 0',\r\n    display: 'inline-block',\r\n    borderWidth: '1px',\r\n    borderColor: '#ddd',\r\n    borderRadius: '4px', \r\n    boxSizing: 'border-box',\r\n    marginLeft: '15%',\r\n    marginRight: '30%'\r\n},\r\nsubmit:{\r\n    width: '60%',\r\n    height: '7%',\r\n    backgroundColor: '#262B40',\r\n    color: 'white',\r\n    padding: '14px 20px',\r\n    margin: '8px 0',\r\n    display: 'inline-block',\r\n    borderWidth: '4px',\r\n    borderRadius: '10px', \r\n    marginLeft: '16%',\r\n    marginRight: '30%',\r\n    '&:hover': {\r\n        background: \"#F5A623\",\r\n        borderRadius: '25px'\r\n     },\r\n},\r\ndescription: {\r\nwidth: '530px',\r\nheight: '200px',\r\nmarginLeft: '30%',\r\nmarginRight: '30%'\r\n},\r\ntitle: {\r\n  width: '50%',\r\n  marginLeft: \"20%\",\r\n  fontSize: 18,\r\n  fontWeight: '800',\r\n  fontFamily: 'sans-serif'\r\n}\r\n});\r\n\r\nfunction ManageUserRoles(props) {\r\n\r\n  const classes = useStyles();\r\n  const [errors, setErrors]= useState({});\r\n  const [usersValue, setUserValue] = useState({});\r\n\r\n  const {onChange, onSubmit, values}= useForm(assignRole, {\r\n      name:'',\r\n      role: ''\r\n  });\r\n  \r\n  const { loading, data } = useQuery(FETCH_USERS_QUERY);\r\n  \r\n  const [assign, {loading:assignLoading}] = useMutation (ASSIGN_ROLE,{\r\n    onError(err) {\r\n    },\r\n    variables:values,\r\n      update(proxy,  result ){\r\n        const data = proxy.readQuery({ query: FETCH_USERS_QUERY });\r\n        proxy.writeQuery({ query: FETCH_USERS_QUERY, data});\r\n      }\r\n  });\r\n  \r\n  \r\n  var rows= ['Select the user'];\r\n  if (loading) \r\n       return <p>Loading...</p>;\r\n  else {\r\n      var length = data.getUsers.length;\r\n      for(var i=0;i<length;i++)\r\n      {\r\n          rows.push(data.getUsers[i].username)\r\n      }    \r\n  }\r\n\r\n  function assignRole () {\r\n    assign();\r\n}\r\n\r\n  return (\r\n    <body>\r\n    <SideAndNavbar/>\r\n   \r\n    <form onSubmit={onSubmit} class=\"inputForm\">\r\n   \r\n      <div id=\"main\" class=\"container\">\r\n        <div class=\"leftSide\">\r\n        \r\n          <div class=\"custom-select1\">\r\n          <h2 className={classes.title}>Manage User Roles</h2>\r\n            <label for=\"cars\" className={classes.label}>Select 1 or more Users:</label>\r\n            <br/>\r\n            <select className={classes.input} id=\"name\" name=\"name\" onChange={onChange} value={values.name}>\r\n         {rows.map(time => {\r\n           return (\r\n             <option value={time}> {time} </option>\r\n           )\r\n         })}\r\n        </select>\r\n          </div>\r\n          \r\n          <div class=\"custom-select2\">\r\n            <label for=\"cars\" class=\"label2\" className={classes.label}>Select the Role to assign:</label>\r\n            <br/>\r\n            <select className={classes.input} id=\"role\" name=\"role\" onChange={onChange} value={values.role}>\r\n              <option value=\"0\">--Select Role/None--:</option>\r\n              <option value=\"Admin\">Admin</option>\r\n              <option value=\"Project Manager\">Project Manager</option>\r\n              <option value=\"Developer\">Developer</option>\r\n              <option value=\"Submitter\">Submitter</option>\r\n            </select>\r\n          </div>\r\n\r\n          <Button className={classes.submit} variant=\"contained\" color=\"primary\" onClick={assignRole()}>\r\n          Assign\r\n          </Button>\r\n         </div>\r\n       \r\n          <div class=\"rightSide\">\r\n            <UserTable class=\"userTable\" />\r\n          </div>\r\n      </div>\r\n      </form>\r\n    </body>\r\n  );\r\n}\r\n\r\nconst ASSIGN_ROLE = gql`\r\n  mutation  assignRole ($name: String! $role: String!){\r\n    assignRole (name: $name role: $role) \r\n  {\r\n    username\r\n  id\r\n  email\r\n  creationTime\r\n  role\r\n  access\r\n  }\r\n  }`;\r\n\r\n \r\n\r\nexport default ManageUserRoles;\r\n","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateTicket.js",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"import React, { useState } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport { useQuery } from '@apollo/client';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n    label: {\r\n        fontSize: 12,\r\n        marginLeft: '30%',\r\n        fontFamily: 'sans-serif',\r\n        fontStyle:'italic',\r\n        fontWeight:'600'\r\n    },\r\n    input:{\r\n        width: '40%',\r\n        padding: '12px 20px',\r\n        margin: '8px 0',\r\n        display: 'inline-block',\r\n        borderWidth: '1px',\r\n        borderColor: '#ddd',\r\n        borderRadius: '4px', \r\n        boxSizing: 'border-box',\r\n        marginLeft: '30%',\r\n        marginRight: '30%'\r\n    },\r\n    submit:{\r\n        width: '40%',\r\n        backgroundColor: '#262B40',\r\n        color: 'white',\r\n        padding: '14px 20px',\r\n        margin: '8px 0',\r\n        display: 'inline-block',\r\n        borderWidth: '4px',\r\n        borderRadius: '4px', \r\n        marginLeft: '30%',\r\n        marginRight: '30%',\r\n        '&:hover': {\r\n            background: \" #F5A623\",\r\n         },\r\n    },\r\n description: {\r\n    width: '620px',\r\n    height: '200px',\r\n    marginLeft: '30%',\r\n    marginRight: '30%'\r\n  },\r\n  title: {\r\n      marginTop: '10%',\r\n      paddingTop: '100px',\r\n      marginLeft: \"43%\",\r\n      fontSize: 18,\r\n      fontWeight: '800',\r\n      fontFamily: 'sans-serif'\r\n  }\r\n});\r\n\r\nfunction CreateTicket(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const index = props.history.location.state.index;\r\n    const [errors, setErrors]= useState({});\r\n\r\n    const {onChange, onSubmit, values}= useForm(createProject, {\r\n        \r\n        title:'',\r\n        description: '',\r\n        assignedProjectInput: '',\r\n        assignedDeveloperInput: '',\r\n        priority: '',\r\n        type: '',\r\n        status: ''\r\n    });\r\n    \r\n    const { loading:loading1, data} = useQuery(FETCH_TICKETS_QUERY,{\r\n          variables: { id: String(index)}\r\n         });\r\n\r\n    const [create, {loading}] = useMutation (CREATE_TICKET,{\r\n        update(proxy,  result){\r\n        const data = proxy.readQuery({ query: FETCH_TICKETS_QUERY,\r\n          variables: { id: String(index)}\r\n         });\r\n\r\n          proxy.writeQuery({ query: FETCH_TICKETS_QUERY, data:{getTicketsByProjectId:[result.data.createTicket, ...data.getTicketsByProjectId],},\r\n          variables: { id: String(index)}});\r\n           success();\r\n        },\r\n        onError(err) {\r\n            console.log(\"Error\", err);\r\n        },\r\n        variables:values\r\n    });\r\n\r\n    const {loading:usersloading, data: users} = useQuery (GET_USERS);\r\n    const {loading:projectsloading, data:projects} = useQuery (GET_PROJECTS);\r\n\r\n    \r\n    if (projects!=null)\r\n    {       \r\n        const length = projects.getProjects.length; \r\n        var projectsArray = [];\r\n        for (var i=0;i<projects.getProjects.length; i++)\r\n        {\r\n            projectsArray.push(projects.getProjects[i].name);\r\n        }\r\n    \r\n        var select = document.getElementById(\"assignedProjectInput\");   \r\n        \r\n        if (select!= null)\r\n        {\r\n            if (select.length < length)\r\n        {\r\n            // Put a check here\r\n            for(var i = 0; i < projectsArray.length; i++) {\r\n            var opt = projectsArray[i];\r\n            var el = document.createElement(\"option\");\r\n            el.textContent = opt;\r\n            el.value = opt;\r\n            select.appendChild(el);\r\n            }\r\n        }\r\n\r\n        }\r\n    }\r\n    if (users!=null)\r\n    {\r\n        const length = users.getUsers.length; \r\n        var usernames = [];\r\n        \r\n        for (var i=0;i<users.getUsers.length; i++)\r\n        {\r\n           usernames.push(users.getUsers[i].username);\r\n        }\r\n    \r\n        var select = document.getElementById(\"assignedDeveloperInput\");\r\n       \r\n        if (select != null)\r\n        {\r\n            if (select.length< length)\r\n            {\r\n                 // Put a check here\r\n                for(var i = 0; i < usernames.length; i++) {\r\n                var opt = usernames[i];\r\n                var el = document.createElement(\"option\");\r\n                el.textContent = opt;\r\n                el.value = opt;\r\n                select.appendChild(el);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    function success() {\r\n        alert(\"New Ticket Created\");\r\n    }\r\n\r\n    function createProject () {\r\n        create();\r\n    }\r\n return (\r\n<body>\r\n\r\n        <SideAndNavbar/>\r\n          <form onSubmit={onSubmit} class=\"inputForm\">\r\n            <label className={classes.label}\r\n            for=\"title\">Ticket Title</label>\r\n            <input \r\n            type=\"text\" \r\n            id=\"title\" \r\n            name=\"title\" \r\n            className={classes.input}\r\n            placeholder=\"Ticket Title..\" \r\n            autoComplete=\"title\"\r\n            error={errors.title ? true:false}\r\n            value={values.title}\r\n            onChange={onChange}/>\r\n            <label className={classes.label} for=\"description\">Ticket Description</label>\r\n            <textarea \r\n            className={classes.description} \r\n            type=\"text\" \r\n            id=\"description\" \r\n            name=\"description\" \r\n            placeholder=\"Project desc..\" required\r\n            error={errors.description}\r\n            value={values.description}\r\n            onChange={onChange}/>\r\n            <label className={classes.label} for=\"\">Assigned Project</label>\r\n            <select className={classes.input} id=\"assignedProjectInput\" name=\"assignedProjectInput\"\r\n            value={values.assignedProjectInput} onChange={onChange}>\r\n            </select>\r\n            <label className={classes.label} for=\"assignedDeveloperInput\">Assigned Developer</label>\r\n            <select className={classes.input} id=\"assignedDeveloperInput\" name=\"assignedDeveloperInput\"\r\n            id=\"assignedDeveloperInput\" name=\"assignedDeveloperInput\"\r\n            value={values.assignedDeveloperInput} onChange={onChange}>\r\n            </select>\r\n            <label className={classes.label} for=\"priority\">Priority</label>\r\n            <select id=\"priority\"\r\n            value={values.priority}\r\n            name=\"priority\"\r\n            className={classes.input}\r\n            onChange={onChange}>\r\n            <option value=\"Low\">Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n            </select>\r\n            <label className={classes.label} for=\"type\">Ticket Type</label>\r\n            <select id=\"type\" name=\"type\"\r\n            value={values.type}\r\n            className={classes.input}\r\n            id=\"type\"\r\n            name=\"type\"\r\n            onChange={onChange}>\r\n            <option value=\"Bugs/Error\">Bugs/Error</option>\r\n            <option value=\"Feature Requests\">Feature Requests</option>\r\n            <option value=\"Other Comments\">Other Comments</option>\r\n            <option value=\"Training/Document Requests\">Training/Document Requests</option>\r\n            </select>\r\n            <label className={classes.label} for=\"ticketStatus\">Ticket Status</label>\r\n            <select name=\"status\"\r\n            className={classes.input}\r\n            value={values.status}\r\n            id=\"status\" name=\"status\"\r\n            onChange={onChange}>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"open\">Open</option>\r\n            <option value=\"in progress\">In Progress</option>\r\n            </select>\r\n            <input className={classes.submit} type=\"submit\" value=\"Create Ticket\"/>\r\n          </form>\r\n          <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                    {Object.values(errors).map(value=>(\r\n                        <li key={value}>{value}</li>\r\n                    ))}\r\n                </ul>\r\n          </div>\r\n   </body>\r\n )\r\n}\r\n\r\nconst CREATE_TICKET =  gql `\r\nmutation createTicket($title: String! $description: String! $assignedProjectInput: String!\r\n    $assignedDeveloperInput: String! $priority: String!  $status: String! $type: String!) {\r\n    \r\n    createTicket(title:$title description: $description assignedProjectInput: $assignedProjectInput \r\n    assignedDeveloperInput: $assignedDeveloperInput priority:$priority status: $status type: $type) {\r\n    \r\n    id\r\n    title\r\n    description\r\n    priority \r\n    status\r\n    type\r\n    createdAt\r\n    updatedAt\r\n    \r\n}     \r\n}`;\r\n\r\nconst GET_USERS = gql`\r\n{\r\n    getUsers {\r\n        id \r\n        username\r\n        email\r\n        creationTime\r\n        role \r\n        access\r\n    }\r\n}\r\n`;\r\n\r\nconst GET_PROJECTS = gql` \r\n{\r\n    getProjects {\r\n        id \r\n        name\r\n        description\r\n        users\r\n        tickets \r\n    }\r\n}  `;\r\n\r\nconst FETCH_TICKETS_QUERY =  gql `\r\nquery\r\n  getTicketsByProjectId($id: String!){\r\n    getTicketsByProjectId (id: $id) {\r\n      id\r\n      title\r\n      description\r\n      priority\r\n      status\r\n      type\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\nexport default CreateTicket;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable.js",["235"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/ticketsTable.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '1000px',\r\n    marginLeft: '5.5%',\r\n    marginTop:'5%'\r\n  },\r\n  banner:{\r\n  backgroundColor: '#262B40',\r\n  height: '15%',\r\n  width:'93%',\r\n  padding: '2%',\r\n  marginLeft:'1%'\r\n  },\r\n  \r\n  heading:{\r\n    color: 'white'\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  main:{\r\n    display: 'inline-block',\r\n    textAlign:'left',\r\n    marginLeft:'20%'\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 100 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  { id: 'priority', label: 'Priority', minWidth: 100 },\r\n  { id: 'status', label: 'Status', minWidth: 100 },\r\n  { id: 'created', label: 'Creation Time and Date', minWidth: 100 },\r\n  { id: 'editDetails', label: 'Edit Ticket', minWidth: 100 },\r\n];\r\n\r\nfunction createData(name, description, priority, status, created, editDetails) {\r\n  return { name, description, priority, status, created, editDetails };\r\n}\r\n\r\nfunction TicketsTable() {\r\n\r\n  var valueNumber = 0;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  var ticketsArray = [];\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    var length = data.getTickets.length;\r\n    ticketsArray = data;\r\n    console.log(\"Data\", data);\r\n    for (var i = 0; i < length; i++) {\r\n\r\n     var time = data.getTickets[i].createdAt.split('T')[1];\r\n\r\n     var date = data.getTickets[i].createdAt.substring(0, data.getTickets[i].createdAt.indexOf(\"T\"));\r\n     time = time.slice(0, -5); \r\n     var dateTime = date+ \"\\t\\t\"+time;\r\n\r\n    \r\n    rows[i] = createData(data.getTickets[i].title, data.getTickets[i].description \r\n    ,data.getTickets[i].priority, data.getTickets[i].status, dateTime, 'Edit Details');\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  function HandleOnClick(props, rowsArray) {\r\n   \r\n    history.push({\r\n      pathname: '/TicketDetailsPage',\r\n      search: '?update=true',  // query string\r\n      state: {  // location state\r\n        index: props, \r\n        array: rowsArray\r\n      },\r\n    }); \r\n\r\n  }\r\n\r\n  function RenderElement(value, value2, value3) {\r\n    if (value2.id === \"editDetails\") {\r\n      console.log(\"value\", value, \"value2\", value2, \"value3\", value3);\r\n      return <a  onClick={() => HandleOnClick(value3, ticketsArray)} className=\"link\"> {value} </a>;\r\n    }\r\n    else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <body>\r\n      <div>\r\n        <SideAndNavbar></SideAndNavbar>\r\n        <div id=\"main\" class=\"main\" className={classes.main}>\r\n          <Paper className={classes.root}>\r\n          <div className={classes.banner}>\r\n          <h3 className={classes.heading}>Tickets Table</h3>\r\n          <p className={classes.heading}>All the tickets you have in the database</p>\r\n          </div>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    valueNumber++;\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>    \r\n                                {RenderElement(value, column, valueNumber)}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getTickets{\r\n    id\r\n    title\r\n    description\r\n    priority\r\n    status\r\n    type\r\n    createdAt\r\n    updatedAt\r\n      }\r\n}`;\r\n\r\nexport default TicketsTable;\r\n","/Users/usmanzafar/Desktop/bugTracker/client/src/components/SideAndNavbar.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255"],"import React from 'react';\r\nimport '../css/main.css';\r\nimport {useContext} from 'react';\r\nimport grid from '../icons/grid-outline.svg';\r\nimport homeIcon from '../icons/home-outline.svg';\r\nimport layers from '../icons/layers-outline.svg';\r\nimport peopleCirle from '../icons/people-circle-outline.svg';\r\nimport personAddOutline from '../icons/person-add-outline.svg';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from '../context/auth';\r\nimport jwtDecode from 'jwt-decode';\r\n/*\r\n        <a className=\"section\" href=\"#section\" onClick={openNav}>\r\n          Open Sidebar\r\n        </a>\r\n        <a className=\"section\" href=\"#section\" onClick={closeNav}>\r\n          Close Sidebar\r\n          </a>\r\n          */\r\nfunction SideAndNavbar(props) {\r\n  \r\n  var {user, logout} = useContext(AuthContext);\r\n  //console.log(\"AuthContext user\", user);\r\n  //console.log(\"user role\", user.token);\r\n\r\n  console.log(\"User in side nav bar\",user);\r\n  if (user!=null)\r\n  {\r\n    var count = Object.keys(user).length;\r\n    console.log(\"count\",count);\r\n\r\n    if (count == 2)\r\n    {\r\n      user  = jwtDecode (localStorage.getItem('jwtToken'));\r\n    }\r\n    else if (count > 2)\r\n    {\r\n     \r\n    }\r\n  }\r\n  \r\n  //    user  = jwtDecode (localStorage.getItem('jwtToken'));\r\n      \r\n  const history = useHistory();\r\n \r\n  function openNav(e) {\r\n    document.getElementById(\"mySidebar\").style.width = \"250px\";\r\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\r\n\r\n    document.getElementById('navName').style.fontSize = '0.75rem';\r\n    document.getElementById('navName1').style.fontSize = '0.75rem';\r\n    document.getElementById('navName2').style.fontSize = '0.75rem';\r\n    document.getElementById('navName3').style.fontSize = '0.75rem';\r\n    document.getElementById('navName4').style.fontSize = '0.75rem';\r\n    document.getElementById('navName5').style.fontSize = '';\r\n\r\n    document.getElementById('grid').style.width = '30px';\r\n    document.getElementById('grid1').style.width = '30px';\r\n    document.getElementById('grid2').style.width = '30px';\r\n    document.getElementById('grid3').style.width = '30px';\r\n    document.getElementById('grid4').style.width = '30px';\r\n    document.getElementById('grid5').style.width = '30px';\r\n  }\r\n\r\n  function closeNav(e) {\r\n    document.getElementById('mySidebar').style.width = '60px';\r\n    document.getElementById('main').style.marginLeft = '60px';\r\n\r\n    document.getElementById('navName').style.fontSize = '0px';\r\n    document.getElementById('navName1').style.fontSize = '0px';\r\n    document.getElementById('navName2').style.fontSize = '0px';\r\n    document.getElementById('navName3').style.fontSize = '0px';\r\n    document.getElementById('navName4').style.fontSize = '0px';\r\n    document.getElementById('navName5').style.fontSize = '0px';\r\n\r\n    document.getElementById('grid').style.width = '30px';\r\n    document.getElementById('grid1').style.width = '30px';\r\n    document.getElementById('grid2').style.width = '30px';\r\n    document.getElementById('grid3').style.width = '30px';\r\n    document.getElementById('grid4').style.width = '30px';\r\n    document.getElementById('grid5').style.width = '30px';\r\n  }\r\n  \r\n  function HandleOnClickDashboard (){\r\n    history.push('/Dashboard');\r\n  }\r\n\r\n  function HandleOnManageProjectUsers (){\r\n    history.push('/ManageProjectUsers');\r\n  }\r\n  function HandleOnClickProjectTable() {\r\n    history.push('/ProjectTable');\r\n  }\r\n\r\n  function HandleOnClickTicketsTable() {\r\n    history.push('/TicketsTable');\r\n  }\r\n  \r\n\r\n  function HandleOnClickManageUserRoles() {\r\n    history.push('/ManageUserRoles');\r\n  }\r\n\r\n  function HandleOnClickAssignUser(){\r\n     history.push('/AssignUser');\r\n  }\r\n\r\n  function HandleOnClickUserProfile(){\r\n    history.push('/UserProfile');\r\n }\r\n\r\n  function handleClick(){\r\n    history.push('./Dashboard');\r\n  }\r\n\r\n  return (\r\n    <body>\r\n      <div id=\"mySidebar\" class=\"sidebar\">\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickDashboard}>\r\n          <img class=\"grid\" id=\"grid\" src={grid} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName\">Dashboard Home</span>\r\n        </a>\r\n      \r\n        {user && user.role === 'Demo Admin' && (\r\n            <React.Fragment>\r\n          <a href=\"#\" className=\"section\" onClick={HandleOnClickManageUserRoles}>\r\n          <img class=\"grid\" id=\"grid1\" src={homeIcon} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName1\">Manage Role Assignment</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnManageProjectUsers}>\r\n          <img class=\"grid\" id=\"grid2\" src={peopleCirle} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName2\">Manage Project Users</span>\r\n        </a>\r\n        </React.Fragment>\r\n        )}\r\n\r\n        {user && user.role === 'Demo Manager' && (\r\n            <React.Fragment>\r\n          <a href=\"#\" className=\"section\" onClick={HandleOnClickManageUserRoles}>\r\n          <img class=\"grid\" id=\"grid1\" src={homeIcon} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName1\">Manage Role Assignment</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnManageProjectUsers}>\r\n          <img class=\"grid\" id=\"grid2\" src={peopleCirle} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName2\">Manage Project Users</span>\r\n        </a>\r\n        </React.Fragment>\r\n        )}  \r\n        \r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickProjectTable}>\r\n          <img class=\"grid\" id=\"grid3\" src={layers} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName3\">My Projects</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickTicketsTable}>\r\n          <img class=\"grid\" id=\"grid4\" src={layers} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName4\">My Tickets</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickUserProfile}>\r\n          <img class=\"grid\" id=\"grid5\" src={personAddOutline} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName5\">User Profile</span>\r\n        </a>\r\n        </div>\r\n      <div class=\"topnav\">\r\n        <a onClick={handleClick} href=\"#home\">Home</a>\r\n        <a href=\"#about\" onClick={logout}>Logout</a>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default SideAndNavbar;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserTable.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable.js",["256","257","258","259","260","261","262","263"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useContext} from 'react';\r\nimport { AuthContext } from '../context/auth';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '150%',\r\n    marginTop: '15px'\r\n  },\r\n  banner:{\r\n    backgroundColor: '#262B40',\r\n    height: '15%',\r\n    width:'93%',\r\n    padding: '2%',\r\n    marginLeft:'1%'\r\n    },\r\n    heading:{\r\n      color: 'white'\r\n    },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  main:{\r\n    display: 'inline-block',\r\n    textAlign:'left',\r\n    marginLeft:'20%'\r\n  },\r\n  btn1: {\r\n    marginTop: '20px'\r\n  }\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  {\r\n    id: 'details',\r\n    label: 'Details',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\nfunction createData(name, description, details) {\r\n  return { name, description, details };\r\n}\r\n\r\nfunction ProjectTable() {\r\n  var {user, logout} = useContext(AuthContext);\r\n\r\n  if (user!=null)\r\n  {\r\n    var count = Object.keys(user).length;\r\n    console.log(\"count\",count);\r\n\r\n    if (count == 2)\r\n    {\r\n      user  = jwtDecode (localStorage.getItem('jwtToken'));\r\n    }\r\n    else if (count > 2)\r\n    {\r\n      \r\n    }\r\n  }\r\n\r\n  var i;\r\n  var valueNumber = 0;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    var length = data.getProjects.length;\r\n    for (var i = 0; i < length; i++) {\r\n      rows[i] = createData(data.getProjects[i].name, data.getProjects[i].description, 'Edit Details')\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  function HandleOnClick(props, rowsArray) {\r\n   \r\n    history.push({\r\n      pathname: '/ProjectDetails',\r\n      search: '?update=true',  // query string\r\n      state: {  // location state\r\n        index: props, \r\n        array: rowsArray\r\n      },\r\n    }); \r\n\r\n  }\r\n\r\n  function AssignUser() {\r\n    //history.push('/AssignUser');\r\n    history.push({\r\n      pathname: '/AssignUser',\r\n      search: '?update=true',  // query string\r\n      state: {  // location state\r\n        update: true, \r\n      },\r\n    }); \r\n  }\r\n\r\n  function CreateTicket() {\r\n    history.push('/CreateTicket');\r\n  }\r\n\r\n  function CreateProject() {\r\n    history.push('/CreateProject');\r\n  }\r\n\r\n  function RenderElement(value, value2, value3) {\r\n    if (value2.id === \"details\") {\r\n      return <a  onClick={() => HandleOnClick(value3, rows)} className=\"link\"> {value} </a>;\r\n    }\r\n    else {\r\n      return value;\r\n    }\r\n  }\r\n  return (\r\n    <body>\r\n      <div>\r\n        <SideAndNavbar></SideAndNavbar>\r\n     \r\n        <div id=\"main\" className=\"main\" className={classes.main}>\r\n\r\n          <div>\r\n          {user && user.role === 'Demo Admin' && (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={CreateProject} className={classes.btn1}>Create Project</Button>\r\n          )}\r\n\r\n         {user && user.role === 'Demo Manager' && (\r\n        <Button variant=\"contained\" color=\"primary\" onClick={CreateProject} className={classes.btn1}>Create Project</Button>\r\n          )}\r\n         </div>\r\n          <Paper className={classes.root}>\r\n          <div className={classes.banner}>\r\n          <h3 className={classes.heading}>Your Projects</h3>\r\n          <p className={classes.heading}>All the Projects you have in the database</p>\r\n          </div>\r\n         \r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    valueNumber++;\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {RenderElement(value, column, valueNumber)}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>    \r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getProjects{\r\n  name\r\n  description\r\n  id\r\n}\r\n}`;\r\n\r\n\r\n\r\nexport default ProjectTable;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnel.js",["264","265","266","267","268","269","270","271"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnelQuery.js",["272","273","274","275","276"],"import React, {useCallback, useState} from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nfunction AssignedPersonnelQuery(props) {\n  \n  \n  var index = props.index - 1;\n  const history = useHistory();\n  const [markersArray, setMarkersArray] = useState([]);\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\n  \n  var rows = [];\n  if (loading)\n    return <p>Loading...</p>;\n  else {\n    var length = data.getProjects.length;\n   var length3 = data.getProjects[index].users.length;\n   for (var k = 0; k < length3; k++)\n    {\n      var myName = (data.getProjects[index].users[k]);\n          var myName2 = '\"' + myName + '\"';  \n          JSON.stringify(myName2); \n          markersArray.push({\n            name: myName2\n          });\n    }\n    console.log(\"MarkersArray\", markersArray);\n  }\n}\n\nconst FETCH_PROJECTS_QUERY = gql`\n{\ngetProjects{\n  name\n  description\n  id\n  users\n  tickets\n}  \n}`;\n\n\nexport default AssignedPersonnelQuery;",["277","278"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable2.js",["279","280","281"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserList.js",["282"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\n\r\nfunction UserList() {\r\n    const classes = useStyles();\r\n    const { loading, data } = useQuery(FETCH_USERS_QUERY);\r\n    var rows= ['Select the user'];\r\n    if (loading) \r\n         return <p>Loading...</p>;\r\n    else {\r\n        var length = data.getUsers.length;\r\n        for(var i=0;i<length;i++)\r\n        {\r\n            rows.push(data.getUsers[i].username)\r\n        }    \r\n    }\r\n    return (\r\n        <div>\r\n         <select>\r\n         {rows.map(time => {\r\n           return (\r\n             <option value={time}> {time} </option>\r\n           )\r\n         })}\r\n    </select>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FETCH_USERS_QUERY = gql`\r\n{\r\n  getUsers{\r\n  username\r\n  id\r\n  email\r\n  creationTime\r\n  role\r\n  access\r\n}\r\n}`;\r\n\r\nexport default UserList;","/Users/usmanzafar/Desktop/bugTracker/client/src/util/hooks.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Accounts.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297"],"import { React, useContext, useState, useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AccountsImg from '../icons/images.svg';\nimport AccountsImg2 from '../icons/userImage.png';\nimport AccountsImg3 from '../icons/userImage1.png';\nimport '../css/accounts.css';\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../context/auth';\nimport gql from 'graphql-tag';\n\nconst useStyles = makeStyles((theme) => ({\n    inputType:{\n        width: '100%'\n    },\n    root: {\n        flexGrow: 1,\n        marginTop: 300,\n        alignContent: \"center\"\n    },\n    fontType: {\n        fontFamily: font,\n        fontSize: 16\n    },\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        height: '100%'\n    },\n    submit: {\n        margin: theme.spacing(5, 0, 4),\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n        alignItems: \"center\",\n        justify: \"center\",\n    },\n    logo: {\n        width: '10%'\n    }\n\n}));\n\nconst font = \"'Merriweather', serif\";\nfunction Accounts(props) {\n\n    const [ errors, setErrors ] = useState({});\n    const context = useContext (AuthContext);\n    const history = useHistory();\n    const [ role, setRole ] = useState('');\n    \n    useEffect(() => {\n        if (role === \"\")\n        {\n\n        }\n        else \n        {\n            demoLogin();\n        }\n        \n    }, [role]);\n\n\n    const [demoLogin, {loading} ] = useMutation(DEMO_LOGIN, {\n        update(_, { data: { demoLogin: userData2 }}){\n        context.login(userData2);\n        props.history.push('/Dashboard');\n        },\n        onError(err){\n        console.log(err);\n        setErrors(err.graphQLErrors[0].extensions.exception.errors)\n        },\n        variables: { role: String(role)}\n    });\n\n    function adminClick() {\n        setRole('Demo Admin');\n        demoLogin();\n    }\n\n    function projectManagerClick() {\n        setRole('Demo Manager');\n        demoLogin();\n    }\n\n    function developerClick() {\n        setRole('Demo Developer');\n        demoLogin();\n    }\n\n    function submitterClick() {\n        setRole('Demo Submitter');\n        demoLogin();\n    }\n\n    function handleClickDemo() {\n      //  demoLogin();\n        //props.history.push('/Accounts');\n    }\n    \n    const styles = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" className={useStyles.container} class=\"background\">\n            <CssBaseline />\n            <div class=\"accountsForm\">\n                    <Typography component=\"h1\" variant=\"h5\" className={styles.fontType} style={{ marginBottom: \"10px\" }}>\n                    </Typography>\n                      <p class=\"paragraph1\">Demo User Login</p>\n                    <form  class=\"formContainer\" >\n                         \n                        <div class=\"grid-item\">\n\n                        <div class=\"article\">\n                        <img title=\"Title Tag Goes Here\" alt=\"Image of Seal\" class=\"img1\" src={AccountsImg3} \n                        \n                        onClick={() => adminClick()}/>\n                        <p class=\"paragraph\" class=\"img1\" onClick={() => adminClick()} >Admin</p>\n                        </div>\n\n                        </div>\n                        <div class=\"grid-item\">\n                        <div class=\"article\">\n                        <img alt=\"Image of Seal\" class=\"img2\"  src={AccountsImg3} onClick={() => projectManagerClick()}/>\n                        <p class=\"paragraph\" class=\"img2\" onClick={() => projectManagerClick()}>Project Manager</p>\n                        </div>\n                        </div>\n                        <div class=\"grid-item\">\n                        <div class=\"article\">\n                        <img alt=\"Image of Seal\"  class=\"img3\" src={AccountsImg3} onClick={() => developerClick()}/>\n                        <p class=\"paragraph\" class=\"img3\" onClick={() => developerClick()}>Developer</p>\n                        </div>\n                        </div>\n                        <div class=\"grid-item\">\n                        <div class=\"article\">\n                        <img alt=\"Image of Seal\"  class=\"img4\" src={AccountsImg3} onClick={() => submitterClick()}/>\n                        <p class=\"paragraph\" class=\"img4\" onClick={() => submitterClick()}>Submitter</p>\n                        </div>\n                        </div>\n                    </form>\n            </div>\n        </Container>\n    )\n}\n\n\nconst DEMO_LOGIN = gql `\nmutation  \n    demoLogin ($role: String!){\n        demoLogin (role: $role) \n        {\n            token\n        }\n    }`; \n\n\nexport default Accounts;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Dashboard.js",["298"],"import React, { useState } from 'react';\nimport '../css/dashboard.css';\nimport SideAndNavbar from '../components/SideAndNavbar';\nimport TicketPriorityBarChart from '../components/TicketPriorityBarChart';\nimport TicketTypePieChart from '../components/TicketTypePieChart';\nimport TicketStatusBarChart from '../components/TicketStatusBarChart';\nimport DeveloperTicketsPieChart from '../components/DeveloperTicketsPieChart';\n\n\nfunction Dashboard(props) {\n\n return (\n<body>\n        <SideAndNavbar/>\n        <div class=\"container\"> \n        <div class=\"grid-item1\"> <TicketPriorityBarChart/>\n        <div class=\"low-div-grid-item1\">\n        <p>Tickets By Priority</p>\n        </div>\n        </div>\n        <div class=\"grid-item2\"><TicketTypePieChart/>\n        <div class=\"low-div-grid-item2\">\n        <p>Tickets By Type</p>\n        </div>\n        </div>\n        <div class=\"grid-item3\"><TicketStatusBarChart/>\n        <div class=\"low-div-grid-item3\">\n        <p>Tickets By Progress</p>\n        </div>\n        </div>\n        <div class=\"grid-item4\"><DeveloperTicketsPieChart/>\n        <div class=\"low-div-grid-item4\">\n        <p>Tickets Assigned By Developer</p>\n        </div>\n        </div>\n        </div>\n   </body>\n )\n}\n\n\n\n\n\nexport default Dashboard;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketStatusBarChart.js",["299"],"\nimport React from 'react';\nimport Chart from \"react-google-charts\";\nimport { useQuery, gql } from '@apollo/client';\n\nfunction TicketStatusBarChart(props) {\n    var counterValue = 0;\n    var completed = 0;\n    var open = 0;\n    var inProgress = 0; \n    var rows = [];\n    const { loading, data } = useQuery(GET_TICKETS);\n\n    \n    if (loading)\n      return <p>Loading...</p>;\n\n    else {\n\n        if (counterValue ===0)\n        {\n        const length = data.getTickets.length;\n\n        for (var i =0;i<length;i++)\n        {\n\n        var value = data.getTickets[i].status;\n\n\n        if (value === \"completed\")\n        {\n            completed = completed +1;\n        }\n        else if (value === \"open\")\n        {\n            open = open + 1;\n        }\n        else if (value === \"in progress\")\n        {\n            inProgress = inProgress + 1;\n        }\n        }\n\n        counterValue = counterValue + 1;\n        }\n        \n    }\n\n  return (\n    <body>\n      <div style={{ display: 'flex', maxWidth: 900 }}>\n      <Chart\n  width={'500px'}\n  height={'300px'}\n  chartType=\"ColumnChart\"\n  loader={<div>Loading Chart</div>}\n  data={[\n    [\n      'Element',\n      'Density',\n      { role: 'style' },\n      {\n        sourceColumn: 0,\n        role: 'annotation',\n        type: 'string',\n        calc: 'stringify',\n      },\n    ],\n    ['Completed', completed, '#b87333', null],\n    ['Open',  open, 'silver', null],\n    ['In Progress', inProgress, 'gold', null],\n  ]}\n  options={{\n    width: 500,\n    height: 300,\n    bar: { groupWidth: '95%' },\n    legend: { position: 'none' },\n    backgroundColor: \"#EEEEEE\"\n  }}\n\n  rootProps={{ 'data-testid': '6' }}\n/>\n</div>\n    </body>\n  );\n}\n\n\n\nconst GET_TICKETS = gql`\n{\ngetTickets{\n    title\n    description \n    assignedProject\n    assignedDeveloper\n    priority\n    status\n    type\n    createdAt\n    updatedAt\n}  \n}`;\n\nexport default TicketStatusBarChart;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/DeveloperTicketsPieChart.js",["300","301","302","303","304","305","306","307","308","309","310","311","312","313"],"\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Chart from \"react-google-charts\";\n\nvar counterValue = 0;\n\nfunction DeveloperTicketsPieChart(props) {\n\n    var featureRequests = 0;\n    var otherComments = 0;\n    var BugsErrors = 0; \n    var trainingDocuments = 0;\n    var users = [];\n    var tickets = [];\n    var developersArray = [];\n    var developerNameArray = [];\n\n    const { loading, data } = useQuery(GET_TICKETS);\n    const { loading:loading1, data:data1 } = useQuery(GET_USERS);\n\nif (loading)\n      return <p>Loading...</p>;\n\n    else {\n    \n    var length1 = data.getTickets.length;\n    \n    for (var i=0;i< length1; i++)\n    {\n      tickets.push(data.getTickets[i]);\n    }\n    \n    }\n\nif (loading1)\n      return <p>Loading...</p>;\n\n    else {\n\n    var length2 = data1.getUsers.length;\n\n    for (var i=0;i<length2;i++ )\n    {\n      users.push(data1.getUsers[i]);\n    }\n\n    for (var i=0;i<tickets.length; i++)\n    {\n      for (var j=0;j<tickets[i].assignedDeveloper.length;j++)\n      {\n        developersArray.push(tickets[i].assignedDeveloper[j]);\n      }\n    }\n\n\n    for (var i=0;i<users.length;i++)\n    {\n      var id = users[i].id;\n      for (var j=0;j<developersArray.length; j++)\n      {\n        if (id=== developersArray[j])\n      {\n        developerNameArray.push(users[i].username)\n      }\n      }\n    }\n\n    var finalArray = [];\n    \n    function onlyUnique(value, index, self) {\n      return self.indexOf(value) === index;\n    }\n\n    var unique = developerNameArray.filter(onlyUnique);\n    \n    for(var i=0;i<unique.length;i++)\n    {\n      finalArray.push({name:unique[i],count:0});\n    }\n\n\n    var countArray = [];\n    for (var i=0;i<unique.length;i++)\n    {\n      for (var j=0;j<developerNameArray.length;j++)\n      {\n          if(developerNameArray[i]===developerNameArray[j])\n          {\n              finalArray[i].count = finalArray[i].count + 1;\n          }\n      }\n    }\n\n  var inputArray= [];\n\n inputArray.push(['Language', 'Speakers (in millions)']);\n  for (var i=0;i<finalArray.length;i++)\n  {\n    inputArray.push([''+finalArray[i].name+'', finalArray[i].count]);\n  }  \n   }\n\n  return (\n    <body>\n <Chart\n  width={'500px'}\n  height={'300px'}\n  chartType=\"PieChart\"\n  loader={<div>Loading Chart</div>}\n  data={inputArray}\n  options={{\n    backgroundColor: \"#EEEEEE\"\n  }}\n  rootProps={{ 'data-testid': '2' }}\n/>\n    </body>\n  );\n}\n\n\nconst GET_USERS = gql`\n{\ngetUsers{\n    id\n    username\n    email\n    creationTime\n    role\n    access\n}  \n}`;\nconst GET_TICKETS = gql`\n{\ngetTickets{\n    title\n    description \n    assignedProject\n    assignedDeveloper\n    priority\n    status\n    type\n    createdAt\n    updatedAt\n}  \n}`;\n\nexport default DeveloperTicketsPieChart;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketTypePieChart.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketPriorityBarChart.js",["314"],"import React from 'react';\nimport Chart from \"react-google-charts\";\nimport { useQuery, gql } from '@apollo/client';\n\n\nfunction TicketPriorityBarChart(props) {\nvar counterValue = 0;\n    var high = 0;\n    var medium = 0;\n    var low = 0; \n    var rows = [];\n    const { loading, data } = useQuery(GET_TICKETS);\n\n    \n    if (loading)\n      return <p>Loading...</p>;\n\n    else {\n\n        if (counterValue ===0)\n        {\n        const length = data.getTickets.length;\n\n        for (var i =0;i<length;i++)\n        {\n\n              var value = data.getTickets[i].priority;\n\n\n        if (value === \"High\")\n        {\n            high = high +1;\n        }\n        else if (value === \"Low\")\n        {\n            low = low + 1;\n        }\n        else if (value === \"Medium\")\n        {\n            medium = medium + 1;\n        }\n        }\n\n        counterValue = counterValue + 1;\n        }\n        \n    }\n\n  return (\n    <body>\n      <Chart\n  width={'500px'}\n  height={'300px'}\n  chartType=\"ColumnChart\"\n  loader={<div>Loading Chart</div>}\n  data={[\n    [\n      'Element',\n      'Density',\n      { role: 'style' },\n      {\n        sourceColumn: 0,\n        role: 'annotation',\n        type: 'string',\n        calc: 'stringify',\n      },\n    ],\n    ['High', high, '#b87333', null],\n    ['Medium',  medium, 'silver', null],\n    ['Low', low, 'gold', null],\n  ]}\n  options={{\n    width: 500,\n    height: 300,\n    bar: { groupWidth: '95%' },\n    legend: { position: 'none' },\n    backgroundColor: \"#EEEEEE\"\n  }}\n  // For tests\n  rootProps={{ 'data-testid': '6' }}\n/>\n\n    </body>\n  );\n}\n\nconst GET_TICKETS = gql`\n{\ngetTickets{\n    title\n    description \n    assignedProject\n    assignedDeveloper\n    priority\n    status\n    type\n    createdAt\n    updatedAt\n}  \n}`;\n\nexport default TicketPriorityBarChart;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ManageProjectUsers.js",["315","316","317","318","319","320","321"],"import React, {useCallback} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useQuery, gql } from '@apollo/client';\nimport SideAndNavbar from '../components/SideAndNavbar';\nimport { useHistory } from \"react-router-dom\";\nimport '../css/projectTable.css';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '150%',\n    marginTop: '15px'\n  },\n  banner:{\n    backgroundColor: '#262B40',\n    height: '15%',\n    width:'93%',\n    padding: '2%',\n    marginLeft:'1%'\n    },\n    heading:{\n      color: 'white'\n    },\n  container: {\n    maxHeight: 440,\n  },\n  main:{\n    display: 'inline-block',\n    textAlign:'left',\n    marginLeft:'20%'\n  },\n  btn1: {\n    marginTop: '20px'\n  }\n});\n\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'description', label: 'Description', minWidth: 100 },\n  {\n    id: 'details',\n    label: 'Details',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n];\n\nfunction createData(name, description, details) {\n  return { name, description, details };\n}\n\nfunction ManageProjectUsers() {\n\n  var i;\n  var valueNumber = 0;\n  const history = useHistory();\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\n  var rows = [];\n  if (loading)\n    return <p>Loading...</p>;\n  else {\n    var length = data.getProjects.length;\n    for (var i = 0; i < length; i++) {\n      rows[i] = createData(data.getProjects[i].name, data.getProjects[i].description, 'Manage Users')\n    }\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  function HandleOnClick(props, rowsArray) {\n  \n    history.push({\n      pathname: '/ProjectUserAssign',\n      search: '?update=true',  // query string\n      state: {  // location state\n        index: props, \n        array: rowsArray\n      },\n    }); \n\n  }\n\n  function AssignUser() {\n    //history.push('/AssignUser');\n    history.push({\n      pathname: '/AssignUser',\n      search: '?update=true',  // query string\n      state: {  // location state\n        update: true, \n      },\n    }); \n  }\n\n  function CreateTicket() {\n    history.push('/CreateTicket');\n  }\n\n  function RenderElement(value, value2, value3) {\n    var one = \"CreateProject\";\n    \n    if (value2.id === \"details\") {\n      return <a  onClick={() => HandleOnClick(value3, rows)} className=\"link\"> {value} </a>;\n    }\n    else {\n      return value;\n    }\n  }\n  return (\n    <body>\n      <div>\n        <SideAndNavbar></SideAndNavbar>\n     \n        <div id=\"main\" className=\"main\" className={classes.main}>\n          <Paper className={classes.root}>\n          <div className={classes.banner}>\n          <h3 className={classes.heading}>Your Projects</h3>\n          <p className={classes.heading}>Manage the users for your Projects</p>\n          </div>\n         \n            <TableContainer className={classes.container}>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {columns.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    valueNumber++;\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              {RenderElement(value, column, valueNumber)}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>    \n        </div>\n      </div>\n    </body>\n  );\n}\n\n\nconst FETCH_PROJECTS_QUERY = gql`\n{\n  getProjects{\n  name\n  description\n  id\n}\n}`;\n\n\n\nexport default ManageProjectUsers;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ProjectUserAssign.js",["322","323","324","325","326"],"import React, { useState } from 'react';\nimport SideAndNavbar from '../components/SideAndNavbar';\nimport AssignedPersonnel2 from '../components/AssignedPersonnel2';\nimport '../css/projectUserAssign.css';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AssignUser2 from './AssignUser2';\n\nconst useStyles = makeStyles({\n    root: {\n      width: '100%',\n  \n    },\n    banner:{\n      backgroundColor: '#262B40',\n      height: '5%',\n      width:'93%',\n      padding: '2%',\n      marginLeft:'1%'\n      },\n      heading:{\n        color: 'white'\n      },\n    container: {\n      maxHeight: 440,\n    },\n    firstDiv: {\n      marginLeft: '60px'\n    },\n    bottomDiv: {\n      height:'10%',\n      marginLeft:'20%',\n      marginTop: '20px'\n    }, btn1: {\n      marginTop: '20px'\n    },\n    btn2: {\n      marginTop: '20px'\n    },\n    root: {\n      width: '100%',\n  },\n  container: {\n      maxHeight: 440,\n  },\n  label: {\n      fontSize: 12,\n      marginLeft: '30%',\n      fontFamily: 'sans-serif',\n      fontStyle:'italic',\n      fontWeight:'600'\n  },\n  input:{\n      width: '40%',\n      padding: '12px 20px',\n      margin: '8px 0',\n      display: 'inline-block',\n      borderWidth: '1px',\n      borderColor: '#ddd',\n      borderRadius: '4px', \n      boxSizing: 'border-box',\n      marginLeft: '30%',\n      marginRight: '30%'\n  },\n  submit:{\n      width: '40%',\n      backgroundColor: '#262B40',\n      color: 'white',\n      padding: '14px 20px',\n      margin: '8px 0',\n      display: 'inline-block',\n      borderWidth: '4px',\n      borderRadius: '4px', \n      marginLeft: '30%',\n      marginRight: '30%',\n      '&:hover': {\n          background: \" #F5A623\",\n       },\n  },\ndescription: {\n  width: '530px',\n  height: '200px',\n  marginLeft: '30%',\n  marginRight: '30%'\n},\ntitle: {\n    marginTop: '10%',\n    paddingTop: '100px',\n    marginLeft: \"43%\",\n    fontSize: 18,\n    fontWeight: '800',\n    fontFamily: 'sans-serif'\n}\n  });\n\nfunction ProjectUserAssign(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    var value =  props.history.location.state.index;\n   \n return (\n<body>\n    <SideAndNavbar/>\n      \n   <div class=\"split left\">\n   <div class=\"centered1\">\n   <AssignUser2 index={value}/>\n   </div>\n   </div>\n\n   <div class=\"split right\">\n   <div class=\"centered2\">\n   <AssignedPersonnel2 index={value}/>\n   \n   </div>\n   </div>\n  \n</body>\n )\n}\n\n\nexport default ProjectUserAssign;\n","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/AssignUser2.js",["327","328","329","330","331","332","333","334","335","336","337","338"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport {FETCH_PROJECT_ASSIGNED_PROSONNEL_QUERY} from '../util/graphql';\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n\n  },\n  banner:{\n    backgroundColor: '#262B40',\n    height: '5%',\n    width:'93%',\n    padding: '2%',\n    marginLeft:'1%'\n    },\n    heading:{\n      color: 'white'\n    },\n  container: {\n    maxHeight: 440,\n  },\n  firstDiv: {\n    marginLeft: '60px'\n  },\n  bottomDiv: {\n    height:'10%',\n    marginLeft:'20%',\n    marginTop: '20px'\n  }, btn1: {\n    marginTop: '20px'\n  },\n  btn2: {\n    marginTop: '20px'\n  },\n  root: {\n    width: '100%',\n},\ncontainer: {\n    maxHeight: 440,\n},\nlabel: {\n    fontSize: 12,\n    marginLeft: '30%',\n    fontFamily: 'sans-serif',\n    fontStyle:'italic',\n    fontWeight:'600'\n},\ninput:{\n    width: '80%',\n    padding: '12px 20px',\n    margin: '8px 0',\n    display: 'inline-block',\n    borderWidth: '1px',\n    borderColor: '#ddd',\n    borderRadius: '4px', \n    boxSizing: 'border-box',\n    marginLeft: '30%',\n    marginRight: '30%'\n},\nsubmit:{\n    width: '40%',\n    backgroundColor: '#262B40',\n    color: 'white',\n    padding: '14px 20px',\n    margin: '8px 0',\n    display: 'inline-block',\n    borderWidth: '4px',\n    borderRadius: '4px', \n    marginLeft: '30%',\n    marginRight: '30%',\n    '&:hover': {\n        background: \" #F5A623\",\n     },\n},\ndescription: {\nwidth: '530px',\nheight: '200px',\nmarginLeft: '30%',\nmarginRight: '30%'\n},\ntitle: {\n  marginTop: '10%',\n  paddingTop: '100px',\n  marginLeft: \"43%\",\n  fontSize: 18,\n  fontWeight: '800',\n  fontFamily: 'sans-serif'\n}\n});\n\nfunction AssignUser2(props) {\n\n    const history = useHistory();\n    const classes = useStyles();\n    const [formError,setFormError] = useState(false);\n    const [userId, setUserId] = useState(\"\");\n    const [projectId, setProjectId] = useState(\"\");\n    const index = props.index;\n    const { loading, data } = useQuery(FETCH_USERS_QUERY);\n    const projectsQuery = useQuery(FETCH_PROJECTS_QUERY);\n\n    const [ errors, setErrors ] = useState({});\n\n    useEffect(() => {\n      assignUser();\n    }, [userId, projectId]);\n\n    const [assignUser,{loading1} ] = useMutation(ASSIGN_USER, {\n      update(proxy,result){\n        const data = proxy.readQuery({ query: FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY,\n          variables: { name: String(props.index)}\n         });\n          var lengthValue = result.data.assignUser.length;\n          var element = result.data.assignUser [lengthValue -1 ];\n          proxy.writeQuery({ query: FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY, \n          data:{getProjectsAndUsers:[element, ...data.getProjectsAndUsers],},\n          variables: { name: String(props.index)}});\n      }, \n      onError(err){\n          console.log(\"Errors: \", err);\n          //setErrors(err.graphQLErrors[0].extensions.exception.errors)\n      }, variables: { userId, projectId, name: String(props.index) }\n     \n  });\n  \n  var rows= ['Select the user'];\n  if (loading) \n       return <p>Loading...</p>;\n  else {\n      var length = data.getUsers.length;\n      for(var i=0;i<length;i++)\n      {\n          rows.push(data.getUsers[i].username )\n      }    \n  }\n\n  /*\n  function AssignUser()\n  {\n    assignUser();\n  }\n  */\n\n  function success() {\n    alert(\"User assignned to the project\");\n  }\n\n  function handleOnClick(event) {\n\n    var x = document.getElementById(\"selectValue\");\n    const valueMatch = x.value;\n    var indexValue;\n    const length = data.getUsers.length;\n    for(var i=0;i<length;i++)\n    {\n        if (valueMatch === data.getUsers[i].username)\n        {\n            indexValue = i;\n        }\n    } \n\n    setUserId(data.getUsers[indexValue].id);\n    setProjectId(projectsQuery.data.getProjects[index-1].id);\n\n    //AssignUser();\n  }  \n\n      \n return (\n<body>\n        <div>\n        <label className={classes.label} for=\"name\">Assign Users to Projects</label>\n         <select className={classes.input} id=\"selectValue\"  onChange={handleOnClick} >\n         {rows.map(time => {\n           return (\n             <option value={time}>{time}</option>\n           )\n         })}\n        </select>\n        </div>\n   </body>\n )\n}\n\nconst FETCH_USERS_QUERY = gql`\n{\n  getUsers{\n  username\n  id\n  email\n  creationTime\n  role\n  access\n}\n}`;\n\n\nconst FETCH_PROJECTS_QUERY = gql`\n{\n  getProjects{\n  name\n  description\n  id\n}\n}`;\n\nconst ASSIGN_USER =  gql `\nmutation assignUser($projectId: String! $userId: String!, $name: String !) {\n  assignUser(projectId:$projectId userId: $userId, name: $name) {\n    id \n    username\n    email\n    creationTime\n    role \n    access\n    }     \n}`;\n\nconst FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY = gql`\n  query  getProjectsAndUsers ($name: String!){\n    getProjectsAndUsers (name: $name) {\n      id \n      username\n      email\n      creationTime\n      role \n      access\n  }\n  }`;\nexport default AssignUser2;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/TicketDetails.js",["339","340","341"],"import { React, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SideAndNavbar from '../components/SideAndNavbar';\n\nconst useStyles = makeStyles((theme) => ({\n    inputType:{\n        width: '100%'\n    },\n    root: {\n        flexGrow: 1,\n        marginTop: 300,\n        alignContent: \"center\"\n    },\n    fontType: {\n        fontFamily: font,\n        fontSize: 16\n    },\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        height: '100%'\n    },\n    submit: {\n        margin: theme.spacing(5, 0, 4),\n    },\n    container: {\n        width: '100%',\n        height: '100%',\n        alignItems: \"center\",\n        justify: \"center\",\n    },\n\n}));\n\nconst font = \"'Merriweather', serif\";\nfunction TicketDetails(props) {\n\nconst styles = useStyles();\n\nreturn ( <body>\n    <SideAndNavbar/>\n   </body>\n    )\n}\n\n\n\nexport default TicketDetails;","/Users/usmanzafar/Desktop/bugTracker/client/src/context/auth.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/util/ProtectedRoute.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketDetailsComponent.js",["342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359"],"/Users/usmanzafar/Desktop/bugTracker/client/src/util/graphql.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ProjectDetails.js",["360","361","362"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable2.js",["363","364","365"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnel2.js",["366","367","368","369","370","371","372","373"],"import React, { useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\nimport '../css/assignedpersonnel2.css';\n\nconst useStyles = makeStyles({\n  banner:\n  {\n  backgroundColor: '#262B40',\n  height: '120px',\n  width:'93%',\n  padding: '2%',\n  marginLeft:'1%'\n  },\n  heading:{\n    color: 'white',\n    padding: '0'\n  },\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst columns = [\n  { id: 'username', label: 'Username', minWidth: 170 },\n  { id: 'email', label: 'Email', minWidth: 100 },\n  //{ id: 'creationTime', label: 'Created', minWidth: 100 },\n  { id: 'role', label: 'Role', minWidth: 200 },\n  //{ id: 'access', label: 'Access', minWidth: 100 }\n];\n\nfunction createData(username, email, creationTime, role, access) {\n  return { username, email, creationTime, role, access};\n}\n\nfunction AssignedDeveloper2(props) {\n\n  var indexVal = \"\"+props.index -1+\"\";\n  var index = props.index -1; \n  const history = useHistory();\n  const classes = useStyles();\n  const [ page, setPage ] = React.useState(0);\n  const [ markersArray, setMarkersArray] = useState([]);\n  const [ rowsPerPage, setRowsPerPage ] = React.useState(10);\n  const [ errors, setErrors ] = useState({});\n \n const {loading, data} = useQuery (FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY,{\n  variables: { name: String(props.index)}\n });\n\n  var rows = [];\n  if (loading)\n    return <p>Loading...</p>;\n  else {\n   \n    var length = data.getProjectsAndUsers.length;\n   for (var k = 0; k < length; k++)\n    {\n          var name = (data.getProjectsAndUsers[k].username);\n          var email = (data.getProjectsAndUsers[k].email);\n          var role = (data.getProjectsAndUsers[k].role);\n\n          JSON.stringify(name); \n          JSON.stringify(email); \n          JSON.stringify(role); \n\n          rows.push({\n            username: name,\n            email: email,\n            role: role,\n          });\n    }\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <body>\n      <div>\n        <div id=\"main\" class=\"main\">\n          <Paper className={classes.root}>\n            <div className={classes.banner}>\n          <h4 className={classes.heading}>AssignedPersonnel</h4>\n          <p className={classes.heading}>Users assigned to this Project</p>\n          </div>\n          <TableContainer className={classes.container}>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {columns.map((column) => (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                      >\n                        {column.label}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                                {value}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </Paper>\n        </div>\n      </div>\n    </body>\n  );\n}\n\nconst FETCH_PROJECT_ASSIGNED_PERSONNEL_QUERY = gql`\n  query  getProjectsAndUsers ($name: String!){\n    getProjectsAndUsers (name: $name) {\n      id \n      username\n      email\n      creationTime\n      role \n      access\n  }\n  }`;\n\n\nexport default AssignedDeveloper2;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/TicketDetailsPage.js",["374","375"],"import React, { useState } from 'react';\nimport SideAndNavbar from '../components/SideAndNavbar';\nimport '../css/ticketDetailsPage.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TicketDetailsComponent from '../components/TicketDetailsComponent';\nimport AddComment from '../components/AddComment';\nimport DisplayComments from '../pages/DisplayComments';\n\nconst useStyles = makeStyles({\n    root: {\n      width: '100%',\n    },\n    banner:{\n      backgroundColor: '#262B40',\n      height: '5%',\n      width:'93%',\n      padding: '2%',\n      marginLeft:'1%'\n      },\n      heading:{\n        color: 'white'\n      },\n    container: {\n      maxHeight: 440,\n    },\n    firstDiv: {\n      marginLeft: '60px'\n    },\n    bottomDiv: {\n      height:'10%',\n      marginLeft:'20%',\n      marginTop: '20px'\n    }, btn1: {\n      marginTop: '20px'\n    },\n    btn2: {\n      marginTop: '20px'\n    }\n  });\n\n\nfunction TicketDetailsPage(props) {\n  \n return (\n<body>\n    <SideAndNavbar/>\n      \n    <div class=\"test\">\n    <div class=\"wrapperOne\">\n    <div class=\"boxOne a\">\n    <TicketDetailsComponent index={props}/>\n    </div>\n  <div class=\"boxOne b\">\n    <AddComment index= {props}/>\n  </div>\n  <div class=\"boxOne c\">\n  <DisplayComments index= {props}/>\n  </div>\n  <div class=\"boxOne d\">\n  </div>\n  </div>\n    </div>\n    \n    \n   </body>\n )\n}\n\n\nexport default TicketDetailsPage;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AddComment.js",["376","377","378","379","380","381","382"],"import React, { useState, useEffect }  from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from '../util/hooks';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '40ch',\n    },\n    btn1: {\n        marginTop: '20px',\n        marginRight: '100px'\n      },\n      input:{\n        width: \"500px\",\n        marginLeft: \"30px\"\n      },\n      comment: {\n        padding: '10px',\n        marginLeft: '20px'\n      },\n      submit: {\n        marginLeft: \"30px\"\n      }\n  }));\n\n\n\nfunction AddComment(props) {\n\n  var index = props.index.history.location.state.index;\n  var array = props.index.history.location.state.array;\n\n  var id = array.getTickets[index-1].id;\n  const [ticketId, setTicketId] = useState(\"\");\n  const [messageValue, setMessage ]= useState(\"\");\n  const [ errors, setErrors ] = useState({});\n\n    \n  useEffect(() => {\n\n    create();\n    \n  }, [messageValue, ticketId]);\n\n  const classes = useStyles();\n  const {onChange, onSubmit, values}= useForm(createProject, {\n      \n      message:''\n  });\n\n  \n  const [create, {loading}] = useMutation (CREATE_COMMENT,{\n    update(proxy,  result){\n  \n      const data = proxy.readQuery({ query: DISPLAY_COMMENTS,\n        variables: { id: String(index)}\n       });\n       \n\n      proxy.writeQuery({ query: DISPLAY_COMMENTS, \n      data:{getCommentsByTicketId:[result.data.createComment, ...data.getCommentsByTicketId],},\n      variables: { id: String(index)}});\n\n       success();\n    },\n    onError(err) {\n        console.log(\"Error\", err);\n    },\n    variables: { message: String(messageValue), id: String(ticketId) }\n});\n  \n    function success() {\n      alert(\"New Ticket Created\");\n  }\n\n  function createProject () {\n      setMessage(values.message);\n      setTicketId(id);\n      //create();\n  }\n\n  return (\n    <body>\n      <div>\n      <form onSubmit={onSubmit} class=\"inputForm\">\n          <InputLabel className={classes.comment} htmlFor=\"outlined-adornment-amount\">Add a Comment</InputLabel>\n          <textarea \n            type=\"text\" \n            id=\"message\" \n            name=\"message\" \n            className={classes.input}\n            placeholder=\"\" required\n            error={errors.message}\n            value={values.message}\n            onChange={onChange}/>\n             <Button className={classes.submit} variant=\"contained\" color=\"primary\" type=\"submit\">\n             Add Comment\n            </Button>\n          </form>\n         \n      </div>\n    </body>\n  );\n}\n\nconst CREATE_COMMENT =  gql `\nmutation\n  createComment($message: String! , $id:String!){\n  createComment(message: $message, id:$id) {\n  id\n  commenter\n  message\n  createdAt\n  }\n}\n`;\n\n\nconst DISPLAY_COMMENTS =  gql `\nquery \n    getCommentsByTicketId($id: String! ){\n    getCommentsByTicketId(id:$id) {\n        id\n        message\n        createdAt\n        commenter\n     }\n  } `;\n\nexport default AddComment;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/DisplayComments.js",["383","384","385"],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/UserProfile.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"import {useContext, useState} from 'react';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SideAndNavbar from '../components/SideAndNavbar';\nimport { useHistory } from \"react-router-dom\";\nimport '../css/ticketsDetailsComponent.css';\nimport { AuthContext } from '../context/auth';\nimport jwtDecode from 'jwt-decode';\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '600px',\n    height: \"280px\"\n  },\n  banner:{\n  backgroundColor: '#262B40',\n  height: '15%',\n  width:'93%',\n  padding: '2%',\n  marginLeft:'1%'\n  },\n  heading:{\n    color: 'white'\n  },\n  main: {\n    marginBottom: '0px',\n    marginLeft:'20%',\n    marginTop:'2%',\n    display: 'inline-block'\n  }\n});\n\nconst columns = [\n  { id: 'username', label: 'Name', minWidth: 100 },\n  { id: 'email', label: 'Description', minWidth: 100 },\n  { id: 'role', label: 'Assigned Project', minWidth: 100 }\n];\n\nfunction createData(username, email, role) {\n  return { username, email,role};\n}\n\n var counter = 0;\n\nfunction UserProfile(props) {\n\nvar {user, logout} = useContext(AuthContext);\nconst [ errors, setErrors ] = useState({});\nconst context = useContext (AuthContext);\nconst history = useHistory();\nconst [ role, setRole ] = useState('');\nconst classes = useStyles();\nconst [page, setPage] = React.useState(0);\nconst [rowsPerPage, setRowsPerPage] = React.useState(10);\nvar rows= [];\n\n  if (user!=null)\n  {\n    var count = Object.keys(user).length;\n    \n    if (count == 2)\n    {\n      user  = jwtDecode (localStorage.getItem('jwtToken'));\n      rows[0] = createData(user.username, user.email, user.role);\n    }\n    else if (count > 2)\n    {\n        rows[0] = createData(user.username, user.email, user.role); \n    }\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n\n  return (\n    <body>\n      <div>\n      <SideAndNavbar/>\n      {user  && (\n        <div id=\"main\" class=\"mainTable\" className={classes.main}>\n          <Paper className={classes.root}>\n          <div className={classes.banner}>\n          <p className={classes.heading}>Ticket Details</p>\n          </div>\n          <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">Username</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n              <TableCell align=\"right\">{rows[0].username}</TableCell>\n              <TableCell align=\"right\">{rows[0].email}</TableCell>\n            </TableRow>\n        </TableBody>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">Access</TableCell>\n            <TableCell align=\"right\"></TableCell>\n           \n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow>\n              <TableCell align=\"right\">{rows[0].role}</TableCell>\n              <TableCell align=\"right\"></TableCell>\n            </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n            \n          </Paper>\n        </div>\n      )}\n      </div>\n    </body>\n  );\n}\n\n\nexport default UserProfile;\n\n",{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","severity":1,"message":"405","line":27,"column":9,"nodeType":"406","messageId":"407","endLine":27,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":75,"column":20,"nodeType":"410","messageId":"411","endLine":75,"endColumn":28},{"ruleId":"408","severity":1,"message":"412","line":85,"column":12,"nodeType":"410","messageId":"411","endLine":85,"endColumn":21},{"ruleId":"408","severity":1,"message":"413","line":85,"column":24,"nodeType":"410","messageId":"411","endLine":85,"endColumn":31},{"ruleId":"414","severity":1,"message":"415","line":174,"column":14,"nodeType":"416","endLine":174,"endColumn":49},{"ruleId":"414","severity":1,"message":"415","line":176,"column":13,"nodeType":"416","endLine":176,"endColumn":51},{"ruleId":"408","severity":1,"message":"417","line":7,"column":32,"nodeType":"410","messageId":"411","endLine":7,"endColumn":49},{"ruleId":"408","severity":1,"message":"409","line":76,"column":21,"nodeType":"410","messageId":"411","endLine":76,"endColumn":29},{"ruleId":"408","severity":1,"message":"418","line":76,"column":36,"nodeType":"410","messageId":"411","endLine":76,"endColumn":41},{"ruleId":"408","severity":1,"message":"413","line":78,"column":21,"nodeType":"410","messageId":"411","endLine":78,"endColumn":28},{"ruleId":"408","severity":1,"message":"413","line":71,"column":23,"nodeType":"410","messageId":"411","endLine":71,"endColumn":30},{"ruleId":"408","severity":1,"message":"419","line":67,"column":11,"nodeType":"410","messageId":"411","endLine":67,"endColumn":18},{"ruleId":"408","severity":1,"message":"420","line":69,"column":12,"nodeType":"410","messageId":"411","endLine":69,"endColumn":21},{"ruleId":"408","severity":1,"message":"421","line":69,"column":22,"nodeType":"410","messageId":"411","endLine":69,"endColumn":34},{"ruleId":"408","severity":1,"message":"422","line":76,"column":13,"nodeType":"410","messageId":"411","endLine":76,"endColumn":19},{"ruleId":"423","severity":1,"message":"424","line":80,"column":6,"nodeType":"425","endLine":80,"endColumn":25,"suggestions":"426"},{"ruleId":"408","severity":1,"message":"409","line":82,"column":24,"nodeType":"410","messageId":"411","endLine":82,"endColumn":32},{"ruleId":"427","severity":1,"message":"428","line":89,"column":23,"nodeType":"429","messageId":"430","endLine":89,"endColumn":63,"fix":"431"},{"ruleId":"408","severity":1,"message":"413","line":6,"column":13,"nodeType":"410","messageId":"411","endLine":6,"endColumn":20},{"ruleId":"408","severity":1,"message":"432","line":6,"column":39,"nodeType":"410","messageId":"411","endLine":6,"endColumn":44},{"ruleId":"404","severity":1,"message":"433","line":43,"column":3,"nodeType":"406","messageId":"407","endLine":43,"endColumn":7},{"ruleId":"404","severity":1,"message":"434","line":46,"column":1,"nodeType":"406","messageId":"407","endLine":46,"endColumn":10},{"ruleId":"408","severity":1,"message":"422","line":103,"column":10,"nodeType":"410","messageId":"411","endLine":103,"endColumn":16},{"ruleId":"408","severity":1,"message":"435","line":103,"column":18,"nodeType":"410","messageId":"411","endLine":103,"endColumn":27},{"ruleId":"408","severity":1,"message":"436","line":104,"column":10,"nodeType":"410","messageId":"411","endLine":104,"endColumn":20},{"ruleId":"408","severity":1,"message":"437","line":104,"column":22,"nodeType":"410","messageId":"411","endLine":104,"endColumn":34},{"ruleId":"408","severity":1,"message":"438","line":113,"column":27,"nodeType":"410","messageId":"411","endLine":113,"endColumn":40},{"ruleId":"408","severity":1,"message":"435","line":72,"column":20,"nodeType":"410","messageId":"411","endLine":72,"endColumn":29},{"ruleId":"408","severity":1,"message":"409","line":85,"column":21,"nodeType":"410","messageId":"411","endLine":85,"endColumn":29},{"ruleId":"408","severity":1,"message":"439","line":85,"column":31,"nodeType":"410","messageId":"411","endLine":85,"endColumn":35},{"ruleId":"408","severity":1,"message":"413","line":89,"column":21,"nodeType":"410","messageId":"411","endLine":89,"endColumn":28},{"ruleId":"408","severity":1,"message":"440","line":105,"column":20,"nodeType":"410","messageId":"411","endLine":105,"endColumn":32},{"ruleId":"408","severity":1,"message":"441","line":106,"column":20,"nodeType":"410","messageId":"411","endLine":106,"endColumn":35},{"ruleId":"442","severity":1,"message":"443","line":125,"column":21,"nodeType":"410","messageId":"444","endLine":125,"endColumn":22},{"ruleId":"442","severity":1,"message":"443","line":141,"column":18,"nodeType":"410","messageId":"444","endLine":141,"endColumn":19},{"ruleId":"442","severity":1,"message":"445","line":146,"column":13,"nodeType":"410","messageId":"444","endLine":146,"endColumn":19},{"ruleId":"442","severity":1,"message":"443","line":153,"column":25,"nodeType":"410","messageId":"444","endLine":153,"endColumn":26},{"ruleId":"442","severity":1,"message":"446","line":154,"column":21,"nodeType":"410","messageId":"444","endLine":154,"endColumn":24},{"ruleId":"442","severity":1,"message":"447","line":155,"column":21,"nodeType":"410","messageId":"444","endLine":155,"endColumn":23},{"ruleId":"448","severity":1,"message":"449","line":204,"column":13,"nodeType":"450","endLine":204,"endColumn":40},{"ruleId":"448","severity":1,"message":"449","line":204,"column":41,"nodeType":"450","endLine":204,"endColumn":70},{"ruleId":"448","severity":1,"message":"449","line":221,"column":13,"nodeType":"450","endLine":221,"endColumn":22},{"ruleId":"448","severity":1,"message":"449","line":222,"column":13,"nodeType":"450","endLine":222,"endColumn":24},{"ruleId":"448","severity":1,"message":"449","line":233,"column":25,"nodeType":"450","endLine":233,"endColumn":38},{"ruleId":"414","severity":1,"message":"451","line":112,"column":14,"nodeType":"416","endLine":112,"endColumn":87},{"ruleId":"452","severity":1,"message":"453","line":32,"column":15,"nodeType":"454","messageId":"407","endLine":32,"endColumn":17},{"ruleId":"408","severity":1,"message":"455","line":46,"column":12,"nodeType":"410","messageId":"411","endLine":46,"endColumn":19},{"ruleId":"408","severity":1,"message":"456","line":65,"column":12,"nodeType":"410","messageId":"411","endLine":65,"endColumn":20},{"ruleId":"408","severity":1,"message":"457","line":104,"column":12,"nodeType":"410","messageId":"411","endLine":104,"endColumn":35},{"ruleId":"414","severity":1,"message":"415","line":119,"column":9,"nodeType":"416","endLine":119,"endColumn":74},{"ruleId":"458","severity":1,"message":"459","line":120,"column":11,"nodeType":"416","endLine":120,"endColumn":67},{"ruleId":"414","severity":1,"message":"415","line":126,"column":11,"nodeType":"416","endLine":126,"endColumn":82},{"ruleId":"458","severity":1,"message":"459","line":127,"column":11,"nodeType":"416","endLine":127,"endColumn":72},{"ruleId":"414","severity":1,"message":"415","line":130,"column":9,"nodeType":"416","endLine":130,"endColumn":78},{"ruleId":"458","severity":1,"message":"459","line":131,"column":11,"nodeType":"416","endLine":131,"endColumn":75},{"ruleId":"414","severity":1,"message":"415","line":139,"column":11,"nodeType":"416","endLine":139,"endColumn":82},{"ruleId":"458","severity":1,"message":"459","line":140,"column":11,"nodeType":"416","endLine":140,"endColumn":72},{"ruleId":"414","severity":1,"message":"415","line":143,"column":9,"nodeType":"416","endLine":143,"endColumn":78},{"ruleId":"458","severity":1,"message":"459","line":144,"column":11,"nodeType":"416","endLine":144,"endColumn":75},{"ruleId":"414","severity":1,"message":"415","line":150,"column":9,"nodeType":"416","endLine":150,"endColumn":77},{"ruleId":"458","severity":1,"message":"459","line":151,"column":11,"nodeType":"416","endLine":151,"endColumn":70},{"ruleId":"414","severity":1,"message":"415","line":154,"column":9,"nodeType":"416","endLine":154,"endColumn":77},{"ruleId":"458","severity":1,"message":"459","line":155,"column":11,"nodeType":"416","endLine":155,"endColumn":70},{"ruleId":"414","severity":1,"message":"415","line":158,"column":9,"nodeType":"416","endLine":158,"endColumn":76},{"ruleId":"458","severity":1,"message":"459","line":159,"column":11,"nodeType":"416","endLine":159,"endColumn":80},{"ruleId":"408","severity":1,"message":"460","line":1,"column":16,"nodeType":"410","messageId":"411","endLine":1,"endColumn":27},{"ruleId":"408","severity":1,"message":"461","line":65,"column":14,"nodeType":"410","messageId":"411","endLine":65,"endColumn":20},{"ruleId":"452","severity":1,"message":"453","line":72,"column":15,"nodeType":"454","messageId":"407","endLine":72,"endColumn":17},{"ruleId":"442","severity":1,"message":"443","line":94,"column":14,"nodeType":"410","messageId":"444","endLine":94,"endColumn":15},{"ruleId":"408","severity":1,"message":"462","line":121,"column":12,"nodeType":"410","messageId":"411","endLine":121,"endColumn":22},{"ruleId":"408","severity":1,"message":"463","line":132,"column":12,"nodeType":"410","messageId":"411","endLine":132,"endColumn":24},{"ruleId":"414","severity":1,"message":"451","line":142,"column":14,"nodeType":"416","endLine":142,"endColumn":79},{"ruleId":"448","severity":1,"message":"449","line":153,"column":41,"nodeType":"450","endLine":153,"endColumn":65},{"ruleId":"408","severity":1,"message":"464","line":48,"column":10,"nodeType":"410","messageId":"411","endLine":48,"endColumn":20},{"ruleId":"408","severity":1,"message":"465","line":54,"column":7,"nodeType":"410","messageId":"411","endLine":54,"endColumn":15},{"ruleId":"408","severity":1,"message":"466","line":55,"column":7,"nodeType":"410","messageId":"411","endLine":55,"endColumn":12},{"ruleId":"408","severity":1,"message":"419","line":56,"column":9,"nodeType":"410","messageId":"411","endLine":56,"endColumn":16},{"ruleId":"408","severity":1,"message":"467","line":59,"column":11,"nodeType":"410","messageId":"411","endLine":59,"endColumn":23},{"ruleId":"408","severity":1,"message":"468","line":59,"column":25,"nodeType":"410","messageId":"411","endLine":59,"endColumn":40},{"ruleId":"408","severity":1,"message":"422","line":61,"column":11,"nodeType":"410","messageId":"411","endLine":61,"endColumn":17},{"ruleId":"408","severity":1,"message":"435","line":61,"column":19,"nodeType":"410","messageId":"411","endLine":61,"endColumn":28},{"ruleId":"408","severity":1,"message":"460","line":1,"column":16,"nodeType":"410","messageId":"411","endLine":1,"endColumn":27},{"ruleId":"408","severity":1,"message":"419","line":9,"column":9,"nodeType":"410","messageId":"411","endLine":9,"endColumn":16},{"ruleId":"408","severity":1,"message":"468","line":10,"column":24,"nodeType":"410","messageId":"411","endLine":10,"endColumn":39},{"ruleId":"408","severity":1,"message":"469","line":13,"column":7,"nodeType":"410","messageId":"411","endLine":13,"endColumn":11},{"ruleId":"408","severity":1,"message":"470","line":17,"column":9,"nodeType":"410","messageId":"411","endLine":17,"endColumn":15},{"ruleId":"400","replacedBy":"471"},{"ruleId":"402","replacedBy":"472"},{"ruleId":"408","severity":1,"message":"422","line":55,"column":10,"nodeType":"410","messageId":"411","endLine":55,"endColumn":16},{"ruleId":"408","severity":1,"message":"435","line":55,"column":18,"nodeType":"410","messageId":"411","endLine":55,"endColumn":27},{"ruleId":"408","severity":1,"message":"419","line":57,"column":9,"nodeType":"410","messageId":"411","endLine":57,"endColumn":16},{"ruleId":"408","severity":1,"message":"473","line":16,"column":11,"nodeType":"410","messageId":"411","endLine":16,"endColumn":18},{"ruleId":"408","severity":1,"message":"474","line":6,"column":8,"nodeType":"410","messageId":"411","endLine":6,"endColumn":19},{"ruleId":"408","severity":1,"message":"475","line":7,"column":8,"nodeType":"410","messageId":"411","endLine":7,"endColumn":20},{"ruleId":"408","severity":1,"message":"422","line":66,"column":13,"nodeType":"410","messageId":"411","endLine":66,"endColumn":19},{"ruleId":"408","severity":1,"message":"419","line":68,"column":11,"nodeType":"410","messageId":"411","endLine":68,"endColumn":18},{"ruleId":"423","severity":1,"message":"476","line":81,"column":8,"nodeType":"425","endLine":81,"endColumn":14,"suggestions":"477"},{"ruleId":"408","severity":1,"message":"413","line":84,"column":24,"nodeType":"410","messageId":"411","endLine":84,"endColumn":31},{"ruleId":"408","severity":1,"message":"478","line":116,"column":14,"nodeType":"410","messageId":"411","endLine":116,"endColumn":29},{"ruleId":"458","severity":1,"message":"459","line":135,"column":25,"nodeType":"416","endLine":137,"endColumn":55},{"ruleId":"448","severity":1,"message":"449","line":138,"column":46,"nodeType":"450","endLine":138,"endColumn":58},{"ruleId":"458","severity":1,"message":"459","line":144,"column":25,"nodeType":"416","endLine":144,"endColumn":122},{"ruleId":"448","severity":1,"message":"449","line":145,"column":46,"nodeType":"450","endLine":145,"endColumn":58},{"ruleId":"458","severity":1,"message":"459","line":150,"column":25,"nodeType":"416","endLine":150,"endColumn":117},{"ruleId":"448","severity":1,"message":"449","line":151,"column":46,"nodeType":"450","endLine":151,"endColumn":58},{"ruleId":"458","severity":1,"message":"459","line":156,"column":25,"nodeType":"416","endLine":156,"endColumn":117},{"ruleId":"448","severity":1,"message":"449","line":157,"column":46,"nodeType":"450","endLine":157,"endColumn":58},{"ruleId":"408","severity":1,"message":"479","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"469","line":11,"column":9,"nodeType":"410","messageId":"411","endLine":11,"endColumn":13},{"ruleId":"408","severity":1,"message":"480","line":6,"column":5,"nodeType":"410","messageId":"411","endLine":6,"endColumn":17},{"ruleId":"408","severity":1,"message":"481","line":10,"column":9,"nodeType":"410","messageId":"411","endLine":10,"endColumn":24},{"ruleId":"408","severity":1,"message":"482","line":11,"column":9,"nodeType":"410","messageId":"411","endLine":11,"endColumn":22},{"ruleId":"408","severity":1,"message":"483","line":12,"column":9,"nodeType":"410","messageId":"411","endLine":12,"endColumn":19},{"ruleId":"408","severity":1,"message":"484","line":13,"column":9,"nodeType":"410","messageId":"411","endLine":13,"endColumn":26},{"ruleId":"442","severity":1,"message":"443","line":43,"column":14,"nodeType":"410","messageId":"444","endLine":43,"endColumn":15},{"ruleId":"442","severity":1,"message":"443","line":48,"column":14,"nodeType":"410","messageId":"444","endLine":48,"endColumn":15},{"ruleId":"442","severity":1,"message":"443","line":57,"column":14,"nodeType":"410","messageId":"444","endLine":57,"endColumn":15},{"ruleId":"442","severity":1,"message":"485","line":60,"column":16,"nodeType":"410","messageId":"444","endLine":60,"endColumn":17},{"ruleId":"442","severity":1,"message":"443","line":77,"column":13,"nodeType":"410","messageId":"444","endLine":77,"endColumn":14},{"ruleId":"408","severity":1,"message":"486","line":83,"column":9,"nodeType":"410","messageId":"411","endLine":83,"endColumn":19},{"ruleId":"442","severity":1,"message":"443","line":84,"column":14,"nodeType":"410","messageId":"444","endLine":84,"endColumn":15},{"ruleId":"442","severity":1,"message":"485","line":86,"column":16,"nodeType":"410","messageId":"444","endLine":86,"endColumn":17},{"ruleId":"442","severity":1,"message":"443","line":98,"column":12,"nodeType":"410","messageId":"444","endLine":98,"endColumn":13},{"ruleId":"408","severity":1,"message":"469","line":11,"column":9,"nodeType":"410","messageId":"411","endLine":11,"endColumn":13},{"ruleId":"408","severity":1,"message":"460","line":1,"column":16,"nodeType":"410","messageId":"411","endLine":1,"endColumn":27},{"ruleId":"442","severity":1,"message":"443","line":74,"column":14,"nodeType":"410","messageId":"444","endLine":74,"endColumn":15},{"ruleId":"408","severity":1,"message":"462","line":101,"column":12,"nodeType":"410","messageId":"411","endLine":101,"endColumn":22},{"ruleId":"408","severity":1,"message":"463","line":112,"column":12,"nodeType":"410","messageId":"411","endLine":112,"endColumn":24},{"ruleId":"408","severity":1,"message":"487","line":117,"column":9,"nodeType":"410","messageId":"411","endLine":117,"endColumn":12},{"ruleId":"414","severity":1,"message":"451","line":120,"column":14,"nodeType":"416","endLine":120,"endColumn":79},{"ruleId":"448","severity":1,"message":"449","line":131,"column":41,"nodeType":"450","endLine":131,"endColumn":65},{"ruleId":"408","severity":1,"message":"479","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"433","line":40,"column":5,"nodeType":"406","messageId":"407","endLine":40,"endColumn":9},{"ruleId":"404","severity":1,"message":"434","line":43,"column":3,"nodeType":"406","messageId":"407","endLine":43,"endColumn":12},{"ruleId":"408","severity":1,"message":"473","line":97,"column":11,"nodeType":"410","messageId":"411","endLine":97,"endColumn":18},{"ruleId":"408","severity":1,"message":"419","line":98,"column":11,"nodeType":"410","messageId":"411","endLine":98,"endColumn":18},{"ruleId":"408","severity":1,"message":"488","line":6,"column":9,"nodeType":"410","messageId":"411","endLine":6,"endColumn":47},{"ruleId":"404","severity":1,"message":"433","line":40,"column":3,"nodeType":"406","messageId":"407","endLine":40,"endColumn":7},{"ruleId":"404","severity":1,"message":"434","line":43,"column":1,"nodeType":"406","messageId":"407","endLine":43,"endColumn":10},{"ruleId":"408","severity":1,"message":"419","line":98,"column":11,"nodeType":"410","messageId":"411","endLine":98,"endColumn":18},{"ruleId":"408","severity":1,"message":"420","line":100,"column":12,"nodeType":"410","messageId":"411","endLine":100,"endColumn":21},{"ruleId":"408","severity":1,"message":"421","line":100,"column":22,"nodeType":"410","messageId":"411","endLine":100,"endColumn":34},{"ruleId":"408","severity":1,"message":"422","line":107,"column":13,"nodeType":"410","messageId":"411","endLine":107,"endColumn":19},{"ruleId":"408","severity":1,"message":"435","line":107,"column":21,"nodeType":"410","messageId":"411","endLine":107,"endColumn":30},{"ruleId":"423","severity":1,"message":"424","line":111,"column":8,"nodeType":"425","endLine":111,"endColumn":27,"suggestions":"489"},{"ruleId":"408","severity":1,"message":"409","line":113,"column":24,"nodeType":"410","messageId":"411","endLine":113,"endColumn":32},{"ruleId":"427","severity":1,"message":"428","line":119,"column":25,"nodeType":"429","messageId":"430","endLine":119,"endColumn":65,"fix":"490"},{"ruleId":"408","severity":1,"message":"491","line":149,"column":12,"nodeType":"410","messageId":"411","endLine":149,"endColumn":19},{"ruleId":"408","severity":1,"message":"479","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"492","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":37},{"ruleId":"408","severity":1,"message":"493","line":53,"column":7,"nodeType":"410","messageId":"411","endLine":53,"endColumn":13},{"ruleId":"408","severity":1,"message":"494","line":9,"column":8,"nodeType":"410","messageId":"411","endLine":9,"endColumn":23},{"ruleId":"408","severity":1,"message":"495","line":12,"column":8,"nodeType":"410","messageId":"411","endLine":12,"endColumn":21},{"ruleId":"408","severity":1,"message":"496","line":15,"column":10,"nodeType":"410","messageId":"411","endLine":15,"endColumn":21},{"ruleId":"408","severity":1,"message":"497","line":42,"column":7,"nodeType":"410","messageId":"411","endLine":42,"endColumn":14},{"ruleId":"408","severity":1,"message":"498","line":58,"column":6,"nodeType":"410","messageId":"411","endLine":58,"endColumn":13},{"ruleId":"408","severity":1,"message":"499","line":62,"column":7,"nodeType":"410","messageId":"411","endLine":62,"endColumn":18},{"ruleId":"408","severity":1,"message":"500","line":65,"column":7,"nodeType":"410","messageId":"411","endLine":65,"endColumn":15},{"ruleId":"408","severity":1,"message":"501","line":66,"column":7,"nodeType":"410","messageId":"411","endLine":66,"endColumn":18},{"ruleId":"408","severity":1,"message":"502","line":71,"column":10,"nodeType":"410","messageId":"411","endLine":71,"endColumn":14},{"ruleId":"408","severity":1,"message":"503","line":72,"column":10,"nodeType":"410","messageId":"411","endLine":72,"endColumn":21},{"ruleId":"408","severity":1,"message":"504","line":74,"column":7,"nodeType":"410","messageId":"411","endLine":74,"endColumn":12},{"ruleId":"408","severity":1,"message":"409","line":80,"column":16,"nodeType":"410","messageId":"411","endLine":80,"endColumn":24},{"ruleId":"408","severity":1,"message":"505","line":81,"column":16,"nodeType":"410","messageId":"411","endLine":81,"endColumn":24},{"ruleId":"442","severity":1,"message":"443","line":111,"column":18,"nodeType":"410","messageId":"444","endLine":111,"endColumn":19},{"ruleId":"408","severity":1,"message":"506","line":124,"column":9,"nodeType":"410","messageId":"411","endLine":124,"endColumn":25},{"ruleId":"408","severity":1,"message":"507","line":128,"column":9,"nodeType":"410","messageId":"411","endLine":128,"endColumn":32},{"ruleId":"408","severity":1,"message":"508","line":146,"column":12,"nodeType":"410","messageId":"411","endLine":146,"endColumn":25},{"ruleId":"414","severity":1,"message":"451","line":148,"column":14,"nodeType":"416","endLine":148,"endColumn":79},{"ruleId":"408","severity":1,"message":"479","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"461","line":48,"column":14,"nodeType":"410","messageId":"411","endLine":48,"endColumn":20},{"ruleId":"452","severity":1,"message":"453","line":55,"column":15,"nodeType":"454","messageId":"407","endLine":55,"endColumn":17},{"ruleId":"408","severity":1,"message":"460","line":1,"column":16,"nodeType":"410","messageId":"411","endLine":1,"endColumn":27},{"ruleId":"408","severity":1,"message":"495","line":12,"column":8,"nodeType":"410","messageId":"411","endLine":12,"endColumn":21},{"ruleId":"408","severity":1,"message":"419","line":50,"column":9,"nodeType":"410","messageId":"411","endLine":50,"endColumn":16},{"ruleId":"408","severity":1,"message":"464","line":44,"column":10,"nodeType":"410","messageId":"411","endLine":44,"endColumn":20},{"ruleId":"408","severity":1,"message":"465","line":50,"column":7,"nodeType":"410","messageId":"411","endLine":50,"endColumn":15},{"ruleId":"408","severity":1,"message":"466","line":51,"column":7,"nodeType":"410","messageId":"411","endLine":51,"endColumn":12},{"ruleId":"408","severity":1,"message":"419","line":52,"column":9,"nodeType":"410","messageId":"411","endLine":52,"endColumn":16},{"ruleId":"408","severity":1,"message":"467","line":55,"column":11,"nodeType":"410","messageId":"411","endLine":55,"endColumn":23},{"ruleId":"408","severity":1,"message":"468","line":55,"column":25,"nodeType":"410","messageId":"411","endLine":55,"endColumn":40},{"ruleId":"408","severity":1,"message":"422","line":57,"column":11,"nodeType":"410","messageId":"411","endLine":57,"endColumn":17},{"ruleId":"408","severity":1,"message":"435","line":57,"column":19,"nodeType":"410","messageId":"411","endLine":57,"endColumn":28},{"ruleId":"408","severity":1,"message":"479","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"509","line":9,"column":7,"nodeType":"410","messageId":"411","endLine":9,"endColumn":16},{"ruleId":"408","severity":1,"message":"510","line":2,"column":8,"nodeType":"410","messageId":"411","endLine":2,"endColumn":12},{"ruleId":"408","severity":1,"message":"511","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"512","line":6,"column":8,"nodeType":"410","messageId":"411","endLine":6,"endColumn":19},{"ruleId":"408","severity":1,"message":"513","line":10,"column":10,"nodeType":"410","messageId":"411","endLine":10,"endColumn":18},{"ruleId":"408","severity":1,"message":"435","line":55,"column":19,"nodeType":"410","messageId":"411","endLine":55,"endColumn":28},{"ruleId":"423","severity":1,"message":"514","line":62,"column":6,"nodeType":"425","endLine":62,"endColumn":30,"suggestions":"515"},{"ruleId":"408","severity":1,"message":"413","line":71,"column":19,"nodeType":"410","messageId":"411","endLine":71,"endColumn":26},{"ruleId":"408","severity":1,"message":"479","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"516","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"442","severity":1,"message":"517","line":82,"column":11,"nodeType":"410","messageId":"444","endLine":82,"endColumn":17},{"ruleId":"408","severity":1,"message":"497","line":41,"column":7,"nodeType":"410","messageId":"411","endLine":41,"endColumn":14},{"ruleId":"408","severity":1,"message":"498","line":51,"column":6,"nodeType":"410","messageId":"411","endLine":51,"endColumn":13},{"ruleId":"408","severity":1,"message":"461","line":55,"column":12,"nodeType":"410","messageId":"411","endLine":55,"endColumn":18},{"ruleId":"408","severity":1,"message":"422","line":56,"column":9,"nodeType":"410","messageId":"411","endLine":56,"endColumn":15},{"ruleId":"408","severity":1,"message":"435","line":56,"column":17,"nodeType":"410","messageId":"411","endLine":56,"endColumn":26},{"ruleId":"408","severity":1,"message":"518","line":57,"column":7,"nodeType":"410","messageId":"411","endLine":57,"endColumn":14},{"ruleId":"408","severity":1,"message":"419","line":58,"column":7,"nodeType":"410","messageId":"411","endLine":58,"endColumn":14},{"ruleId":"408","severity":1,"message":"519","line":59,"column":9,"nodeType":"410","messageId":"411","endLine":59,"endColumn":13},{"ruleId":"408","severity":1,"message":"520","line":59,"column":15,"nodeType":"410","messageId":"411","endLine":59,"endColumn":22},{"ruleId":"408","severity":1,"message":"502","line":61,"column":8,"nodeType":"410","messageId":"411","endLine":61,"endColumn":12},{"ruleId":"408","severity":1,"message":"503","line":62,"column":8,"nodeType":"410","messageId":"411","endLine":62,"endColumn":19},{"ruleId":"452","severity":1,"message":"453","line":69,"column":15,"nodeType":"454","messageId":"407","endLine":69,"endColumn":17},{"ruleId":"408","severity":1,"message":"506","line":80,"column":9,"nodeType":"410","messageId":"411","endLine":80,"endColumn":25},{"ruleId":"408","severity":1,"message":"507","line":84,"column":9,"nodeType":"410","messageId":"411","endLine":84,"endColumn":32},"no-native-reassign",["521"],"no-negated-in-lhs",["522"],"no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","unexpected","no-unused-vars","'loading1' is assigned a value but never used.","Identifier","unusedVar","'demoLogin' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FETCH_USERS_QUERY' is defined but never used.","'data1' is assigned a value but never used.","'history' is assigned a value but never used.","'formError' is assigned a value but never used.","'setFormError' is assigned a value but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'assignUser'. Either include it or remove the dependency array.","ArrayExpression",["523"],"no-whitespace-before-property","Unexpected whitespace before property lengthValue -1.","MemberExpression","unexpectedWhitespace",{"range":"524","text":"525"},"'users' is assigned a value but never used.","Duplicate key 'root'.","Duplicate key 'container'.","'setErrors' is assigned a value but never used.","'usersValue' is assigned a value but never used.","'setUserValue' is assigned a value but never used.","'assignLoading' is assigned a value but never used.","'data' is assigned a value but never used.","'usersloading' is assigned a value but never used.","'projectsloading' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'select' is already defined.","'opt' is already defined.","'el' is already defined.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'openNav' is defined but never used.","'closeNav' is defined but never used.","'HandleOnClickAssignUser' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useCallback' is defined but never used.","'logout' is assigned a value but never used.","'AssignUser' is defined but never used.","'CreateTicket' is defined but never used.","'createData' is defined but never used.","'indexVal' is assigned a value but never used.","'index' is assigned a value but never used.","'markersArray' is assigned a value but never used.","'setMarkersArray' is assigned a value but never used.","'rows' is assigned a value but never used.","'length' is assigned a value but never used.",["521"],["522"],"'classes' is assigned a value but never used.","'AccountsImg' is defined but never used.","'AccountsImg2' is defined but never used.","React Hook useEffect has a missing dependency: 'demoLogin'. Either include it or remove the dependency array.",["526"],"'handleClickDemo' is defined but never used.","'useState' is defined but never used.","'counterValue' is assigned a value but never used.","'featureRequests' is assigned a value but never used.","'otherComments' is assigned a value but never used.","'BugsErrors' is assigned a value but never used.","'trainingDocuments' is assigned a value but never used.","'j' is already defined.","'countArray' is assigned a value but never used.","'one' is assigned a value but never used.","'FETCH_PROJECT_ASSIGNED_PROSONNEL_QUERY' is defined but never used.",["527"],{"range":"528","text":"525"},"'success' is defined but never used.","'useContext' is defined but never used.","'styles' is assigned a value but never used.","'TablePagination' is defined but never used.","'SideAndNavbar' is defined but never used.","'useMutation' is defined but never used.","'columns' is assigned a value but never used.","'counter' is assigned a value but never used.","'valueNumber' is assigned a value but never used.","'userData' is assigned a value but never used.","'projectData' is assigned a value but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'array' is assigned a value but never used.","'loading2' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'RenderElement' is defined but never used.","'useStyles' is assigned a value but never used.","'clsx' is defined but never used.","'OutlinedInput' is defined but never used.","'FormControl' is defined but never used.","'useQuery' is defined but never used.","React Hook useEffect has a missing dependency: 'create'. Either include it or remove the dependency array.",["529"],"'useEffect' is defined but never used.","'length' is already defined.","'context' is assigned a value but never used.","'role' is assigned a value but never used.","'setRole' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"530","fix":"531"},[2400,2401],"",{"desc":"532","fix":"533"},{"desc":"530","fix":"534"},[2657,2658],{"desc":"535","fix":"536"},"Update the dependencies array to be: [userId, projectId, assignUser]",{"range":"537","text":"538"},"Update the dependencies array to be: [demoLogin, role]",{"range":"539","text":"540"},{"range":"541","text":"538"},"Update the dependencies array to be: [create, messageValue, ticketId]",{"range":"542","text":"543"},[2024,2043],"[userId, projectId, assignUser]",[1980,1986],"[demoLogin, role]",[2288,2307],[1460,1484],"[create, messageValue, ticketId]"]