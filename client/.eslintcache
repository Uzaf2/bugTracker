[{"/Users/usmanzafar/Desktop/bugTracker/client/src/index.js":"1","/Users/usmanzafar/Desktop/bugTracker/client/src/ApolloProvider.js":"2","/Users/usmanzafar/Desktop/bugTracker/client/src/App.js":"3","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Login.js":"4","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ViewProjectsList.js":"5","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateProject.js":"6","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Register.js":"7","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/AssignUser.js":"8","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ProjectDetails.js":"9","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Users.js":"10","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ManageUserRoles.js":"11","/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable2.js":"12","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateTicket.js":"13","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable.js":"14","/Users/usmanzafar/Desktop/bugTracker/client/src/components/SideAndNavbar.js":"15","/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserTable.js":"16","/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable.js":"17","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnel.js":"18","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnelQuery.js":"19","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable2.js":"20","/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserList.js":"21","/Users/usmanzafar/Desktop/bugTracker/client/src/util/hooks.js":"22","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Accounts.js":"23","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/TestUserRoles.js":"24","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TestUserTable.js":"25"},{"size":149,"mtime":1618575330302,"results":"26","hashOfConfig":"27"},{"size":675,"mtime":1618575330297,"results":"28","hashOfConfig":"27"},{"size":2664,"mtime":1618595392461,"results":"29","hashOfConfig":"27"},{"size":5839,"mtime":1618586700569,"results":"30","hashOfConfig":"27"},{"size":283,"mtime":1618575330304,"results":"31","hashOfConfig":"27"},{"size":2414,"mtime":1618575330303,"results":"32","hashOfConfig":"27"},{"size":7690,"mtime":1618582694300,"results":"33","hashOfConfig":"27"},{"size":3146,"mtime":1618575330303,"results":"34","hashOfConfig":"27"},{"size":1921,"mtime":1618575330303,"results":"35","hashOfConfig":"27"},{"size":406,"mtime":1618575330303,"results":"36","hashOfConfig":"27"},{"size":3425,"mtime":1618594092317,"results":"37","hashOfConfig":"27"},{"size":3874,"mtime":1618575330300,"results":"38","hashOfConfig":"27"},{"size":6546,"mtime":1618575330303,"results":"39","hashOfConfig":"27"},{"size":4522,"mtime":1618575330300,"results":"40","hashOfConfig":"27"},{"size":4877,"mtime":1618575330300,"results":"41","hashOfConfig":"27"},{"size":3639,"mtime":1618595234786,"results":"42","hashOfConfig":"27"},{"size":5250,"mtime":1618575330299,"results":"43","hashOfConfig":"27"},{"size":5454,"mtime":1618575330299,"results":"44","hashOfConfig":"27"},{"size":996,"mtime":1618575330299,"results":"45","hashOfConfig":"27"},{"size":4389,"mtime":1618575330300,"results":"46","hashOfConfig":"27"},{"size":1023,"mtime":1618575330300,"results":"47","hashOfConfig":"27"},{"size":414,"mtime":1618575330304,"results":"48","hashOfConfig":"27"},{"size":3414,"mtime":1618602634449,"results":"49","hashOfConfig":"27"},{"size":3296,"mtime":1618595290762,"results":"50","hashOfConfig":"27"},{"size":1612,"mtime":1618597940936,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"l0fpne",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/usmanzafar/Desktop/bugTracker/client/src/index.js",[],["119","120"],"/Users/usmanzafar/Desktop/bugTracker/client/src/ApolloProvider.js",["121"],"import React from 'react';\r\nimport App from './App';\r\nimport  ApolloClient from 'apollo-client';\r\nimport { InMemoryCache } from '@apollo/client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { setContext } from 'apollo-link-context';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n    uri:'http://localhost:5000'\r\n})\r\n\r\n/*\r\nconst authLink = setContext(()=>{\r\n    const token = localStorage.getItem('jwtToken');\r\n\r\n})\r\n*/\r\n\r\nconst client = new ApolloClient({\r\n    link: httpLink,\r\n    cache: new InMemoryCache()\r\n})\r\n\r\n\r\nexport default (\r\n    <ApolloProvider client={client}>\r\n   <App/> \r\n    </ApolloProvider>\r\n)","/Users/usmanzafar/Desktop/bugTracker/client/src/App.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Login.js",["122","123","124","125","126"],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ViewProjectsList.js",["127"],"import React from 'react';\r\nimport ProjectTable from '../components/ProjectTable';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\n\r\n function ViewProjectsList() {\r\n\r\n  return (\r\n    <div>\r\n        <ProjectTable/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ViewProjectsList;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateProject.js",["128"],"import React, { useState } from 'react';\r\nimport '../css/createProject.css';\r\nimport '../css/main.css';\r\nimport gql from 'graphql-tag';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\n\r\nfunction CreateProject(props) {\r\n\r\n    const [errors, setErrors]= useState({});\r\n    const {onChange, onSubmit, values}= useForm(createProject, {\r\n        name:'',\r\n        description: ''\r\n    });\r\n    \r\n    const [create, {loading}] = useMutation (CREATE_PROJECT,{\r\n        update(_,  {data}){\r\n            //console.log(\"In the update function of the create Project page\");\r\n            console.log(\"Data from login\",data);\r\n        },\r\n        onError(err) {\r\n            console.log(err);\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n        },\r\n        variables:values\r\n    });\r\n    \r\n    function createProject () {\r\n        create();\r\n    }\r\n\r\n return (\r\n<body>\r\n\r\n        <SideAndNavbar/>\r\n          <form onSubmit={onSubmit} class=\"inputForm\">\r\n            <label for=\"name\">Project Name</label>\r\n            <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            name=\"name\" \r\n            placeholder=\"Project name..\" \r\n            autoComplete=\"name\"\r\n            error={errors.name ? true:false}\r\n            value={values.name}\r\n            onChange={onChange}/>\r\n            <label for=\"description\">Project Description</label>\r\n            <textarea \r\n            className=\"description\" \r\n            type=\"text\" \r\n            id=\"description\" \r\n            name=\"description\" \r\n            placeholder=\"Project desc..\" required\r\n            error={errors.description  ? true:false}\r\n            value={values.description}\r\n            onChange={onChange}></textarea>\r\n            <input type=\"submit\" value=\"Create Project\" />\r\n          </form>\r\n          <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                    {Object.values(errors).map(value=>(\r\n                        <li key={value}>{value}</li>\r\n                    ))}\r\n                </ul>\r\n          </div>\r\n   </body>\r\n )\r\n}\r\n\r\nconst CREATE_PROJECT =  gql `\r\nmutation createProject($name: String! $description: String!) {\r\n    createProject(name:$name description: $description) {\r\n        name description\r\n    }     \r\n}`;\r\n\r\nexport default CreateProject;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Register.js",["129","130","131"],"import { React, useState, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { TextField } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport { Input } from 'semantic-ui-react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputType:{\r\n        width: '100%'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        marginTop: 300,\r\n        alignContent: \"center\"\r\n    },\r\n    fontType: {\r\n        fontFamily: font,\r\n        fontSize: 16\r\n    },\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        height: '100%'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(5, 0, 4),\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: \"center\",\r\n        justify: \"center\",\r\n    },\r\n\r\n}));\r\n\r\nconst font = \"'Merriweather', serif\";\r\nfunction Register(props) {\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const { onChange, onSubmit, values } = useForm(registerUser, {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n        update(_, { data }) {\r\n            //console.log(data)\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n            //console.log(\"setting erorrs:\",errors)\r\n        },\r\n        variables: values\r\n    });\r\n\r\n    //console.log(\"Adduser\", addUser);\r\n    /*\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n        update(_, { data: { register: userData }}){\r\n              console.log(userData)\r\n              props.history.push('/');\r\n          },\r\n          onError(err){\r\n             setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n          },\r\n          variables: values\r\n      });\r\n      */\r\n\r\n    function registerUser() {\r\n        addUser();\r\n    }\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\" className={useStyles.container} class=\"background\">\r\n            <CssBaseline />\r\n            <div className=\"form\">\r\n                <div className={useStyles.paper} class=\"innerForm\">\r\n                    <Typography component=\"h1\" variant=\"h5\" className={styles.fontType} style={{ marginBottom: \"10px\" }}>\r\n                    </Typography>\r\n                    <form className={useStyles.form} class=\"formContainer1\" onSubmit={onSubmit}>\r\n                        <Grid container spacing={2}>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    id=\"username\"\r\n                                    label=\"Name\"\r\n                                    error={errors.username ? true : false}\r\n                                    value={values.username}\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    autoComplete=\"username\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    type=\"text\"\r\n                                    error={errors.email ? true : false}\r\n                                    value={values.email}\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    error={errors.password ? true : false}\r\n                                    value={values.password}\r\n                                    name=\"password\"\r\n                                    autoComplete=\"password\"\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    label=\"Confirm Password\"\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    name=\"confirmPassword\"\r\n                                    autoComplete=\"confirmPassword\"\r\n                                    error={errors.confirmPassword ? true : false}\r\n                                    value={values.confirmPassword}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={useStyles.submit}\r\n                            style={{ marginTop: \"10px\" }}>\r\n                            <Typography component=\"h1\" variant=\"h5\" className={styles.fontType}>\r\n                                Register\r\n                    </Typography>\r\n                        </Button>\r\n                    </form>\r\n                    <div className=\"ui error message\">\r\n                        <ul className=\"list\">\r\n                            {Object.values(errors).map(value => (\r\n                                <li key={value}>{value}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        username: $username\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n        email: $email\r\n      }\r\n    ) {\r\n      username\r\n      email\r\n      creationTime\r\n    }\r\n  }`;\r\n\r\nexport default Register;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/AssignUser.js",["132","133","134","135","136","137","138","139"],"import React, { useState } from 'react';\r\nimport '../css/createProject.css';\r\nimport '../css/main.css';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Message, Form } from \"semantic-ui-react\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\nfunction AssignUser(props) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [formError,setFormError] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [projectId, setProjectId] = useState(\"\");\r\n    const index = props.location.state.index - 1;\r\n    const { loading, data } = useQuery(FETCH_USERS_QUERY);\r\n    const projectsQuery = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n    const [ errors, setErrors ] = useState({});\r\n\r\n    const [assignUser,{loading1} ] = useMutation(ASSIGN_USER, {\r\n      update(_,{data}){\r\n\r\n        console.log(\"Mutation done\")\r\n        success();\r\n      }, \r\n      onError(err){\r\n          setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n      }, variables: { userId, projectId }\r\n     \r\n  });\r\n\r\n    //console.log(userId,projectId);\r\n  \r\n    var rows= ['Select the user'];\r\n    if (loading) \r\n         return <p>Loading...</p>;\r\n    else {\r\n        var length = data.getUsers.length;\r\n        for(var i=0;i<length;i++)\r\n        {\r\n            rows.push(data.getUsers[i].username )\r\n        }    \r\n    }\r\n\r\n    function AssignUser()\r\n    {\r\n      assignUser();\r\n    }\r\n\r\n    function success() {\r\n      alert(\"User assignned to the project\");\r\n    }\r\n\r\n    function handleOnClick(event) {\r\n\r\n        var x = document.getElementById(\"selectValue\");\r\n        const valueMatch = x.value;\r\n        var indexValue;\r\n        const length = data.getUsers.length;\r\n        for(var i=0;i<length;i++)\r\n        {\r\n            if (valueMatch === data.getUsers[i].username)\r\n            {\r\n                indexValue = i;\r\n            }\r\n        } \r\n\r\n        setUserId(data.getUsers[indexValue].id);\r\n        setProjectId(projectsQuery.data.getProjects[index].id);\r\n\r\n        AssignUser();\r\n      }  \r\n      \r\n return (\r\n<body>\r\n        <SideAndNavbar/>\r\n        <div>\r\n        <label for=\"name\">Assign Users to Projects</label>\r\n         <select id=\"selectValue\"  onChange={handleOnClick} >\r\n         {rows.map(time => {\r\n           return (\r\n             <option value={time}>{time}</option>\r\n           )\r\n         })}\r\n    </select>\r\n   \r\n        </div>\r\n   </body>\r\n )\r\n}\r\n\r\nconst FETCH_USERS_QUERY = gql`\r\n{\r\n  getUsers{\r\n  username\r\n  id\r\n  email\r\n  creationTime\r\n  role\r\n  access\r\n}\r\n}`;\r\n\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getProjects{\r\n  name\r\n  description\r\n  id\r\n}\r\n}`;\r\n\r\nconst ASSIGN_USER =  gql `\r\nmutation assignUser($projectId: String! $userId: String!) {\r\n  assignUser(projectId:$projectId userId: $userId) {\r\n        name description id\r\n    }     \r\n}`;\r\nexport default AssignUser;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ProjectDetails.js",["140","141","142","143"],"import React, { useState } from 'react';\r\nimport '../css/createProject.css';\r\n\r\n\r\n\r\nimport '../css/main.css';\r\nimport gql from 'graphql-tag';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport ProjectTable2 from '../components/ProjectTable2';\r\nimport AssignedPersonnel from '../components/AssignedPersonnel';\r\nimport TicketsTable2 from '../components/TicketsTable2';\r\nimport '../css/projectDetails.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ProjectDetails(props) {\r\n  const history = useHistory();\r\n//console.log(\"Props\", props.history.location.state.indexValue);\r\n//console.log(\"Props 2:\", props.history.location.state.index);\r\nvar value =  props.history.location.state.index;\r\n//console.log(\"Props\", props.history.location.state.array[value - 1]);\r\n\r\nfunction AssignUser() {\r\n  //history.push('/AssignUser');\r\n  history.push({\r\n    pathname: '/AssignUser',\r\n    search: '?update=true',  // query string\r\n    state: {  // location state\r\n      index: value, \r\n    },\r\n  }); \r\n\r\n  console.log(\"Value from index\", value);\r\n}\r\n\r\nfunction CreateTicket() {\r\n  history.push('/CreateTicket');\r\n}\r\n\r\n return (\r\n<body>\r\n    <SideAndNavbar/>\r\n      \r\n    <div className=\"bottomDiv\">\r\n    <Button variant=\"contained\" color=\"primary\" onClick={AssignUser} className=\"btn1\">Assign User</Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={CreateTicket} className=\"btn2\">Create Ticket</Button>\r\n    </div>\r\n     \r\n    <div className=\"firstDiv\">\r\n    \r\n    <ProjectTable2 index={value}/> \r\n    </div>\r\n    <div className=\"main\">\r\n    <AssignedPersonnel index={value}/>\r\n    <div className=\"secondMain\">\r\n    <TicketsTable2 className=\"ticketsTable\"/>\r\n    </div>\r\n    </div>\r\n    \r\n    \r\n   </body>\r\n )\r\n}\r\n\r\n\r\nexport default ProjectDetails;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Users.js",["144","145"],"import React from 'react';\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\nfunction Users () {\r\n    const { loading, data: { getUsers:users } } = useQuery(FETCH_USERS_QUERY);\r\n    return (\r\n       <div>\r\n       </div>\r\n        );\r\n}\r\n\r\nconst FETCH_USERS_QUERY = gql `\r\n{\r\n  getUsers{\r\n  id\r\n  creationTime\r\n  username\r\n  role\r\n  access\r\n}\r\n}\r\n\r\n`;\r\n\r\nexport default Users;\r\n","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/ManageUserRoles.js",["146","147","148","149","150","151","152"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable2.js",["153","154","155"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '500px',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n];\r\n\r\nfunction createData(name, description) {\r\n  return { name, description };\r\n}\r\n\r\nfunction ProjectTable2(props) {\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const index = props.index-1;\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    //var length = data.getProjects.length;\r\n    //for (var i = 0; i < ; i++) {\r\n      rows[index] = createData(data.getProjects[index].name, data.getProjects[index].description)\r\n    //}\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  return (\r\n    <body>\r\n      <div className=\"Table\">\r\n        <div id=\"main\" class=\"main\">\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                                {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getProjects{\r\n  name\r\n  description\r\n}\r\n}`;\r\n\r\n\r\n\r\n\r\n\r\nexport default ProjectTable2;","/Users/usmanzafar/Desktop/bugTracker/client/src/pages/CreateTicket.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import React, { useState } from 'react';\r\nimport '../css/createProject.css';\r\nimport '../css/main.css';\r\nimport gql from 'graphql-tag';\r\nimport SideAndNavbar from '../components/SideAndNavbar';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { useForm } from '../util/hooks';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nfunction CreateTicket(props) {\r\n\r\n    const [errors, setErrors]= useState({});\r\n    const {onChange, onSubmit, values}= useForm(createProject, {\r\n        \r\n        title:'',\r\n        description: '',\r\n        assignedProjectInput: '',\r\n        assignedDeveloperInput: '',\r\n        priority: '',\r\n        type: '',\r\n        status: ''\r\n    });\r\n    \r\n    const [create, {loading}] = useMutation (CREATE_TICKET,{\r\n        update(_,  {data}){\r\n       \r\n        },\r\n        onError(err) {\r\n        //.graphQLErrors[0].extensions.exception.errors\r\n        // setErrors(err);\r\n        console.log(\"Errors from create tickets\", err);\r\n        },\r\n        variables:values\r\n    });\r\n\r\n    const {loading:usersloading, data: users} = useQuery (GET_USERS);\r\n    const {loading:projectsloading, data:projects} = useQuery (GET_PROJECTS);\r\n    \r\n    if (projects!=null)\r\n    {       \r\n        const length = projects.getProjects.length; \r\n        var projectsArray = [];\r\n        for (var i=0;i<projects.getProjects.length; i++)\r\n        {\r\n            projectsArray.push(projects.getProjects[i].name);\r\n        }\r\n    \r\n        var select = document.getElementById(\"assignedProjectInput\");   \r\n        \r\n        if (select.length < length)\r\n        {\r\n            // Put a check here\r\n            for(var i = 0; i < projectsArray.length; i++) {\r\n            var opt = projectsArray[i];\r\n            var el = document.createElement(\"option\");\r\n            el.textContent = opt;\r\n            el.value = opt;\r\n            select.appendChild(el);\r\n            }\r\n        }\r\n    }\r\n    if (users!=null)\r\n    {\r\n        const length = users.getUsers.length; \r\n        var usernames = [];\r\n        \r\n        for (var i=0;i<users.getUsers.length; i++)\r\n        {\r\n           usernames.push(users.getUsers[i].username);\r\n        }\r\n    \r\n        var select = document.getElementById(\"assignedDeveloperInput\");\r\n       \r\n         if (select.length< length)\r\n        {\r\n             // Put a check here\r\n            for(var i = 0; i < usernames.length; i++) {\r\n            var opt = usernames[i];\r\n            var el = document.createElement(\"option\");\r\n            el.textContent = opt;\r\n            el.value = opt;\r\n            select.appendChild(el);\r\n            }\r\n        }\r\n    }\r\n    \r\n    function createProject () {\r\n        create();\r\n    }\r\n return (\r\n<body>\r\n\r\n        <SideAndNavbar/>\r\n          <form onSubmit={onSubmit} class=\"inputForm\">\r\n            <label for=\"title\">Ticket Title</label>\r\n            <input \r\n            type=\"text\" \r\n            id=\"title\" \r\n            name=\"title\" \r\n            placeholder=\"Ticket Title..\" \r\n            autoComplete=\"title\"\r\n            error={errors.title ? true:false}\r\n            value={values.title}\r\n            onChange={onChange}/>\r\n            <label for=\"description\">Ticket Description</label>\r\n            <textarea \r\n            className=\"description\" \r\n            type=\"text\" \r\n            id=\"description\" \r\n            name=\"description\" \r\n            placeholder=\"Project desc..\" required\r\n            error={errors.description}\r\n            value={values.description}\r\n            onChange={onChange}/>\r\n            <label for=\"\">Assigned Project</label>\r\n            <select id=\"assignedProjectInput\" name=\"assignedProjectInput\"\r\n            value={values.assignedProjectInput} onChange={onChange}>\r\n            </select>\r\n            <label for=\"assignedDeveloperInput\">Assigned Developer</label>\r\n            <select id=\"assignedDeveloperInput\" name=\"assignedDeveloperInput\"\r\n            id=\"assignedDeveloperInput\" name=\"assignedDeveloperInput\"\r\n            value={values.assignedDeveloperInput} onChange={onChange}>\r\n            </select>\r\n            <label for=\"priority\">Priority</label>\r\n            <select id=\"priority\"\r\n            value={values.priority}\r\n            name=\"priority\"\r\n            onChange={onChange}>\r\n            <option value=\"Low\">Low</option>\r\n            <option value=\"Medium\">Medium</option>\r\n            <option value=\"High\">High</option>\r\n            </select>\r\n            <label for=\"type\">Ticket Type</label>\r\n            <select id=\"type\" name=\"type\"\r\n            value={values.type}\r\n            id=\"type\"\r\n            name=\"type\"\r\n            onChange={onChange}>\r\n            <option value=\"Bugs/Error\">Bugs/Error</option>\r\n            <option value=\"Feature Requests\">Feature Requests</option>\r\n            <option value=\"Other Comments\">Other Comments</option>\r\n            <option value=\"Training/Document Requests\">Training/Document Requests</option>\r\n            </select>\r\n            <label for=\"ticketStatus\">Ticket Status</label>\r\n            <select name=\"status\" value={values.status}\r\n            id=\"status\" name=\"status\"\r\n            onChange={onChange}>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"open\">Open</option>\r\n            <option value=\"inprogress\">In Progress</option>\r\n            </select>\r\n            <input type=\"submit\" value=\"Create Ticket\" />\r\n          </form>\r\n          <div className=\"ui error message\">\r\n                <ul className=\"list\">\r\n                    {Object.values(errors).map(value=>(\r\n                        <li key={value}>{value}</li>\r\n                    ))}\r\n                </ul>\r\n          </div>\r\n   </body>\r\n )\r\n}\r\n\r\nconst CREATE_TICKET =  gql `\r\nmutation createTicket($title: String! $description: String! $assignedProjectInput: String!\r\n    $assignedDeveloperInput: String! $priority: String!  $status: String! $type: String!) {\r\n    \r\n    createTicket(title:$title description: $description assignedProjectInput: $assignedProjectInput \r\n    assignedDeveloperInput: $assignedDeveloperInput priority:$priority status: $status type: $type) {\r\n    \r\n    id\r\n    title\r\n    description\r\n    priority \r\n    status\r\n    type\r\n    createdAt\r\n    updatedAt\r\n    \r\n}     \r\n}`;\r\n\r\nconst GET_USERS = gql`\r\n{\r\n    getUsers {\r\n        id \r\n        username\r\n        email\r\n        creationTime\r\n        role \r\n        access\r\n    }\r\n}\r\n`;\r\n\r\nconst GET_PROJECTS = gql` \r\n{\r\n    getProjects {\r\n        id \r\n        name\r\n        description\r\n        users\r\n        tickets \r\n    }\r\n}  `;\r\nexport default CreateTicket;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable.js",["171","172"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\n//import SideAndNavbar from '../components/SideAndNavbar';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '1000px',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 100 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  { id: 'priority', label: 'Priority', minWidth: 100 },\r\n  { id: 'status', label: 'Status', minWidth: 100 },\r\n  { id: 'created', label: 'Created', minWidth: 100 },\r\n];\r\n\r\nfunction createData(name, description, priority, status, created) {\r\n  return { name, description, priority, status, created };\r\n}\r\n\r\nfunction TicketsTable() {\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    console.log(\"data\", data);\r\n    var length = data.getTickets.length;\r\n    for (var i = 0; i < length; i++) {\r\n    rows[i] = createData(data.getTickets[i].title, data.getTickets[i].description \r\n    ,data.getTickets[i].priority, data.getTickets[i].status, data.getTickets[i].createdAt);\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <body>\r\n      <div>\r\n        <SideAndNavbar></SideAndNavbar>\r\n        <div id=\"main\" class=\"main\">\r\n          <Paper className={classes.root}>\r\n          <h3>Tickets Table</h3>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                                {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getTickets{\r\n    title\r\n    description\r\n    priority\r\n    status\r\n    type\r\n    createdAt\r\n    updatedAt\r\n      }\r\n}`;\r\n\r\nexport default TicketsTable;\r\n\r\n/*\r\ntitle\r\ndescription\r\nassignedDeveloper\r\nsubmitter\r\npriority\r\nstatus\r\ntype\r\ncreatedAt\r\nupdatedAt\r\n\r\n\r\n\r\nusername\r\n    email\r\n    creationTime\r\n    role\r\n    access\r\n    */","/Users/usmanzafar/Desktop/bugTracker/client/src/components/SideAndNavbar.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport '../css/main.css';\r\nimport UserTable from './UserTable';\r\nimport grid from '../icons/grid-outline.svg';\r\nimport homeIcon from '../icons/home-outline.svg';\r\nimport layers from '../icons/layers-outline.svg';\r\nimport list from '../icons/list-outline.svg';\r\nimport peopleCirle from '../icons/people-circle-outline.svg';\r\n//import peopleOutline from '../icons/people-outline.svg';\r\nimport personAddOutline from '../icons/person-add-outline.svg';\r\nimport personCircleOutline from '../icons/person-circle-outline.svg';\r\n//import personOutline from 'person-outline.svg';\r\nimport reorderFourOutline from '../icons/reorder-four-outline.svg';\r\n//import users from 'users.svg';\r\nimport UserList from './UserList';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SideAndNavbar(props) {\r\n  const history = useHistory();\r\n \r\n  function openNav(e) {\r\n    document.getElementById(\"mySidebar\").style.width = \"250px\";\r\n    document.getElementById(\"main\").style.marginLeft = \"250px\";\r\n\r\n    document.getElementById('navName').style.fontSize = '0.75rem';\r\n    document.getElementById('navName1').style.fontSize = '0.75rem';\r\n    document.getElementById('navName2').style.fontSize = '0.75rem';\r\n    document.getElementById('navName3').style.fontSize = '0.75rem';\r\n    document.getElementById('navName4').style.fontSize = '0.75rem';\r\n    document.getElementById('navName5').style.fontSize = '';\r\n\r\n    document.getElementById('grid').style.width = '30px';\r\n    document.getElementById('grid1').style.width = '30px';\r\n    document.getElementById('grid2').style.width = '30px';\r\n    document.getElementById('grid3').style.width = '30px';\r\n    document.getElementById('grid4').style.width = '30px';\r\n    document.getElementById('grid5').style.width = '30px';\r\n  }\r\n\r\n  function closeNav(e) {\r\n    document.getElementById('mySidebar').style.width = '60px';\r\n    document.getElementById('main').style.marginLeft = '60px';\r\n\r\n    document.getElementById('navName').style.fontSize = '0px';\r\n    document.getElementById('navName1').style.fontSize = '0px';\r\n    document.getElementById('navName2').style.fontSize = '0px';\r\n    document.getElementById('navName3').style.fontSize = '0px';\r\n    document.getElementById('navName4').style.fontSize = '0px';\r\n    document.getElementById('navName5').style.fontSize = '0px';\r\n\r\n    document.getElementById('grid').style.width = '30px';\r\n    document.getElementById('grid1').style.width = '30px';\r\n    document.getElementById('grid2').style.width = '30px';\r\n    document.getElementById('grid3').style.width = '30px';\r\n    document.getElementById('grid4').style.width = '30px';\r\n    document.getElementById('grid5').style.width = '30px';\r\n  }\r\n  \r\n  function HandleOnClickProjectTable() {\r\n    history.push('/ProjectTable');\r\n  }\r\n\r\n  function HandleOnClickTicketsTable() {\r\n    history.push('/TicketsTable');\r\n  }\r\n  \r\n\r\n  function HandleOnClickManageUserRoles() {\r\n    history.push('/ManageUserRoles');\r\n  }\r\n  return (\r\n    <body>\r\n      <div id=\"mySidebar\" class=\"sidebar\">\r\n        <a href=\"#\" className=\"section\">\r\n          <img class=\"grid\" id=\"grid\" src={grid} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName\">Dashboard Home</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickManageUserRoles}>\r\n          <img class=\"grid\" id=\"grid1\" src={homeIcon} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName1\">Manage Role Assignment</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\">\r\n          <img class=\"grid\" id=\"grid2\" src={peopleCirle} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName2\">Manage Project Users</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickProjectTable}>\r\n          <img class=\"grid\" id=\"grid3\" src={layers} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName3\">My Projects</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\" onClick={HandleOnClickTicketsTable}>\r\n          <img class=\"grid\" id=\"grid4\" src={layers} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName4\">My Tickets</span>\r\n        </a>\r\n        <a href=\"#\" className=\"section\">\r\n          <img class=\"grid\" id=\"grid5\" src={personAddOutline} alt=\"image al\" />\r\n          <span class=\"navName\" id=\"navName5\">User Profile</span>\r\n        </a>\r\n        <a className=\"section\" href=\"#section\" onClick={openNav}>\r\n          Open Sidebar\r\n        </a>\r\n        <a className=\"section\" href=\"#section\" onClick={closeNav}>\r\n          Close Sidebar\r\n          </a>\r\n        </div>\r\n      <div class=\"topnav\">\r\n        <a class=\"active\" href=\"#home\">Name</a>\r\n        <a class=\"active\" href=\"#home\">Home</a>\r\n        <a href=\"#about\">Logout</a>\r\n      </div>\r\n      <div id=\"main\" class=\"main\">\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default SideAndNavbar;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserTable.js",["191"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/ProjectTable.js",["192","193","194","195","196","197"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  {\r\n    id: 'details',\r\n    label: 'Details',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\nfunction createData(name, description, details) {\r\n  return { name, description, details };\r\n}\r\n\r\nfunction ProjectTable() {\r\n\r\n  var i;\r\n  var valueNumber = 0;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    var length = data.getProjects.length;\r\n    for (var i = 0; i < length; i++) {\r\n      rows[i] = createData(data.getProjects[i].name, data.getProjects[i].description, 'Edit Details')\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  function HandleOnClick(props, rowsArray) {\r\n   \r\n    history.push({\r\n      pathname: '/ProjectDetails',\r\n      search: '?update=true',  // query string\r\n      state: {  // location state\r\n        index: props, \r\n        array: rowsArray\r\n      },\r\n    }); \r\n\r\n  }\r\n\r\n  function AssignUser() {\r\n    //history.push('/AssignUser');\r\n    history.push({\r\n      pathname: '/AssignUser',\r\n      search: '?update=true',  // query string\r\n      state: {  // location state\r\n        update: true, \r\n      },\r\n    }); \r\n  }\r\n\r\n  function CreateTicket() {\r\n    history.push('/CreateTicket');\r\n  }\r\n\r\n  function CreateProject() {\r\n    history.push('/CreateProject');\r\n  }\r\n\r\n  function RenderElement(value, value2, value3) {\r\n    var one = \"CreateProject\";\r\n    if (value2.id === \"details\") {\r\n      return <a  onClick={() => HandleOnClick(value3, rows)} className=\"link\"> {value} </a>;\r\n    }\r\n    else {\r\n      return value;\r\n    }\r\n  }\r\n  return (\r\n    <body>\r\n      <div>\r\n        <SideAndNavbar></SideAndNavbar>\r\n     \r\n        <div id=\"main\" className=\"main\">\r\n       \r\n          <Paper className={classes.root}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={CreateProject} className=\"btn1\">Create Project</Button>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    valueNumber++;\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {RenderElement(value, column, valueNumber)}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>    \r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\n  getProjects{\r\n  name\r\n  description\r\n  id\r\n}\r\n}`;\r\n\r\n\r\n\r\nexport default ProjectTable;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnel.js",["198","199","200","201","202","203","204","205","206","207","208"],"import React, {useCallback, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport query from'./AssignedPersonnelQuery.js';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '500px',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'username', label: 'Username', minWidth: 170 },\r\n  { id: 'email', label: 'Email', minWidth: 100 },\r\n  { id: 'creationTime', label: 'Created', minWidth: 100 },\r\n  { id: 'role', label: 'Role', minWidth: 100 },\r\n  { id: 'access', label: 'Access', minWidth: 100 }\r\n];\r\n\r\nfunction createData(username, email, creationTime, role, access) {\r\n  return { username, email, creationTime, role, access};\r\n}\r\n\r\nfunction AssignedDeveloper(props) {\r\n\r\n  var indexVal = \"\"+props.index -1+\"\";\r\n  var index = props.index -1; \r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [ page, setPage ] = React.useState(0);\r\n\r\n  const [ markersArray, setMarkersArray] = useState([]);\r\n  const [ rowsPerPage, setRowsPerPage ] = React.useState(10);\r\n  const [ errors, setErrors ] = useState({});\r\n \r\n const {loading, data} = useQuery (FETCH_PROJECTS_QUERY,{\r\n  variables: { name: String(props.index)}\r\n});\r\n\r\n  var rows = [];\r\n  console.log(\"Error\", errors)\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n   \r\n    console.log(\"Data\",data.getProjectsAndUsers);\r\n    console.log(\"Length\",data.getProjectsAndUsers.length);\r\n  \r\n    var length = data.getProjectsAndUsers.length;\r\n    //var length3 = data.getProjectsAndUsers[index].users.length;\r\n   for (var k = 0; k < length; k++)\r\n    {\r\n          console.log(\"in loop\",data.getProjectsAndUsers[k]);\r\n          var name = (data.getProjectsAndUsers[k].username);\r\n\r\n          var email = (data.getProjectsAndUsers[k].email);\r\n\r\n          var creationTime = (data.getProjectsAndUsers[k].creationTime);\r\n\r\n          var role = (data.getProjectsAndUsers[k].role);\r\n\r\n\r\n          var access = (data.getProjectsAndUsers[k].access);\r\n\r\n          JSON.stringify(name); \r\n          JSON.stringify(email); \r\n          JSON.stringify(creationTime); \r\n          JSON.stringify(role); \r\n          JSON.stringify(access); \r\n\r\n          rows.push({\r\n            username: name,\r\n            email: email,\r\n            creationTime: creationTime,\r\n            role: role,\r\n            access: access\r\n          });\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <body>\r\n      <div>\r\n        <div id=\"main\" class=\"main\">\r\n         \r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n            <p>AssignedPersonnel</p>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                                {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n  query  getProjectsAndUsers ($name: String!){\r\n    getProjectsAndUsers (name: $name) {\r\n      id \r\n      username\r\n      email\r\n      creationTime\r\n      role \r\n      access\r\n  }\r\n  }`;\r\n\r\n\r\nexport default AssignedDeveloper;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/AssignedPersonnelQuery.js",["209","210","211","212","213"],"import React, {useCallback, useState} from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from \"react-router-dom\";\n\nfunction AssignedPersonnelQuery(props) {\n  \n  \n  var index = props.index - 1;\n  const history = useHistory();\n  const [markersArray, setMarkersArray] = useState([]);\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\n  \n  var rows = [];\n  if (loading)\n    return <p>Loading...</p>;\n  else {\n    var length = data.getProjects.length;\n   var length3 = data.getProjects[index].users.length;\n   for (var k = 0; k < length3; k++)\n    {\n      var myName = (data.getProjects[index].users[k]);\n          var myName2 = '\"' + myName + '\"';  \n          JSON.stringify(myName2); \n          markersArray.push({\n            name: myName2\n          });\n    }\n    console.log(\"MarkersArray\", markersArray);\n  }\n}\n\nconst FETCH_PROJECTS_QUERY = gql`\n{\ngetProjects{\n  name\n  description\n  id\n  users\n  tickets\n}  \n}`;\n\n\nexport default AssignedPersonnelQuery;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/TicketsTable2.js",["214","215","216","217"],"import React, {useCallback} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport SideAndNavbar from './SideAndNavbar';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../css/projectTable.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '500px',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 100 },\r\n  { id: 'description', label: 'Description', minWidth: 100 },\r\n  { id: 'developer', label: 'Developer', minWidth: 100 },\r\n  { id: 'status', label: 'Status', minWidth: 100 },\r\n  { id: 'created', label: 'Created', minWidth: 100 },\r\n];\r\n\r\nfunction createData(name, description, developer, status, created) {\r\n  return { name, description, developer, status, created };\r\n}\r\n\r\nfunction TicketsTable() {\r\n\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const { loading, data } = useQuery(FETCH_PROJECTS_QUERY);\r\n\r\n  var rows = [];\r\n  if (loading)\r\n    return <p>Loading...</p>;\r\n  else {\r\n    var length = data.getProjects.length;\r\n   \r\n    for (var i = 0; i < length; i++) {\r\n        \r\n      /*var length2 = data.getProjects[i].tickets.length;\r\n        for(var j = 0; j < length2; j++)\r\n        {\r\n            rows[i] = createData(data.getProjects[i].tickets[j].title, data.getProjects[i].tickets[j].description\r\n                ,data.getProjects[i].tickets[j].assignedDeveloper, data.getProjects[i].tickets[j].status,\r\n                data.getProjects[i].tickets[j].createdAt);\r\n        }\r\n        */\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <body>\r\n      <div>\r\n        <div id=\"main\" class=\"main\">\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <p>Tickets for the Project</p>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}>\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                                {value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nconst FETCH_PROJECTS_QUERY = gql`\r\n{\r\ngetProjects{\r\n  name\r\n  description\r\n  id\r\n}  \r\n}`;\r\n\r\nexport default TicketsTable;","/Users/usmanzafar/Desktop/bugTracker/client/src/components/UserList.js",["218"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\n\r\nfunction UserList() {\r\n    const classes = useStyles();\r\n    const { loading, data } = useQuery(FETCH_USERS_QUERY);\r\n    var rows= ['Select the user'];\r\n    if (loading) \r\n         return <p>Loading...</p>;\r\n    else {\r\n        var length = data.getUsers.length;\r\n        for(var i=0;i<length;i++)\r\n        {\r\n            rows.push(data.getUsers[i].username)\r\n        }    \r\n    }\r\n    return (\r\n        <div>\r\n         <select>\r\n         {rows.map(time => {\r\n           return (\r\n             <option value={time}> {time} </option>\r\n           )\r\n         })}\r\n    </select>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FETCH_USERS_QUERY = gql`\r\n{\r\n  getUsers{\r\n  username\r\n  id\r\n  email\r\n  creationTime\r\n  role\r\n  access\r\n}\r\n}`;\r\n\r\nexport default UserList;","/Users/usmanzafar/Desktop/bugTracker/client/src/util/hooks.js",[],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/Accounts.js",["219","220","221","222","223","224","225","226","227","228","229","230","231"],"/Users/usmanzafar/Desktop/bugTracker/client/src/pages/TestUserRoles.js",["232","233","234","235","236","237","238"],"/Users/usmanzafar/Desktop/bugTracker/client/src/components/TestUserTable.js",["239","240","241","242","243","244","245","246","247","248","249","250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":20},{"ruleId":"255","severity":1,"message":"259","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":14},{"ruleId":"255","severity":1,"message":"260","line":12,"column":27,"nodeType":"257","messageId":"258","endLine":12,"endColumn":33},{"ruleId":"255","severity":1,"message":"261","line":71,"column":20,"nodeType":"257","messageId":"258","endLine":71,"endColumn":27},{"ruleId":"262","severity":1,"message":"263","line":147,"column":21,"nodeType":"264","endLine":147,"endColumn":74},{"ruleId":"262","severity":1,"message":"263","line":149,"column":21,"nodeType":"264","endLine":149,"endColumn":78},{"ruleId":"255","severity":1,"message":"265","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":21},{"ruleId":"255","severity":1,"message":"261","line":17,"column":21,"nodeType":"257","messageId":"258","endLine":17,"endColumn":28},{"ruleId":"255","severity":1,"message":"266","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":37},{"ruleId":"255","severity":1,"message":"267","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":15},{"ruleId":"255","severity":1,"message":"261","line":71,"column":23,"nodeType":"257","messageId":"258","endLine":71,"endColumn":30},{"ruleId":"255","severity":1,"message":"268","line":9,"column":10,"nodeType":"257","messageId":"258","endLine":9,"endColumn":17},{"ruleId":"255","severity":1,"message":"269","line":9,"column":19,"nodeType":"257","messageId":"258","endLine":9,"endColumn":23},{"ruleId":"255","severity":1,"message":"270","line":21,"column":11,"nodeType":"257","messageId":"258","endLine":21,"endColumn":18},{"ruleId":"255","severity":1,"message":"271","line":22,"column":11,"nodeType":"257","messageId":"258","endLine":22,"endColumn":18},{"ruleId":"255","severity":1,"message":"272","line":23,"column":12,"nodeType":"257","messageId":"258","endLine":23,"endColumn":21},{"ruleId":"255","severity":1,"message":"273","line":23,"column":22,"nodeType":"257","messageId":"258","endLine":23,"endColumn":34},{"ruleId":"255","severity":1,"message":"274","line":30,"column":13,"nodeType":"257","messageId":"258","endLine":30,"endColumn":19},{"ruleId":"255","severity":1,"message":"275","line":32,"column":24,"nodeType":"257","messageId":"258","endLine":32,"endColumn":32},{"ruleId":"255","severity":1,"message":"276","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"277","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":11},{"ruleId":"255","severity":1,"message":"278","line":9,"column":10,"nodeType":"257","messageId":"258","endLine":9,"endColumn":21},{"ruleId":"255","severity":1,"message":"279","line":10,"column":10,"nodeType":"257","messageId":"258","endLine":10,"endColumn":17},{"ruleId":"255","severity":1,"message":"261","line":6,"column":13,"nodeType":"257","messageId":"258","endLine":6,"endColumn":20},{"ruleId":"255","severity":1,"message":"280","line":6,"column":39,"nodeType":"257","messageId":"258","endLine":6,"endColumn":44},{"ruleId":"255","severity":1,"message":"281","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"255","severity":1,"message":"282","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"274","line":16,"column":10,"nodeType":"257","messageId":"258","endLine":16,"endColumn":16},{"ruleId":"255","severity":1,"message":"283","line":16,"column":18,"nodeType":"257","messageId":"258","endLine":16,"endColumn":27},{"ruleId":"255","severity":1,"message":"284","line":17,"column":10,"nodeType":"257","messageId":"258","endLine":17,"endColumn":20},{"ruleId":"255","severity":1,"message":"285","line":17,"column":22,"nodeType":"257","messageId":"258","endLine":17,"endColumn":34},{"ruleId":"255","severity":1,"message":"286","line":26,"column":27,"nodeType":"257","messageId":"258","endLine":26,"endColumn":40},{"ruleId":"255","severity":1,"message":"287","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"255","severity":1,"message":"265","line":12,"column":8,"nodeType":"257","messageId":"258","endLine":12,"endColumn":21},{"ruleId":"255","severity":1,"message":"270","line":36,"column":9,"nodeType":"257","messageId":"258","endLine":36,"endColumn":16},{"ruleId":"255","severity":1,"message":"283","line":12,"column":20,"nodeType":"257","messageId":"258","endLine":12,"endColumn":29},{"ruleId":"255","severity":1,"message":"261","line":24,"column":21,"nodeType":"257","messageId":"258","endLine":24,"endColumn":28},{"ruleId":"255","severity":1,"message":"288","line":36,"column":20,"nodeType":"257","messageId":"258","endLine":36,"endColumn":32},{"ruleId":"255","severity":1,"message":"289","line":37,"column":20,"nodeType":"257","messageId":"258","endLine":37,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":53,"column":21,"nodeType":"257","messageId":"292","endLine":53,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":67,"column":18,"nodeType":"257","messageId":"292","endLine":67,"endColumn":19},{"ruleId":"290","severity":1,"message":"293","line":72,"column":13,"nodeType":"257","messageId":"292","endLine":72,"endColumn":19},{"ruleId":"290","severity":1,"message":"291","line":77,"column":21,"nodeType":"257","messageId":"292","endLine":77,"endColumn":22},{"ruleId":"290","severity":1,"message":"294","line":78,"column":17,"nodeType":"257","messageId":"292","endLine":78,"endColumn":20},{"ruleId":"290","severity":1,"message":"295","line":79,"column":17,"nodeType":"257","messageId":"292","endLine":79,"endColumn":19},{"ruleId":"296","severity":1,"message":"297","line":121,"column":13,"nodeType":"298","endLine":121,"endColumn":40},{"ruleId":"296","severity":1,"message":"297","line":121,"column":41,"nodeType":"298","endLine":121,"endColumn":70},{"ruleId":"296","severity":1,"message":"297","line":136,"column":13,"nodeType":"298","endLine":136,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":137,"column":13,"nodeType":"298","endLine":137,"endColumn":24},{"ruleId":"296","severity":1,"message":"297","line":146,"column":25,"nodeType":"298","endLine":146,"endColumn":38},{"ruleId":"255","severity":1,"message":"287","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"255","severity":1,"message":"270","line":40,"column":9,"nodeType":"257","messageId":"258","endLine":40,"endColumn":16},{"ruleId":"255","severity":1,"message":"281","line":1,"column":10,"nodeType":"257","messageId":"258","endLine":1,"endColumn":20},{"ruleId":"255","severity":1,"message":"299","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":17},{"ruleId":"255","severity":1,"message":"300","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":12},{"ruleId":"255","severity":1,"message":"301","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":27},{"ruleId":"255","severity":1,"message":"302","line":13,"column":8,"nodeType":"257","messageId":"258","endLine":13,"endColumn":26},{"ruleId":"255","severity":1,"message":"303","line":15,"column":8,"nodeType":"257","messageId":"258","endLine":15,"endColumn":16},{"ruleId":"262","severity":1,"message":"263","line":74,"column":9,"nodeType":"264","endLine":74,"endColumn":41},{"ruleId":"304","severity":1,"message":"305","line":75,"column":11,"nodeType":"264","endLine":75,"endColumn":67},{"ruleId":"262","severity":1,"message":"263","line":78,"column":9,"nodeType":"264","endLine":78,"endColumn":80},{"ruleId":"304","severity":1,"message":"305","line":79,"column":11,"nodeType":"264","endLine":79,"endColumn":72},{"ruleId":"262","severity":1,"message":"263","line":82,"column":9,"nodeType":"264","endLine":82,"endColumn":41},{"ruleId":"304","severity":1,"message":"305","line":83,"column":11,"nodeType":"264","endLine":83,"endColumn":75},{"ruleId":"262","severity":1,"message":"263","line":86,"column":9,"nodeType":"264","endLine":86,"endColumn":77},{"ruleId":"304","severity":1,"message":"305","line":87,"column":11,"nodeType":"264","endLine":87,"endColumn":70},{"ruleId":"262","severity":1,"message":"263","line":90,"column":9,"nodeType":"264","endLine":90,"endColumn":77},{"ruleId":"304","severity":1,"message":"305","line":91,"column":11,"nodeType":"264","endLine":91,"endColumn":70},{"ruleId":"262","severity":1,"message":"263","line":94,"column":9,"nodeType":"264","endLine":94,"endColumn":41},{"ruleId":"304","severity":1,"message":"305","line":95,"column":11,"nodeType":"264","endLine":95,"endColumn":80},{"ruleId":"255","severity":1,"message":"306","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":18},{"ruleId":"255","severity":1,"message":"287","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"290","severity":1,"message":"291","line":55,"column":14,"nodeType":"257","messageId":"292","endLine":55,"endColumn":15},{"ruleId":"255","severity":1,"message":"307","line":82,"column":12,"nodeType":"257","messageId":"258","endLine":82,"endColumn":22},{"ruleId":"255","severity":1,"message":"308","line":93,"column":12,"nodeType":"257","messageId":"258","endLine":93,"endColumn":24},{"ruleId":"255","severity":1,"message":"309","line":102,"column":9,"nodeType":"257","messageId":"258","endLine":102,"endColumn":12},{"ruleId":"262","severity":1,"message":"310","line":104,"column":14,"nodeType":"264","endLine":104,"endColumn":79},{"ruleId":"255","severity":1,"message":"287","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"255","severity":1,"message":"265","line":12,"column":8,"nodeType":"257","messageId":"258","endLine":12,"endColumn":21},{"ruleId":"255","severity":1,"message":"278","line":15,"column":10,"nodeType":"257","messageId":"258","endLine":15,"endColumn":21},{"ruleId":"255","severity":1,"message":"311","line":16,"column":8,"nodeType":"257","messageId":"258","endLine":16,"endColumn":13},{"ruleId":"255","severity":1,"message":"312","line":35,"column":10,"nodeType":"257","messageId":"258","endLine":35,"endColumn":20},{"ruleId":"255","severity":1,"message":"313","line":41,"column":7,"nodeType":"257","messageId":"258","endLine":41,"endColumn":15},{"ruleId":"255","severity":1,"message":"314","line":42,"column":7,"nodeType":"257","messageId":"258","endLine":42,"endColumn":12},{"ruleId":"255","severity":1,"message":"270","line":43,"column":9,"nodeType":"257","messageId":"258","endLine":43,"endColumn":16},{"ruleId":"255","severity":1,"message":"315","line":47,"column":11,"nodeType":"257","messageId":"258","endLine":47,"endColumn":23},{"ruleId":"255","severity":1,"message":"316","line":47,"column":25,"nodeType":"257","messageId":"258","endLine":47,"endColumn":40},{"ruleId":"255","severity":1,"message":"283","line":49,"column":19,"nodeType":"257","messageId":"258","endLine":49,"endColumn":28},{"ruleId":"255","severity":1,"message":"287","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"255","severity":1,"message":"270","line":9,"column":9,"nodeType":"257","messageId":"258","endLine":9,"endColumn":16},{"ruleId":"255","severity":1,"message":"316","line":10,"column":24,"nodeType":"257","messageId":"258","endLine":10,"endColumn":39},{"ruleId":"255","severity":1,"message":"317","line":13,"column":7,"nodeType":"257","messageId":"258","endLine":13,"endColumn":11},{"ruleId":"255","severity":1,"message":"318","line":17,"column":9,"nodeType":"257","messageId":"258","endLine":17,"endColumn":15},{"ruleId":"255","severity":1,"message":"287","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"255","severity":1,"message":"265","line":12,"column":8,"nodeType":"257","messageId":"258","endLine":12,"endColumn":21},{"ruleId":"255","severity":1,"message":"312","line":33,"column":10,"nodeType":"257","messageId":"258","endLine":33,"endColumn":20},{"ruleId":"255","severity":1,"message":"270","line":39,"column":9,"nodeType":"257","messageId":"258","endLine":39,"endColumn":16},{"ruleId":"255","severity":1,"message":"271","line":16,"column":11,"nodeType":"257","messageId":"258","endLine":16,"endColumn":18},{"ruleId":"255","severity":1,"message":"276","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"266","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":37},{"ruleId":"255","severity":1,"message":"319","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"320","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":19},{"ruleId":"255","severity":1,"message":"321","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":12},{"ruleId":"255","severity":1,"message":"277","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":11},{"ruleId":"255","severity":1,"message":"278","line":10,"column":10,"nodeType":"257","messageId":"258","endLine":10,"endColumn":21},{"ruleId":"255","severity":1,"message":"279","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"255","severity":1,"message":"267","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":15},{"ruleId":"304","severity":1,"message":"305","line":79,"column":25,"nodeType":"264","endLine":79,"endColumn":110},{"ruleId":"304","severity":1,"message":"305","line":86,"column":25,"nodeType":"264","endLine":86,"endColumn":83},{"ruleId":"304","severity":1,"message":"305","line":92,"column":25,"nodeType":"264","endLine":92,"endColumn":83},{"ruleId":"304","severity":1,"message":"305","line":98,"column":25,"nodeType":"264","endLine":98,"endColumn":83},{"ruleId":"255","severity":1,"message":"281","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"255","severity":1,"message":"282","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"274","line":16,"column":10,"nodeType":"257","messageId":"258","endLine":16,"endColumn":16},{"ruleId":"255","severity":1,"message":"283","line":16,"column":18,"nodeType":"257","messageId":"258","endLine":16,"endColumn":27},{"ruleId":"255","severity":1,"message":"284","line":17,"column":10,"nodeType":"257","messageId":"258","endLine":17,"endColumn":20},{"ruleId":"255","severity":1,"message":"285","line":17,"column":22,"nodeType":"257","messageId":"258","endLine":17,"endColumn":34},{"ruleId":"255","severity":1,"message":"286","line":26,"column":27,"nodeType":"257","messageId":"258","endLine":26,"endColumn":40},{"ruleId":"255","severity":1,"message":"281","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"255","severity":1,"message":"282","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"322","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"323","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":17},{"ruleId":"255","severity":1,"message":"324","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":17},{"ruleId":"255","severity":1,"message":"325","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":22},{"ruleId":"255","severity":1,"message":"326","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":17},{"ruleId":"255","severity":1,"message":"327","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":23},{"ruleId":"255","severity":1,"message":"328","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":16},{"ruleId":"255","severity":1,"message":"329","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":18},{"ruleId":"255","severity":1,"message":"306","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":18},{"ruleId":"255","severity":1,"message":"330","line":59,"column":7,"nodeType":"257","messageId":"258","endLine":59,"endColumn":24},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"no-unused-vars","'setContext' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Router' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SideAndNavbar' is defined but never used.","'useContext' is defined but never used.","'Input' is defined but never used.","'Message' is defined but never used.","'Form' is defined but never used.","'history' is assigned a value but never used.","'classes' is assigned a value but never used.","'formError' is assigned a value but never used.","'setFormError' is assigned a value but never used.","'errors' is assigned a value but never used.","'loading1' is assigned a value but never used.","'useState' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'useForm' is defined but never used.","'users' is assigned a value but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'setErrors' is assigned a value but never used.","'usersValue' is assigned a value but never used.","'setUserValue' is assigned a value but never used.","'assignLoading' is assigned a value but never used.","'useCallback' is defined but never used.","'usersloading' is assigned a value but never used.","'projectsloading' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'select' is already defined.","'opt' is already defined.","'el' is already defined.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'UserTable' is defined but never used.","'list' is defined but never used.","'personCircleOutline' is defined but never used.","'reorderFourOutline' is defined but never used.","'UserList' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Collapse' is defined but never used.","'AssignUser' is defined but never used.","'CreateTicket' is defined but never used.","'one' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'query' is defined but never used.","'createData' is defined but never used.","'indexVal' is assigned a value but never used.","'index' is assigned a value but never used.","'markersArray' is assigned a value but never used.","'setMarkersArray' is assigned a value but never used.","'rows' is assigned a value but never used.","'length' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'useQuery' is defined but never used.","'FETCH_USERS_QUERY' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]